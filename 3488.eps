%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1608.i105.022.S.m005.c11.fly helicopters set.eps
%%Creator: Adobe Illustrator(R) 17.1
%%For: Agor
%%CreationDate: 8/27/2016
%%BoundingBox: 0 0 426 305
%%HiResBoundingBox: 0 0 425.6998 304.5386
%%CropBox: 0 0 425.6998 304.5386
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.1.0 x273 R agm 4.7709 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2016-08-27T19:40:03+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-08-27T19:40:03+05:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-08-27T19:40:03+05:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7P5jstV8i2kutaBepH5c&#xA;tyH1DQ7sPJFDGzAF7Jlq8W5/ut1/lAy6JEtiLLTkBiLimPl+w8162LbV9e1ZYLYlZrfR9JLRQihq&#xA;ouLhv30pBFGVeKdiGGCYETVLinxxEr2LJJ5daWVhBa20kI+w8lxIjH5qIHA/4LK9m3dZ6/mH/lit&#xA;P+kuX/smx2XdDtdecOR46Zp5WuxOoTg0+X1I4aH4/tXdA6h5l1vTmRb610uBnFUVtRnqR40Flk44&#xA;+Llfy/a1ZM0YfUQEri/MLVp9ag0y206ymM42uUvn9AMQ1ELNbrJy+EdIiNxv1oygAN+L5MI6jilQ&#xA;Ma9+/wAmQ/WvOP8A1a9O/wC4hP8A9kWQqPf+Pm37uF15x76Xp1P+2hP/ANkWNR/H9qd0T6/mH/li&#xA;tP8ApLl/7JsGy7ro5tdMiiWztVjJHNluZGYLXchTbrU+1Rjsu6OwJQ95dyW/AR2s10zkjjDw2oK1&#xA;YyNGo+/FUH+l9RIFNEvASpPxPZgA9lNLg/gMUrG1LzEVVo9GWp+0st0ikf8AALIPxxVabzzc1Cml&#xA;WIB7SX8qsPmEtJB+OBUJqev+ZNLtJL2/03T4rKBGee4/SMgWMDpy52ibE7YqiUvvObgk6RYR7kAP&#xA;qEtaePw2bj8cV2XfXvNaij6Rasf+Kr5mFPcvbxGv0YqqDU9cXh6ujO1ft+jcQvx/5GGKuFVw1e/I&#xA;qdFvV61q9maUPtcHriqPtp/XhWX03i5V/dyjiwoabjfFCU+d5hD5M1+YsUEWnXb8xWo4wOa7eGAp&#xA;HNE+XJvX8vaXPy5+raQPz8eUSmv04UFVudX062lMM0vCRaErxY9d+wOK0pf4h0f/AJaP+Ef/AJpx&#xA;TTv8Q6P/AMtH/CP/AM04rShe+bvLtjavdXd4IreOnOQpJQciFHRfE4LWl9t5p0G6tormC69SCdFk&#xA;icJJRkcVU7r3Bw2tKn+IdH/5aP8AhH/5pxWnf4h0f/lo/wCEf/mnFaVrbVtPupfSgl5yEE8eLDYf&#xA;MDFFJb530SfW/LVxpcKh2uJbbmpIA9NLmN5OvginJwlRtjIWGPtpHnnSpZbfSV9Wx5kw0kjFFJqN&#xA;pCtD45m+LinvLm6T8tqcRIx/T+O9B3GofmjEdrGVx4gxn8F5YawIJ1g70s1Dzp520uIT6tHJp9sW&#xA;CC4nARORqQvJlVamnSuTjjxHk1Sz6oc7+ShJ+ZWrR05XhqQGUBVJIYVUiniDUZL8vj7mo63UDmWK&#xA;eYtW1fXdQt7yR+ckE1uxBGxiilDshC/zCuRz4LxShDYyB+0J0+srNHJk9QiXnE3kPzi87yLcxjkx&#xA;YfHMCATt/uvJxxkCnKOvxXsD9n63ov5Yarr/AJVvLVtTle8REuo3gSSQ+oZjD6X2xv6fovTbau3U&#xA;5iS0kuOUiRREfsv9bkDtWHCIgEkX9tfqe4+XPOema4zQor214gBa2lFCa1PwnvsMoyYjHzczT6qO&#xA;TpRT/KnJdiqD1r63+iLw2bFboQuYSv2uQUkU9zlOo4vDlw/VTZhrjF8reYnzH5g0WC2hisby5uZY&#xA;xevexXAntRZsf7wxsq/ECQrp+z15HNdixGGHjEjxcN89nNnMSycJAq682Xp+YujwwRnUYbq1mKrz&#xA;BtLjhyIqaOU40/2WZEdcKHEKP470fydOR9JBHvC5fzN8nGlb5I61oJWSI7ezspywauJ6H7P1qezM&#xA;3d9/6kVH588qyj93qNu5oCQk8LEV/wBVzh/Nx7iwPZ+UdD8j+pjHm/VI/MNpe6JN8Wk3ICSemeLM&#xA;qsGHxdqlc0uq7WyRmRHkHNw9nRMRxc0y0bzs0dpaJqETxeoiBZpQArFgKUkTkgr2DUJ+edFA+kW6&#xA;DLKQnIR4ZCJOw5ivI77dasebL7a6huY/UiNR3HcfPJkUnHlExYVcDY7FXE0BNK+wxVgmr+XfO/m6&#xA;CeLUb0+W9JdGEGmWjJNdSsVIH12ejR+nX7UMdQw2LnAyBAea/l5+ZfmTy7PNoetXSXkNlK0D2N44&#xA;iuIvTJVlt7hqREJTaOYqKfZftkBJslC9w9ti85eUZhWLW7B9q0FzDWh8Ryydhq4SjYtX0mb+5vYJ&#xA;KbnhKjdfkcNrTzXzx/zkH5d8rXjWQ0+4vrkNNGvF440LQStC9WPI05oQPhyJkyEHg/n/APODVvO0&#xA;0X155bGyhVkSys3KxNyJPKRWY83pQV6eAG+QJLYIgM4/IbzZrOn6zNo36QabTZ4PWSC8LScGhKrw&#xA;g+NeLMj1PXZem2Sx7mnH1eTw48VW938v+brTV7WKdoXtVnalszkMkqkkI6sOgcAFeQFajvllNMNR&#xA;GRrqn2BvdirsVdirsVUL7T7HULV7S/t47q1kp6kEyLIjcSGFVYEGhFcINKQ8c/ODyxqWn6qfMFnZ&#xA;z39ndsgnW2T1GhkAVByWoPBqfa7HrTbM7T5hVHo6fWaKUp8Uerz/AFL8wfL2i6nc6bGJZWt/9HuZ&#xA;FVGUyAAS8CSaUYUBG47HL4y4hZcXJoZRNRrlX61A/m5oZXiYJqVJ2VQasAD8QPL9nxyyxdtP5HJw&#xA;1smmi+dLTVL2HUbMgy2ThjCyhCPg4AFUCinEbUyJgDGgwyRnjlcgzzyNq1zqGvE0WN1Swh4IGLSL&#xA;DLIztsVAorVb2+WYmbHwhy9Jk4pih1ew5hPQOxV2KpHD5M0OLUDehJG3YrbM5MClmDmif6wrTpmJ&#xA;HRQBveu69vk5B1MiK+3r808zLcdCz6VplwCJ7SGSvXlGp/WMplp8cucR8myOaceRKU3X5f8Ak66q&#xA;ZdKgJPcL/DplJ0OI8gR7iXJh2hnj/EWF6hpy6RqctiIzFbx/7yinw+l+xT5DbOW12nOPIQe/Z3On&#xA;z+JES69feqWuowx2gsrmH1oFX0wV4spjpQK6sQem21a/hm90nbGPgEcmxG3k8/ruxMhynJhI3N9x&#xA;B8k38k6rGLoWHqsaM8cPqBlaSJRzQjmAWKrsT12rmyxarHMVGQP3uLPR5seTiMaEh6q5A9eW253+&#xA;NM5y5sdirsVdirDvMn5ReQvMN5Lf3+nFL+c1lureWSFmNKVKq3AnbqVwGIZCRDB9U/5xh0CYltM1&#xA;2/sye03GcA+wT0P15HgZeIWL6j/zjn59tQTp+qWd8ijZXaSGQ/QVZfvfBwMhlYL5h/Kz8wbR0Gqe&#xA;XLmcQqVSS3Q3CBCzSH4rcyAAs7Nv44KKeIFhmpafc2Fy1vJo7x3ClVMMiSmQFxVaoQCKjB1Z16bT&#xA;DR112/iVotMuZA7BYGiil+MlDIAtF3PBS23YVw0x4gU5v/Ofm+ygk0i/vL23TiEltLiSRX4FdlIc&#xA;c+JXt0Iw8R5NQ0+O+IRFvbPyS81arZo2m+ZtRLC+MI0i2laaaZXeoK8uBVFO2xfY4Ypnvye05Nrd&#xA;irsVdirsVSLzLe67FdaZa6fp5vLK8m9LUpw3H0Yyy/Fsa9CxO1NqbVGApChqP5beQNSuDc3vl6wl&#xA;uGJLy+hGrMT1LFQCx+eWDJIdWs44nohf+VRfll/1Ldj/AMihh8WXejwoq9n+WX5f2TtJa6BZxOw4&#xA;sViFSOtN8fFl3olggeYtf5H02CHSo7qTRotJ1AtNE6iNVlMYlIWrABqMEU0/sORM5HmWUcUIfSAG&#xA;SZFm7FXYq7FXYq7FXYqx7zNoet6neae9ncWkdrZSi4eG4hkkaRwkiFSyyKvAiQHjx6jrkJ44y5gF&#xA;nCZjyKkdB1kiht9G+i1kH6nyk6TF/Mj8g2fmJ/zpfNd5V8vavpAiiu5rKeKKIxmaKCRblzyHAvK0&#xA;jDZdm+GrHeo7yxafHA3GIDHJmlLmSWSZe1OxV2KuxV2KuxV2KrLiJpYJIlkaFpFZRNHTmhYU5LyD&#xA;LUdRUHFWC3H5NeW7q5mu7y7uby7uHMk1zdRafPKxPi8lqzUA2A6AYKZcZquitZflPpFhJDJp+pXt&#xA;i0EvroLVLGAep6bw8mEdqoYiOV1FfHGkWy2HTLRIYo5E+stEioJ56SSsF7s5FScKEVirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVY/5q8x3fl57XUp4kk8ugmPVp1DGa15kCO4oKhoQfhkFKrXl0BwFICfQzRTRJNC6yRSKHjk&#xA;QhlZWFQykbEEYULsVdirsVdirsVdirsVQOo6DoWpSJJqOnWt7JGOKPcQxylRWtAXVqDFbQn+CvJv&#xA;/Vh07/pEg/5owUmylXmTy/5T0zTxcQ6BprOZAnxWkJAqCf5fbMXWZzihxDvYzmQHklh+XHlGy83N&#xA;5oS0Et47ySNZypbmy/eAjiLYQiNaV2K0bvWta6r+VcncGrxS9Z8u6P5M1W2YvoGmrcRn41FpBuD0&#xA;I+HNpo9SMsd+YbITtN/8FeTf+rDp3/SJB/zRmXTOyirbTNM0e3lOlaZFDzILwWccMJc9K7mJDQHu&#xA;cKFv6Uvv+rRd/wDB2n/VfFXHVb0Ak6RdgDckvaf9lGC1YhpP50+W9V833HlKzsL99YtjKJFItRCT&#xA;D9oJN9Y9Nz/koS3WoFDQCQVl/wClL7/q0Xf/AAdp/wBV8krv0pff9Wi7/wCDtP8AqviqYIxZFYqU&#xA;JAJRqVBPY0JG3scVQGua7YaLZrd3xYQtIsQKDkeTVI7jwyvJkEBZcjTaWeaXDHnVqz6pp8VrHdz3&#xA;EcFvLThJK6oCSK0qxArtkoTEgCORaZRINFQ/xH5e/wCrpaf8j4v+askxp3+I/L3/AFdLT/kfF/zV&#xA;itO/xH5e/wCrpaf8j4v+asVpB6j5+8i6Zw/SXmPS7L1K+n9YvbeLlTrx5utcVRMHmryvPCk0GsWU&#xA;sMgDRypcxMrKehVg1CMVpf8A4j8vf9XS0/5Hxf8ANWK07/Efl7/q6Wn/ACPi/wCasVp3+I/L3/V0&#xA;tP8AkfF/zVitK+qz2Nvpd5cX4U2MMEkl2HAZTEqEycgdiONcVeLeXPLMOl6Zo995sS7/AEFqUSyW&#xA;1jDeXiWunGUl44WgWX4hwKk1712zHlMxO/0u00+kjngeA/vY9P5w8nrenWmmaTp0UPl3TYjZzEyD&#xA;6qYo4iSBV3YmrFqUrRj45ePJ1sokGjsVb6z5jJBFhaBTWvK7kDDw2W3Yf8NhQp+v5raI/wCg2EUt&#xA;dv8AS5pFp/0jRnFUFqWr+YtMs3vNQOl21rHTnLJPOFBJoB/d9zkTKhZZ48Upy4Yiyx1fzWtWvXt/&#xA;0lpYKIrVP1kRGpNaT8KMenw8PpyHjR73K/k3P/MLJ7S+803dtFdWy6ZNbzqJIpVmnKsrCoI/d5YD&#xA;biTgYkg7EIn1/NIVB9RsXao9RvrcyCncqPqz/dXCxX/WfMS1L6falQRQR3bs5G29Ht41/wCGxVGW&#xA;k88sZM9u1s6mnFmRgfdShbb50Ptihjv5izCLQo2LBQbhBU/6j5re1P7oe/8AW15OTya/8yi1uYok&#xA;j9YOCSy9s0UcdhppH6B58lsdSjkjQBWPF1YNQg9Rtl+CcsUuIMommcf8rY0rvayV70b+zNqO049z&#xA;Z4jv+Vs6T/yyyff/AGY/ynDuXxA7/lbOk/8ALLJ9/wDZj/KcO5fECWa9+ZcF9Z/VrWF4Q5/esSCS&#xA;PDtmLqtd4keGOzGU7Y/beYrW3mjneURBGBLOeI6+J2zXYxISBDWHtcUiSxJLGwaN1DIw3BBFQRnX&#xA;AuUuxV2KsS/MRdJutPtNO1C9ishPcoUeaRIlZgr0Tk5Aq29B7Zj6nGZxoGnO7P1RwTMwL2pGeT9Y&#xA;069s5YbK7iu4rZzGJoJFkSqbMAykjbLMUBGIiOQFOLlJlIk9U/MkY6sB9Iyxra9aH+dfvGKoWfVE&#xA;jl9NE9Q9iCKYpphXnfyxo/nQWsWsQGSC0LPCqyMqBjSrECm+2NFj4kBHivZlGkXEGn6fb6fUmKzi&#xA;SJWZizBVAUVr1yXC451MeIjoE5R1dA6mqtuDkXIBBFhvFLsVQesaTa6vplxpt3yNrdL6c6qaFkJH&#xA;JDUHZh8Le2Kr9R06z1CxmsbuMSW068HQ+HYjwI6jBKIIotmHLLHISiaIYon5TeWkXik94g8FmA/4&#xA;0zH/ACsfN2x7dznmI/L9qn/yqTQf+rhqP/I6P/qnj+Vj3lP8vZf5sPkf1sX8+/lxfaToYvtDurq7&#xA;mjlUXEbuu0RBBZdl6NSvtlGfCIR4rOznaPtnxJ8M4xHueeJYeZZYJPXNwJAyenH8DqwNeRJLinHa&#xA;m2/tmCNTireTn5NWRMCAiY0bPLfp06qp0PVPWVPVmEbXBjD8IlJgCkiQVk+2afYP/BZL8xg/nde4&#xA;8moa7MR9MQeC+f8AH/N5fayjyfeed7GVrY602n6XAzG3NzHFNHJ8VCp3onvRh7Zk6XUwlLhE6/Hm&#xA;6rtfKI44z8LjyH6qP0/Ln76p7Po2oveW5E/EXUVBNwHFWqNnVSzEK2+xPUHr1zaEU85hzDJGwj8D&#xA;a7FWKfmN5cn1nROdsx+s2RaZI67OtPiX506f25h63AckNuYYTFh4R+lbLjTmeQJPKuxBAoKU7UO9&#xA;e+aUxHDVervaaNtrqdpXd6ih25BdyCAamvQ7++OOIB9QsKQWxqFuej1+kf1yvhK039dhPQnoO4O4&#xA;FCe3U70ycwDyFKA39bjoftVqKGvTrUEd67d8AA4SCN1ps3nFQwfiPi+0C24UlVoP5jQV7dcceME1&#xA;I0pRFk80U5kkDGK4EkV4IUiLPbsG4LynMy7bA8UTYnqaZstNrcWOAFG+rXON/o/AZx5J/MBNGt49&#xA;PvYLmS05P++eX13X4jwb425fElOYG3KpHU1u/lLF5tmImPPk9Zt7iG5t4riFucMyLJG/irCoO/sc&#xA;z4yBFhyVTCqR+avLo1nT7m2KRyC5geAiRQ3EmpSVK9Hjb4hgItlE0lnlX8v7DRNO9CFfq0zrGbmS&#xA;EnlNMsao8snIvu/GpAOACkmSJ1LTNTtIZJ4nWeGNS78pfSYKoqftArt7sMx8pzD6BE/Y3YzjP1WG&#xA;FR/mPYPp9vqQguTp92oe1vAC0MinukgXicwpavUDnAfN2mHsyGT6ZgroPzL0d34qzhiDxLbCtDT9&#xA;kd8A1uf+bH5t0uwzXNO9M1y3vIjw4pJ19FqqxWm54tuOn9MycGvMpcMxwz6ebqM/ZQwxIG8Ect6p&#xA;JJQEkcSQe3Sm2Z/EXAOlx3dIq115bZeAA4fyk/1OJLOGERFBkVrOtxbxzKCFkHIA4qVTFXYq7FXY&#xA;q7FWmVWUqwBUihB3BBxIUF5d588i6MtxGdL8valPcSyW8k0unSxpbiL6wv1hOEs8fF/RDceK0rTM&#xA;eWlxno7DH2nmiKu/eEu/wT5d2P8AhfzOCOhE9qD/ANRWD8pj7mZ7Vzf0fkgrXyG82uyww+WdbXT5&#xA;jbLby3d7BbrDVn+tSyuks7tReHBVQknw64PymPuUdrZh3fJ655e8t6ZoFl9UsPVMfd55Xlc06Crk&#xA;0UV2VaDMiMaFOvyT45E0BfcKTTJMHYq7FXhH5l/lp5b8qaHqHmOXWvqlnESbezmj5F5Hr6cEbqa1&#xA;Y7D4dhudgTmvnoe4sOBda/kRrlxaw3A1G1UTIsgWrNTkAaclBU9eoNMq/Iz7wjgKr/yoHXf+rla/&#xA;dJ/zTj+Rn3heAsd8yfl1+gNY0TRrvV7VtT165FtZWqlg1P2pW5AAKuw61J2UE4/kZ94XgLIh+QWv&#xA;Dpqdr90n/NOP5GfeF4CiovyP1yOIRm+tXoa1Jk6/8BkD2dPvCOAotPyd15QAb62oOtDJ/wA05H+T&#xA;J94XwyhPI/l3Rr3z35m8uajOL1/Ly2TxmFnVXNzEzyLKKbGNgB8L/PeoGRi7NgPq3ZDGHsqqqqFU&#xA;BVUUUDYADNkzbxV2KuxVjH5nWutXn5fa/ZaJbtdapeWUttbwRyLE59cek5V2VgGVGLDb6R1xVMPK&#xA;emix8o6PpstkLL6tYW9vJp5ZZRCUhVWhLr8D8acajY4pBpA6n+XHkvUXMk2mRxyH9uAtD9PGMqp+&#xA;kZTLTwPRzsXaeeGwl89/vUdN/LLypp03rWsMqvt1lcjY1G2VnRwJBPRObtPNkFSI+SD89aHdaf5W&#xA;vrryzpD6prSqFtLQTCM1dgpkq/wn0weXHvSmZLg8SeaB5dtbXTLI3lur6isEf1t3IcmbgPUOwCfa&#xA;r9kAeGFFp3ih2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Koe/07T9RtWtNQtYry1cqXt7hFljJRgyk&#xA;o4KniwBHviqIxV2KoefTtPuLq2u7i1imu7MubO4kjVpITIvFzG5HJOS7Hj1GKojFXYq7FVGOys4r&#xA;ma6igjjubgKLidUUPII68A7AVbjyNK9K4qrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq4kClT12GKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVpuPE8t1puD4Yqx7h5G/wCWO0/6RR/zRgTu7h5G/wCWO0/6RR/zRiu7uHkb/ljtP+kU&#xA;f80Yru8d/O7R/wAun1nyizal+iwb8R3MEUUpEluyszybD4irKqcd/t4pD1+G28hxAhbS2NevOAv/&#xA;AMSU4o3X8PI3/LHaf9Io/wCaMV3dw8jf8sdp/wBIo/5oxXdMtIGiBZf0XDFEtR6voxCKp3pWirXC&#xA;hF3l3b2drNd3DcLeBGklcAtRFFWNFBOwwE0LLPHjM5CI5lsTerbCe24y+onOCrFUaoqtWAagPjQ4&#xA;QWMokGjzCC9fzD/yxWn/AEly/wDZNih3r+Yf+WK0/wCkuX/smxVDnUfNFf8AjjQn/o8H/VLAl36R&#xA;80f9WaH/AKTB/wBUsVSWfz1rsPmaDQG0OIzzx+oJfrygD4WbiQYq1+D8ch4g4uHq5A0kzjOQD0Dq&#xA;nX6R80f9WaH/AKTB/wBUsm47v0j5o/6s0P8A0mD/AKpYqiPX8w/8sVp/0ly/9k2FDvX8w/8ALFaf&#xA;9Jcv/ZNiqKe4khsnublArxRtJLHExkHwgkhSQlengMIFlEpUCUq0Tzloesz+hZyMJaEqrgDlTrSh&#xA;PTLJ4jHm4+HVQyGgjP8AEGkf8tH/AAj/APNOQ4S5Fu/xBpH/AC0f8I//ADTjwlbd/iDSP+Wj/hH/&#xA;AOaceEralL5r8vQsFmvUjYioDhlNPpGPAV4ghIvzA8nSztAmpxmVOXIFXA+E8TRioB3OE45VbAZY&#xA;k11CNi8zaFKvOK7WRa05KrMK/MDBwlnYX/4g0j/lo/4R/wDmnHhK27/EGkf8tH/CP/zTjwlbXwaz&#xA;ps8qwxTcpH+yvFx79xg4Sto3AlRN9ZCQRm4jEjGipzXkSfAVyHixurDLglzpWybF2Ksa1zznDZK6&#xA;2iCeRKAufsVrTalK/fmm1Xa8YHhgLP2OywdnGQuWzxzzB5g0Dzx5qeO6a+W808lbeOkIgiMbqjNF&#xA;UyMCzfFX+zKc+rzCImao91ufpTjj6BCMj3yFvS9I89m0tBbX7SOLUiE38sUhVgqijSzL8AbxJpm0&#xA;0Wo8TEJSdN2hhnHKRjETe/DYv4Ru/kzLT9SgvY+SbNQGlagg9wczCKcDDnE9uRCLwN7sVQuoW8k8&#xA;Dovxo6NHLCdg6MKEV7GmAi2UJcJBHMMG8redtM0TQn07WrpVn02eS0jINWdEoR8P2vh5cenbKMc+&#xA;CNS6O21eD8zl48IJ4tz5Hrvy803j/NPyMVBfU1Vj1URTn8fTGH8xDvav5H1P837Y/rXf8rR8h/8A&#xA;V0H/ACJn/wCqeP5iHev8j6n+b9sf1u/5Wj5E/wCroP8AkTP/ANU8fzEO9f5G1P8AN+2P61zfmV5R&#xA;aLlbXT3Uh2jhihl5ufBeaqCfpw+PE8t0HsrPHeYEY95kKH2sB1afW9X85DWtPtJIZbEwE28nAEcf&#xA;iWpZo/tDtQ5RKE5TsDk7HFrtLg03hzyAxnxbgS9x5A8no2i+bodRtUnlt2tSWdHjLcyjxuyMDsvd&#xA;czYXIW8xqs0MWUwuxsQe8EAg/an0ciSIHQhlPQjFnGQIsLsUuxVbI0axs0hAjAJct0pTeuIQSAN3&#xA;iNtemx1W0igvER4XLafHxo8sfKQ19+Cwkv0oOvUZmQ0mKE5z34p8+78fgOl8fUZIQAA4Md8PQkfj&#xA;5vXYfMGntpQ1CSVUURmR4wwLfCCSFHU9NvHMc4pCVOzjqYGHFara65pNzbR3Ed1GI5BUB2VSPYgn&#xA;AccgeTKOogRdhS1LzHpNhYXF406TCBGk9KJld24itFAOGOKRNUxnqccQTYPxeUP+d8+pX6Lb2V1a&#xA;2hCkRkcD05NWQrWpGw2p88tyaGUqAlQ67bny8nD/AJSEbJjfd6vt8/LooWfmQSeZWu9HsodOur9/&#xA;TeZamR/UYFjNJ9pyWFcyxhjGO+9Ounr8kp3E8L07TfMN6kaxX0aSyqAXljahINf2SoFdvEZgzgDy&#xA;dlh11Cpc07s7+2u1Jiajru0bbMK+3h7jbKjGnPx5YzGyIwNjsVYN+aMOuzQaemmtGIeUpuRK7opa&#xA;ien9hX/yuuYOu0pzAAGnP0OWELMr+H9rAF03zSCGP1So3qJph/zKzXfyPL+c7D89h7pfIfrZQPzN&#xA;1mMBJLG55qKN/ok53Hvw3yfjazoGB0WD+cP9MFs/5malNE0bWd2oYUJW1mBp8+GQyT1khVMoaTBE&#xA;3xR/0wSS51sSwlTZXy8/2jaT9jX+TNb/ACbn7nN8SH86P+mCS2unaJa6hLqEFnqC3MxYuTaPT43D&#xA;t0jU9R45fPTamUeEjZqjHEDYlH/TRT6180y2frJFplzPFM/qfHBcRkEqARtFICNs2ugyZcOPglAm&#xA;u51faPZePUZBMZYxNV0P++Cb/l7r1yNZg0sWEsFrK8xhZknVYo+DSCOrwotAwovxDagzMxZ5E8PA&#xA;QGjU9nRB8XxIylQvl6jyvn8/m9SzJcR2KuxVi3l/y236T1nUdUtYpPr80ZtRKqyEQpEOxrxq7Ntl&#xA;UYbklzcuoqEIwJHCDfvJTZ/K/lp14vpNky+Bt4iPxXJeHHuDSNVlH8cvmVCTyV5QkILaNZCm3wwR&#xA;r/xEDB4Ue4Mxrs4/jl83n35o+V306K0by35aW4jkLm6mtYzJIhFOI4APRepqBmPnxfzQ7nsrXWT4&#xA;s/dZp5VoPmfVPLt1zkWSa8TkrfWw1aNtxK/CwplEchjKw7HUaHHqMHhZJSIu7HP9Kcxfmtqcd7Pd&#xA;rbwepcKiyIQ/H93XiQAa1+LxywaqYJO27gT9nNLLHHGTOoknmL3r+j5Jp5c/M6KKO4S6t+byyvP+&#xA;7YqAZDVgAQdq5PHqzG7Di6/2ZjmMTjnw8MRH1b8tgbD0vyBrus6veSTiye20T0Twllr+8m5ChSoF&#xA;Rxr0+ntl8Mxmbqg6/J2ZDSY+Ez48hlyHQM4y1xHYqpXduLm0mtyxUTRtGWHUcwRX8cMTRtjOPFEj&#xA;veG6h+XXmlNWMYjunSoEhiWJ45QSw5CQpxThSMpzDH7Vc2ByAnisOmjhMI8BhInyJo/bszSP8tdS&#xA;XSxL+kX/AEmsZYQGhjMgBKoWqKb0BOVz1d2By72UOy6AkT6u7p7lGHyL5p1QSX2oXC2N3K+9s/CU&#xA;gAAVLxkrvv8AxyGn1BxwEZHiI6jb7GWp7P8AGmZj0X0O/wBqnN+WnmWh4XdrKN9mLqSP+APXMga2&#xA;PcXFPY+ToR9qjqEOlaXNDp+veX7PnIg4z28jQl6bFloBU+I2pmrz9oyxSO0zDvAv59zt8PZ0JxAl&#xA;wCfddfLvQV15OtZB+k/Kk7vcWv759NnAMygb1jpUOPv+ddszNNr4Zo87Hf8Ar7nX6vsqWM+mwR0P&#xA;6O9Q0jXfMl6sk4eABSI6Oh3Zd6fCVp9rMLtLtHFpZiBBJO+3d+A29mdlZdVAzEhEA1v3sk8vatfX&#xA;VvFeB447iJ2SRAjUDqaMteZ+Fh/nXMw8JFjkRbiYpyxyo8waL0CCVZoY5VFFkUOAfBhXMcinfxNi&#xA;1+BLuuxxVD/o3TvUEn1WH1Aah/TWoI71pgoMuOXeqywwyrxlRZF8GAYfjiQCgGmM+b7vypoNnHea&#xA;ja/30ghiWAEHkQTyKoV+EU3pgIDIElHQeWLJrZBc8melaKSoHt440vEv/wAJ6P8AyP8A8GceHzRx&#xA;O/wno/8AI/8AwZx4fNeJB2R0PTfNS6RGf9OntDcxK1SQqvxahpTf78QN0k2GSZJg7FXYq7FXYq7F&#xA;Ul80+YpdCso7pbGe9jZuMht0MhjFKgsq/FQ+PTIylTdhw+IaBA9+zxnzV5q8j+ZPNemaxr0+oyW+&#xA;jgm30Aj07FpTWss8YHORumxbjQUpStaTnj1djDsvON4mvcU+H5pflp/1aLb/AKQ0/wCacj4uPu+x&#xA;u/k/V/zj/pix3zfrn5YeYmsLiBrrQdS02YT2uoaSi28m3VJVKvHKh8HU/cTV8bH3IPZ2qPOX+yen&#xA;eU/zN03zDqEdhZQzTNxPqTCIqicVrV2+ytcthmEjQcLUdnzxR4pEfNm2WuA7FXYq7FXYq7FXYqlP&#xA;mXS/L+paf9X1wRC2Lfu5JXEZV6GhRyRRqDJwmYmw1ZcUZipPOdJ8tKuo3zWHmm1tbawu/S09rhBN&#xA;K0YijduTrPAGXm7R7L0H0Ck6WAyeJEGJI3A5H4M4zl4fATxAHYnmPivvfIhnv7m7t/OWnWgum5yQ&#xA;x2qleVKMw5XZoT1yzNgxZa8SHEY+Z/Q14xkxk+HPh4uew/TaL8l+XtHtDc6dqGuwXbwXgigERjgF&#xA;x6kUco+EySuas7J8LdsvnO+QrZxceiiDubenAAAACgGwAzHdg7FXYq7FXYqpz29vcR+nPEk0dQ3C&#xA;RQwqpqpoe4O4xVUxV2KuxVT+rW/1gXPpJ9YCGMTcRz4E8ivLrxqK0xVUxV2KuxV2KuxV2KuxVTmt&#xA;raYgzRJIV6c1DU+/GkiRHJT/AEbp3/LLD/yLX+mCgnjl3u/Runf8ssP/ACLX+mNBeOXerRxxxoEj&#xA;UIg6KoAA+gYUE2uxQ7FXYq7FXYq7FXYqslhhlXjKiyKDUBgGFfpxVT/R9h/yzRf8Av8ATDa079H2&#xA;H/LNF/wC/wBMbWm47O0jcPHBGjjoyooIr7gY2qtgV2KuxV2KuxV2KuxV2KuxV2KoS91fSbF1S9vb&#xA;e1dxyVZpUjJHSoDEZKMCeQa55YR+ogfFD/4p8s/9Xey/6SIv+asl4U+4sPzOL+dH5h3+KfLP/V3s&#xA;v+kiL/mrHwp9xX8zi/nR+Yd/inyz/wBXey/6SIv+asfCn3FfzOL+dH5h3+KfLP8A1d7L/pIi/wCa&#xA;sfCn3FfzOL+dH5h3+KfLP/V3sv8ApIi/5qx8KfcV/M4v50fmHf4p8s/9Xey/6SIv+asfCn3FfzOL&#xA;+dH5h3+KfLP/AFd7L/pIi/5qx8KfcV/M4v50fmHf4p8s/wDV3sv+kiL/AJqx8KfcV/M4v50fmHf4&#xA;p8s/9Xey/wCkiL/mrHwp9xX8zi/nR+Yd/inyz/1d7L/pIi/5qx8KfcV/M4v50fmHf4p8s/8AV3sv&#xA;+kiL/mrHwp9xX8zi/nR+Yd/inyz/ANXey/6SIv8AmrHwp9xX8zi/nR+Yd/inyz/1d7L/AKSIv+as&#xA;fCn3FfzOL+dH5h3+KfLP/V3sv+kiL/mrHwp9xX8zi/nR+YTGGaKaJJoXWSKQBo5EIZWU7ggjYg5A&#xA;im4EEWF2BLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY9538rx+YNHaJABfQVks5D/NTdCfB&#xA;+n45dgy8EvJxNZpvFhX8Q5PBnRkdkYUZSQw8CM27yxCe+TNHtdV1G5huIHuRDaSzxW8b+m0kkdOK&#xA;BqGnKtOmU5pmI273K0mITkQRexKbReVtKur+1sUge1udRsrmS2ieQt6d1FLIERmoKjjHxO2VnKQC&#xA;e4j5N400JSEaoyifnZXad5T0nUdU1u1s45JY7Ce2itwG3KmYR3DHx+FWYYyymIBPW049LCcpgfwk&#xA;ffumknkfRY7mzhGnzSW9zdy28l6LjiI/TuHRV9PjViyJ1rlfjyo79P0N50UAQOE0SRd+aTeXvLWi&#xA;3Wl3OoXqSutnJeM8cb8S8dtDHIqVINN3O+W5MsgaHWnGwaeEomUunF9gCPt/KXlG7tXeze4lEyT3&#xA;VrOzcQIoJY4/TKkAmvqdcgc0wd22OlwyG19SPgQib3yj5Xs55xLYXPwW17crE8/E0snKgj4CaTCj&#xA;Anp75GOaZ69R9v6mc9LiiTYPKR5/zf1tR+TNGe4s4xpU5hubT60k4uf72QQ8zCq8aqeRHxYfGlR3&#xA;69yjSQsDhNEXz8uSD1jyp5XstO1aWD6zPLaSGOqMjG3cxqyLKopVDIWUuPDJQyzJHLdry6XFGMiL&#xA;NfZt1/Wu0Pyn5ZvLPRTIlxLJftSW5jcekJAHLwuBujKFBHjgnlmCfJOHS4pCHP1df0IG50vRILLW&#xA;Tc6NNaXunCELC13zobigUkhKbfa9+mTEpEijYPk1SxwEZXEgxr+Lv+DDsyXXsl8h+Vv0/rISXaxt&#xA;aS3R7sK/Cg/1qfdlGfLwR83M0Wm8We/0jm92RFRQiAKigBVAoAB0AGal6gBvFXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqxT8wta1Kz0o2el28817eAqZIY3b0o+jNVQaMeg+/MjTwBNnkHB1+a&#xA;UYVEGy8d/QOu/wDVuuv+RMn/ADTmy8SPeHnvAn/NPyTDR7fX9Na8K6Tcy/W7Sa0NYpBxEwpy+ya0&#xA;8MhMxlW42LbijkhfpO4I5d6a2Goapappbt5cuZbzShxhuf3y1XmzkFAlN+ZGVyiDfq2LfDJKPD6D&#xA;cfeg9Im8wacl6o0e5l+uS28pJjkHH6vOJqfZNeVKZOYjKt+TXiOSF+k7139DabyeYNVku7a9k8s3&#xA;DXlpNJNBLWYACWZpWXiEoftFa5V4YquLYuQc8yRI4zYPn1N9ynZazqNmj28Ple4+ozNMbi2JnPNb&#xA;iNY3UOUqv2K1wygDvxbsYZpR2GM8Jvv6hESeavMMkc9fLcguZDIkUypMAkMrq7x8ONCT6Y+L8MAx&#xA;R/nMzqchB/d7/Hkky3PmQapqt++k3TtqkNzBwZJT6a3JJ2PHfhXYZZUaAsbU4/Fk4pS4T6gR16o8&#xA;6xqwZJ08uXKXyWn1I3Q9beP0jEDw4UB6NkOAfztrtt8WfPgPFw1e/dSrceYdcmtb5D5bmF5ewm3N&#xA;5wl5BJI0jk5AIOZPp8hU7HEY4gj1bBMs8yD+7NkVe/c3o/mPXNMsbW3i8tSmaEoJp1SVPVWLlwqo&#xA;Sgb49274J44yJPEnFqJwiAMfL37pNLHqQtdQtLLQLm1t78Qgpxmk4GFi1astTyrloqwTIbOMRKpC&#xA;MCBKu/olH6B13/q3XX/ImT/mnLPEj3ho8Cf80/JNvLDeZtB1eK+h066ZB8FxF6MlHjP2l6de498r&#xA;y8E41Yb9McuKYkIn5PdLeZJ4I5kBCSKHUMCrUIrup3BzVEU9PE2LX4EuxV2KuxV2KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:ed752006-4370-884b-ab7e-bc308a5cbcbc</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:ed752006-4370-884b-ab7e-bc308a5cbcbc</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:097c89fb-dba9-4b79-9676-5a0bebc61574</stRef:instanceID>
            <stRef:documentID>xmp.did:bf5bd510-32f6-d54c-b61f-e3d93630c4e1</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4878a7b0-a420-9545-a7ea-e68a1a47c614</stEvt:instanceID>
                  <stEvt:when>2016-08-11T09:44:44+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f8fb3617-41d2-8449-9644-bd72c369e2f8</stEvt:instanceID>
                  <stEvt:when>2016-08-17T15:21:41+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bf5bd510-32f6-d54c-b61f-e3d93630c4e1</stEvt:instanceID>
                  <stEvt:when>2016-08-25T16:39:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ed752006-4370-884b-ab7e-bc308a5cbcbc</stEvt:instanceID>
                  <stEvt:when>2016-08-27T19:40:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>356.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -304.539 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 304.539 li
425.7 304.539 li
425.7 0 li
cp
clp
33.6785 115.375 mo
34.2464 114.92 li
51.4376 113.425 67.99 112.518 84.6828 112.924 cv
84.6659 113.736 li
67.9984 113.331 50.8437 113.882 33.6785 115.375 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.243137 .192157 .172549 rgb
f
138.15 115.375 mo
137.582 114.92 li
120.391 113.425 103.838 112.518 87.1455 112.924 cv
87.1624 113.736 li
103.83 113.331 120.985 113.882 138.15 115.375 cv
cp
f
85.4242 117.338 mo
86.4026 117.338 li
86.4026 113.806 li
85.4242 113.806 li
85.4242 117.338 li
cp
.854902 .819608 .819608 rgb
f
84.3247 113.806 mo
85.4242 114.97 li
86.4026 114.97 li
87.5036 113.806 li
87.5036 113.113 li
87.5036 112.91 87.339 112.746 87.136 112.746 cv
84.6923 112.746 li
84.4893 112.746 84.3247 112.91 84.3247 113.113 cv
84.3247 113.806 li
cp
f
84.3247 117.693 mo
87.5036 117.693 li
87.5036 116.279 li
84.3247 116.279 li
84.3247 117.693 li
cp
.235294 .235294 .231373 rgb
f
84.8498 112.746 mo
86.9783 112.746 li
86.9783 112.739 li
86.9783 112.351 86.664 112.037 86.2761 112.037 cv
85.552 112.037 li
85.1643 112.037 84.8498 112.351 84.8498 112.739 cv
84.8498 112.746 li
cp
f
105.212 140.173 mo
105.178 140.035 105.092 139.92 104.971 139.848 cv
104.729 139.702 104.388 139.789 104.246 140.029 cv
103.496 141.279 102.126 142.055 100.671 142.055 cv
99.1195 142.055 li
99.1195 136.728 li
98.0605 136.728 li
98.0605 142.055 li
78.0052 142.055 li
78.0052 136.728 li
76.9473 136.728 li
76.9473 142.055 li
72.1107 142.055 li
71.8193 142.055 71.5823 142.292 71.5823 142.584 cv
71.5823 142.875 71.8193 143.113 72.1107 143.113 cv
100.671 143.113 li
102.497 143.113 104.214 142.139 105.153 140.573 cv
105.225 140.452 105.247 140.31 105.212 140.173 cv
.113725 .0901961 .0823529 rgb
f
75.7371 120.953 mo
75.7371 118.971 77.0255 117.366 78.6163 117.366 cv
94.1061 117.366 li
94.5272 117.366 94.8665 117.79 94.8665 118.313 cv
94.8665 120.953 li
75.7371 120.953 li
cp
.768627 .27451 .270588 rgb
f
15.1112 109.757 mo
15.1112 109.757 24.9096 123.841 26.3802 123.89 cv
63.0203 125.024 li
98.136 126.114 li
98.136 122.927 li
98.136 121.448 96.9636 120.244 95.5146 120.244 cv
31.1218 120.244 li
29.8079 120.244 28.5425 119.758 27.564 118.881 cv
17.4355 109.757 li
15.1112 109.757 li
cp
.905882 .360784 .356863 rgb
f
111.723 134.56 mo
111.695 134.646 li
111.654 134.755 111.606 134.861 111.553 134.966 cv
111.472 135.125 111.382 135.275 111.277 135.417 cv
110.68 136.257 109.759 136.792 108.748 136.906 cv
108.578 136.922 li
108.342 136.93 li
75.7363 136.93 li
74.5755 136.93 73.4351 136.801 72.3391 136.545 cv
72.1768 136.504 li
70.5941 136.123 69.0884 135.49 67.7247 134.646 cv
67.2215 134.333 66.7384 133.992 66.2758 133.623 cv
65.1029 132.693 64.068 131.585 63.2074 130.335 cv
62.4446 129.227 61.8196 128.002 61.369 126.683 cv
61.2756 126.407 li
61.2431 126.309 61.2106 126.212 61.1944 126.114 cv
61.024 125.364 61.1824 124.576 61.6368 123.943 cv
62.1482 123.225 62.9721 122.803 63.8529 122.803 cv
99.6369 122.803 li
100.014 122.803 100.392 122.819 100.765 122.851 cv
100.927 122.868 li
103.436 123.128 105.761 124.134 107.636 125.709 cv
107.795 125.839 107.949 125.972 108.103 126.114 cv
108.351 126.342 108.59 126.581 108.817 126.829 cv
108.882 126.898 li
108.943 126.963 li
109.057 127.097 li
109.187 127.243 li
109.974 128.176 110.627 129.24 111.119 130.4 cv
111.151 130.477 li
111.163 130.51 li
111.184 130.555 li
111.228 130.664 li
111.301 130.843 111.37 131.029 111.431 131.212 cv
111.756 132.145 li
112.028 132.941 112.011 133.789 111.723 134.56 cv
.768627 .27451 .270588 rgb
f
86.4025 129.514 mo
85.3114 129.514 84.4239 128.626 84.4239 127.535 cv
84.4239 126.444 85.3114 125.556 86.4025 125.556 cv
87.4937 125.556 88.381 126.444 88.381 127.535 cv
88.381 128.626 87.4937 129.514 86.4025 129.514 cv
cp
.243137 .192157 .172549 rgb
f
87.9753 127.535 mo
87.9753 128.404 87.2712 129.108 86.4026 129.108 cv
85.534 129.108 84.83 128.404 84.83 127.535 cv
84.83 126.666 85.534 125.962 86.4026 125.962 cv
87.2712 125.962 87.9753 126.666 87.9753 127.535 cv
cp
.670588 .929412 .890196 rgb
f
80.4752 129.514 mo
79.3841 129.514 78.4966 128.626 78.4966 127.535 cv
78.4966 126.444 79.3841 125.556 80.4752 125.556 cv
81.5664 125.556 82.4537 126.444 82.4537 127.535 cv
82.4537 128.626 81.5664 129.514 80.4752 129.514 cv
.243137 .192157 .172549 rgb
f
82.048 127.535 mo
82.048 128.404 81.3439 129.108 80.4753 129.108 cv
79.6067 129.108 78.9026 128.404 78.9026 127.535 cv
78.9026 126.666 79.6067 125.962 80.4753 125.962 cv
81.3439 125.962 82.048 126.666 82.048 127.535 cv
cp
.670588 .929412 .890196 rgb
f
74.5478 129.514 mo
73.457 129.514 72.5695 128.626 72.5695 127.535 cv
72.5695 126.444 73.457 125.556 74.5478 125.556 cv
75.6389 125.556 76.5264 126.444 76.5264 127.535 cv
76.5264 128.626 75.6389 129.514 74.5478 129.514 cv
.243137 .192157 .172549 rgb
f
76.1207 127.535 mo
76.1207 128.404 75.4166 129.108 74.548 129.108 cv
73.6795 129.108 72.9754 128.404 72.9754 127.535 cv
72.9754 126.666 73.6795 125.962 74.548 125.962 cv
75.4166 125.962 76.1207 126.666 76.1207 127.535 cv
.670588 .929412 .890196 rgb
f
63.2074 130.335 mo
63.7207 131.081 64.3026 131.769 64.9321 132.405 cv
108.235 132.405 li
108.235 132.913 li
65.4456 132.913 li
65.7139 133.159 65.9904 133.397 66.2758 133.623 cv
109.097 133.623 li
109.097 130.335 li
63.2074 130.335 li
.976471 .713726 .34902 rgb
f
91.5054 135.756 mo
90.4496 135.756 89.5902 134.897 89.5902 133.841 cv
89.5902 125.892 li
89.5902 124.836 90.4496 123.977 91.5054 123.977 cv
94.4736 123.977 li
95.5295 123.977 96.3884 124.836 96.3884 125.892 cv
96.3884 133.841 li
96.3884 134.897 95.5295 135.756 94.4736 135.756 cv
91.5054 135.756 li
.243137 .192157 .172549 rgb
f
95.9843 125.891 mo
95.9843 133.842 li
95.9843 134.674 95.3065 135.352 94.4746 135.352 cv
91.5036 135.352 li
90.6716 135.352 89.9979 134.674 89.9979 133.842 cv
89.9979 125.891 li
89.9979 125.059 90.6716 124.382 91.5036 124.382 cv
94.4746 124.382 li
95.3065 124.382 95.9843 125.059 95.9843 125.891 cv
.905882 .360784 .356863 rgb
f
92.9893 129.514 mo
91.8981 129.514 91.0108 128.626 91.0108 127.535 cv
91.0108 126.444 91.8981 125.556 92.9893 125.556 cv
94.0805 125.556 94.9678 126.444 94.9678 127.535 cv
94.9678 128.626 94.0805 129.514 92.9893 129.514 cv
cp
.243137 .192157 .172549 rgb
f
94.5621 127.535 mo
94.5621 128.404 93.858 129.108 92.9894 129.108 cv
92.1209 129.108 91.4168 128.404 91.4168 127.535 cv
91.4168 126.666 92.1209 125.962 92.9894 125.962 cv
93.858 125.962 94.5621 126.666 94.5621 127.535 cv
cp
.670588 .929412 .890196 rgb
f
111.723 134.56 mo
111.695 134.646 li
111.654 134.755 111.606 134.861 111.553 134.966 cv
109.885 134.966 li
108.379 134.966 106.987 134.089 106.338 132.73 cv
105.976 131.979 105.205 131.492 104.369 131.492 cv
102.527 131.492 li
100.948 131.492 99.6612 130.206 99.6612 128.627 cv
99.6612 128.574 li
99.6612 126.995 100.948 125.709 102.527 125.709 cv
107.636 125.709 li
107.795 125.839 107.949 125.972 108.103 126.114 cv
108.351 126.342 108.59 126.581 108.817 126.829 cv
108.882 126.898 li
108.943 126.963 li
109.057 127.097 li
109.187 127.243 li
109.974 128.176 110.627 129.24 111.119 130.4 cv
111.151 130.477 li
111.163 130.51 li
111.184 130.555 li
111.228 130.664 li
111.301 130.843 111.37 131.029 111.431 131.212 cv
111.756 132.145 li
112.028 132.941 112.011 133.789 111.723 134.56 cv
.243137 .192157 .172549 rgb
f
111.723 134.56 mo
109.885 134.56 li
108.48 134.56 107.271 133.741 106.703 132.555 cv
106.273 131.658 105.364 131.086 104.369 131.086 cv
102.527 131.086 li
101.171 131.086 100.067 129.982 100.067 128.627 cv
100.067 128.574 li
100.067 127.214 101.171 126.114 102.527 126.114 cv
108.103 126.114 li
108.351 126.342 108.59 126.581 108.817 126.829 cv
108.882 126.898 li
108.943 126.963 li
109.057 127.097 li
109.187 127.243 li
109.974 128.176 110.627 129.24 111.119 130.4 cv
111.151 130.477 li
111.163 130.51 li
111.184 130.555 li
111.228 130.664 li
111.301 130.843 111.37 131.029 111.431 131.212 cv
111.756 132.145 li
112.028 132.941 112.011 133.789 111.723 134.56 cv
.670588 .929412 .890196 rgb
f
95.9843 130.335 mo
95.9843 132.405 li
89.9979 132.405 li
89.9979 130.335 li
95.9843 130.335 li
.976471 .713726 .34902 rgb
f
89.9979 132.913 mo
95.9843 132.913 li
95.9843 133.623 li
89.9979 133.623 li
89.9979 132.913 li
f
18.1232 110.694 mo
16.1778 109.862 li
17.7007 108.394 li
30.7522 106.649 li
30.9424 107.684 li
18.1232 110.694 li
cp
.243137 .192157 .172549 rgb
f
14.4852 111.132 mo
16.1778 109.862 li
16.6882 111.916 li
11.6736 124.091 li
10.6819 123.738 li
14.4852 111.132 li
cp
f
15.9249 107.762 mo
16.1778 109.862 li
14.1445 109.278 li
6.10763 98.8475 li
6.9092 98.165 li
15.9249 107.762 li
cp
f
17.6007 108.865 mo
18.22 109.593 18.1325 110.684 17.405 111.304 cv
16.6776 111.923 15.5859 111.836 14.9665 111.108 cv
14.347 110.381 14.4347 109.289 15.1621 108.67 cv
15.8894 108.05 16.9813 108.138 17.6007 108.865 cv
cp
f
16.9312 109.435 mo
17.2357 109.793 17.1926 110.33 16.8349 110.634 cv
16.4773 110.939 15.9405 110.896 15.636 110.538 cv
15.3314 110.18 15.3745 109.644 15.7322 109.339 cv
16.0898 109.035 16.6266 109.078 16.9312 109.435 cv
cp
.854902 .819608 .819608 rgb
f
108.342 136.93 mo
99.1195 136.93 li
108.342 136.93 li
108.578 136.922 li
108.748 136.906 li
108.752 136.906 108.756 136.905 108.76 136.905 cv
108.756 136.905 108.752 136.906 108.748 136.906 cv
108.578 136.922 li
108.342 136.93 li
76.9473 136.93 mo
75.7363 136.93 li
74.5755 136.93 73.4351 136.801 72.3391 136.545 cv
72.1768 136.504 li
70.5941 136.123 69.0884 135.49 67.7247 134.646 cv
67.2215 134.333 66.7384 133.992 66.2758 133.623 cv
65.1029 132.693 64.068 131.585 63.2074 130.335 cv
63.2017 130.327 63.196 130.319 63.1902 130.31 cv
63.1959 130.319 63.2017 130.327 63.2074 130.335 cv
63.2074 130.335 li
63.2074 130.335 li
64.068 131.585 65.1029 132.693 66.2758 133.623 cv
66.2758 133.623 li
66.7384 133.992 67.2215 134.333 67.7247 134.646 cv
69.0884 135.49 70.5941 136.123 72.1768 136.504 cv
72.3391 136.545 li
73.4351 136.801 74.5755 136.93 75.7363 136.93 cv
76.9473 136.93 li
108.765 136.904 mo
108.767 136.904 108.769 136.904 108.771 136.903 cv
108.769 136.904 108.767 136.904 108.765 136.904 cv
108.778 136.903 mo
108.779 136.902 108.781 136.902 108.783 136.902 cv
108.781 136.902 108.779 136.902 108.778 136.903 cv
108.79 136.901 mo
108.792 136.901 108.793 136.901 108.794 136.901 cv
108.793 136.901 108.792 136.901 108.79 136.901 cv
108.804 136.899 mo
108.804 136.899 108.805 136.899 108.805 136.899 cv
108.805 136.899 108.804 136.899 108.804 136.899 cv
63.1782 130.293 mo
63.1767 130.291 63.1753 130.289 63.1738 130.286 cv
63.1752 130.288 63.1768 130.291 63.1782 130.293 cv
.898039 .898039 .898039 rgb
f
108.342 136.93 mo
99.1195 136.93 li
98.0605 136.93 li
78.0052 136.93 li
76.9473 136.93 li
75.7363 136.93 li
74.5755 136.93 73.4351 136.801 72.3391 136.545 cv
72.1768 136.504 li
70.5941 136.123 69.0884 135.49 67.7247 134.646 cv
67.2215 134.333 66.7384 133.992 66.2758 133.623 cv
89.5902 133.623 li
89.5902 133.841 li
89.5902 134.897 90.4496 135.756 91.5054 135.756 cv
94.4736 135.756 li
95.5295 135.756 96.3884 134.897 96.3884 133.841 cv
96.3884 133.623 li
100.178 133.623 li
111.19 135.526 li
110.604 136.286 109.747 136.778 108.805 136.899 cv
108.805 136.899 108.804 136.899 108.804 136.899 cv
108.8 136.9 108.797 136.9 108.794 136.901 cv
108.793 136.901 108.792 136.901 108.79 136.901 cv
108.788 136.901 108.785 136.902 108.783 136.902 cv
108.781 136.902 108.779 136.902 108.778 136.903 cv
108.776 136.903 108.773 136.903 108.771 136.903 cv
108.769 136.904 108.767 136.904 108.765 136.904 cv
108.763 136.904 108.762 136.905 108.76 136.905 cv
108.756 136.905 108.752 136.906 108.748 136.906 cv
108.578 136.922 li
108.342 136.93 li
66.2758 133.623 mo
65.1029 132.693 64.068 131.585 63.2074 130.335 cv
63.7207 131.081 64.3026 131.769 64.9321 132.405 cv
89.5902 132.405 li
89.5902 132.913 li
65.4456 132.913 li
65.7139 133.159 65.9904 133.397 66.2758 133.623 cv
81.1606 130.335 mo
63.2074 130.335 li
63.2074 130.335 li
63.2017 130.327 63.1959 130.319 63.1902 130.31 cv
63.1862 130.305 63.1822 130.299 63.1782 130.293 cv
63.1768 130.291 63.1752 130.288 63.1738 130.286 cv
62.4748 129.262 61.8989 128.135 61.4635 126.931 cv
73.1708 128.954 li
73.5273 129.3 74.0131 129.514 74.5478 129.514 cv
74.841 129.514 75.1196 129.449 75.3701 129.335 cv
81.1606 130.335 li
.690196 .247059 .243137 rgb
f
74.5478 129.514 mo
74.0131 129.514 73.5273 129.3 73.1708 128.954 cv
75.3701 129.335 li
75.1196 129.449 74.841 129.514 74.5478 129.514 cv
.219608 .172549 .156863 rgb
f
100.178 133.623 mo
96.3884 133.623 li
96.3884 132.968 li
100.178 133.623 li
89.5902 133.623 mo
66.2758 133.623 li
66.2758 133.623 li
65.9904 133.397 65.7139 133.159 65.4456 132.913 cv
89.5902 132.913 li
89.5902 133.623 li
89.5902 132.405 mo
64.9321 132.405 li
64.3026 131.769 63.7207 131.081 63.2074 130.335 cv
63.2074 130.335 li
81.1606 130.335 li
89.5902 131.793 li
89.5902 132.405 li
.878431 .639216 .313725 rgb
f
94.4736 135.756 mo
91.5054 135.756 li
90.4496 135.756 89.5902 134.897 89.5902 133.841 cv
89.5902 133.623 li
89.5902 132.913 li
89.5902 132.405 li
89.5902 131.793 li
89.9979 131.863 li
89.9979 133.842 li
89.9979 134.674 90.6716 135.352 91.5036 135.352 cv
94.4746 135.352 li
95.3065 135.352 95.9843 134.674 95.9843 133.842 cv
95.9843 133.623 li
95.9843 132.913 li
95.9843 132.898 li
96.3884 132.968 li
96.3884 133.623 li
96.3884 133.841 li
96.3884 134.897 95.5295 135.756 94.4736 135.756 cv
.219608 .172549 .156863 rgb
f
94.4746 135.352 mo
91.5036 135.352 li
90.6716 135.352 89.9979 134.674 89.9979 133.842 cv
89.9979 131.863 li
89.9979 132.405 li
93.1346 132.405 li
95.9843 132.898 li
95.9843 132.913 li
89.9979 132.913 li
89.9979 133.623 li
95.9843 133.623 li
95.9843 133.842 li
95.9843 134.674 95.3065 135.352 94.4746 135.352 cv
.811765 .32549 .321569 rgb
f
93.1346 132.405 mo
89.9979 132.405 li
89.9979 131.863 li
93.1346 132.405 li
.878431 .639216 .313725 rgb
f
95.9843 133.623 mo
95.9843 133.623 li
89.9979 133.623 li
89.9979 132.913 li
95.9843 132.913 li
95.9843 133.623 li
f
409.897 37.7963 mo
399.517 37.7963 li
399.517 37.3261 li
409.897 37.3261 li
409.897 37.7963 li
.243137 .192157 .172549 rgb
f
409.897 37.9622 mo
408.286 37.9622 li
408.286 37.1602 li
409.897 37.1602 li
409.897 37.9622 li
cp
f
409.897 39.4181 mo
399.517 39.4181 li
399.517 38.948 li
409.897 38.948 li
409.897 39.4181 li
cp
f
409.897 39.5839 mo
408.286 39.5839 li
408.286 38.782 li
409.897 38.782 li
409.897 39.5839 li
cp
f
406.372 38.948 mo
406.048 38.948 li
406.048 37.5613 li
406.372 37.5613 li
406.372 38.948 li
cp
f
405.366 38.948 mo
405.075 38.948 li
405.075 37.5613 li
405.366 37.5613 li
405.366 38.948 li
cp
f
375.966 14.243 mo
367.766 14.243 li
366.676 14.243 365.697 14.9114 365.3 15.9271 cv
363.88 19.5625 li
380.536 19.5625 li
378.265 15.5792 li
377.794 14.7531 376.917 14.243 375.966 14.243 cv
f
362.23 44.0268 mo
361.275 43.6229 li
364.181 36.7463 li
365.137 37.1503 li
362.23 44.0268 li
f
381.652 43.8887 mo
380.622 43.7609 li
381.474 36.8846 li
382.504 37.0122 li
381.652 43.8887 li
f
385.105 44.1816 mo
358.266 44.1816 li
357.98 44.1816 357.747 43.9493 357.747 43.6627 cv
357.747 43.3761 357.98 43.1437 358.266 43.1437 cv
385.105 43.1437 li
385.449 43.1437 385.79 43.056 386.091 42.8897 cv
387.083 42.3434 li
387.334 42.2049 387.649 42.2963 387.787 42.5471 cv
387.926 42.7983 387.835 43.1138 387.584 43.2522 cv
386.592 43.7988 li
386.138 44.0494 385.623 44.1816 385.105 44.1816 cv
cp
f
398.176 40.3224 mo
391.084 40.3224 li
389.913 40.3224 388.965 39.3735 388.965 38.2029 cv
388.965 37.3386 li
388.965 36.1681 389.913 35.2191 391.084 35.2191 cv
398.176 35.2191 li
399.347 35.2191 400.296 36.1681 400.296 37.3386 cv
400.296 38.2029 li
400.296 39.3735 399.347 40.3224 398.176 40.3224 cv
f
405.544 34.9608 mo
405.544 34.9608 393.13 38.4171 392.149 38.4171 cv
358.509 38.4171 li
357.321 38.4171 356.137 38.2718 354.99 37.9863 cv
344.886 35.4796 li
310.659 29.1221 li
309.87 28.9769 309.206 28.4527 308.879 27.721 cv
304.198 17.2115 li
306.632 15.0526 li
312.984 22.7595 li
313.939 23.9167 315.33 24.6278 316.824 24.7264 cv
348.057 26.7348 li
361.753 18.3947 li
381.832 19.5055 li
382.911 19.5625 li
387.489 20.9794 li
388.08 21.161 388.662 21.3687 389.238 21.5969 cv
389.513 21.706 389.783 21.8201 390.053 21.9446 cv
391.62 22.6297 393.109 23.486 394.495 24.4928 cv
397.51 26.683 li
397.754 26.8593 li
398.216 27.0203 li
403.51 28.8783 li
404.242 29.1326 404.818 29.7138 405.072 30.4507 cv
406.198 33.7411 li
406.375 34.2601 406.074 34.8205 405.544 34.9608 cv
.380392 .309804 .286275 rgb
f
406.198 33.7411 mo
406.141 33.5749 li
406.141 33.5749 li
406.198 33.7411 li
.8 .8 .8 rgb
f
392.149 38.4171 mo
382.33 38.4171 li
381.284 38.4171 li
374.13 38.4171 li
374.13 37.6592 li
377.853 37.6592 li
377.855 37.6592 377.857 37.6592 377.858 37.6592 cv
377.86 37.6592 377.861 37.6592 377.862 37.6592 cv
377.862 37.6591 377.863 37.6591 377.864 37.6591 cv
377.865 37.6591 377.866 37.6591 377.867 37.6591 cv
377.868 37.6591 377.869 37.6591 377.869 37.659 cv
377.87 37.659 377.872 37.659 377.873 37.659 cv
377.873 37.659 377.874 37.659 377.875 37.6589 cv
377.876 37.6589 377.877 37.6589 377.879 37.6588 cv
377.879 37.6588 377.88 37.6588 377.88 37.6588 cv
377.881 37.6587 377.883 37.6587 377.884 37.6586 cv
377.885 37.6586 377.885 37.6586 377.885 37.6586 cv
377.887 37.6585 377.889 37.6585 377.89 37.6584 cv
377.89 37.6584 377.891 37.6584 377.891 37.6584 cv
377.892 37.6583 377.894 37.6582 377.896 37.6582 cv
377.896 37.6582 377.896 37.6581 377.896 37.6581 cv
378.347 37.6358 378.704 37.2644 378.704 36.8081 cv
378.704 36.7881 li
378.704 36.3174 378.324 35.9369 377.853 35.9369 cv
374.13 35.9369 li
374.13 35.087 li
375.504 35.0148 376.904 34.915 378.326 34.7929 cv
378.326 34.7929 li
378.727 34.7584 379.002 34.4183 379.002 34.0523 cv
379.001 33.9447 378.977 33.8349 378.925 33.73 cv
378.921 33.7208 378.916 33.7116 378.911 33.7025 cv
378.842 33.5749 li
406.141 33.5749 li
406.198 33.7411 li
406.233 33.8424 406.249 33.9454 406.249 34.0465 cv
406.248 34.463 405.97 34.8479 405.544 34.9608 cv
405.544 34.9608 393.13 38.4171 392.149 38.4171 cv
372.898 38.4171 mo
369.849 38.4171 li
369.849 37.6592 li
372.898 37.6592 li
372.898 38.4171 li
368.616 38.4171 mo
364.601 38.4171 li
363.475 38.4171 li
358.509 38.4171 li
357.321 38.4171 356.137 38.2718 354.99 37.9863 cv
344.886 35.4796 li
310.659 29.1221 li
309.87 28.9769 309.206 28.4527 308.879 27.721 cv
308.647 27.2014 li
363.207 33.4151 li
362.942 33.4844 362.673 33.5543 362.401 33.6246 cv
362.029 33.7208 361.764 34.0516 361.753 34.434 cv
361.753 34.4351 361.753 34.4362 361.753 34.4373 cv
361.753 34.4386 361.753 34.44 361.753 34.4413 cv
361.753 34.443 361.753 34.4447 361.753 34.4463 cv
361.753 34.4473 361.753 34.4483 361.753 34.4494 cv
361.753 34.4521 361.753 34.4549 361.753 34.4576 cv
361.753 34.4576 li
361.753 34.7427 li
361.753 34.7427 li
361.819 34.752 361.886 34.7611 361.952 34.7701 cv
363.378 34.9626 364.867 35.088 366.411 35.1561 cv
367.134 35.1881 367.87 35.2074 368.616 35.2152 cv
368.616 35.9369 li
364.397 35.9369 li
364.397 37.4184 li
364.252 37.4627 364.146 37.5978 364.146 37.7577 cv
364.146 37.9535 364.305 38.1123 364.501 38.1123 cv
366.733 38.1123 li
366.929 38.1123 367.088 37.9535 367.088 37.7577 cv
367.088 37.7235 367.083 37.6905 367.074 37.6592 cv
368.616 37.6592 li
368.616 38.4171 li
372.898 35.9369 mo
369.849 35.9369 li
369.849 35.2177 li
370.847 35.2117 371.865 35.1865 372.898 35.1445 cv
372.898 35.9369 li
.305882 .247059 .227451 rgb
f
334.427 30.3073 mo
322.185 29.3027 li
322.186 29.2951 li
322.221 28.8626 322.586 28.5315 323.02 28.5375 cv
332.482 28.6679 li
333.221 28.6782 333.887 29.1142 334.191 29.7869 cv
334.427 30.3073 li
cp
.243137 .192157 .172549 rgb
f
378.326 34.7929 mo
372.29 35.3113 366.639 35.4269 361.753 34.7427 cv
361.753 34.4576 li
361.753 34.0654 362.022 33.7227 362.401 33.6246 cv
367.207 32.3818 370.893 31.2688 375.183 31.156 cv
376.604 31.1187 377.926 31.8927 378.606 33.1415 cv
378.911 33.7025 li
379.165 34.1697 378.855 34.7474 378.326 34.7929 cv
f
398.216 27.0203 mo
397.334 28.4319 li
396.742 29.3869 395.668 29.9785 394.537 29.9785 cv
394.371 29.9785 394.204 29.9681 394.044 29.9421 cv
385.688 28.6758 li
384.935 28.5669 li
380.685 25.4114 li
379.964 24.8768 379.523 24.0621 379.476 23.1694 cv
379.429 22.2768 379.777 21.4152 380.431 20.808 cv
381.832 19.5055 li
382.911 19.5625 li
387.489 20.9794 li
388.08 21.161 388.662 21.3687 389.238 21.5969 cv
389.513 21.706 389.783 21.8201 390.053 21.9446 cv
391.62 22.6297 393.109 23.486 394.495 24.4928 cv
397.51 26.683 li
397.754 26.8593 li
398.216 27.0203 li
f
397.51 26.683 mo
396.675 28.0168 li
396.145 28.8679 395.154 29.3246 394.158 29.174 cv
385.802 27.9078 li
385.242 27.8248 li
385.044 27.6793 li
381.147 24.7886 li
380.031 23.9583 379.943 22.3234 380.96 21.3789 cv
382.911 19.5625 li
387.489 20.9794 li
388.08 21.161 388.662 21.3687 389.238 21.5969 cv
389.513 21.706 389.783 21.8201 390.053 21.9446 cv
391.62 22.6297 393.109 23.486 394.495 24.4928 cv
397.51 26.683 li
.670588 .929412 .890196 rgb
f
390.053 21.9446 mo
388.408 23.2368 li
388.122 23.46 387.888 23.7455 387.733 24.0673 cv
385.802 27.9078 li
385.483 28.4825 li
384.782 28.1349 li
385.044 27.6793 li
387.032 23.7196 li
387.245 23.294 387.556 22.9203 387.925 22.6297 cv
389.238 21.5969 li
389.513 21.706 389.783 21.8201 390.053 21.9446 cv
.243137 .192157 .172549 rgb
f
369.849 35.2177 mo
369.849 35.2177 li
370.847 35.2116 371.865 35.1865 372.898 35.1445 cv
372.898 35.1445 li
371.865 35.1865 370.847 35.2117 369.849 35.2177 cv
368.616 35.2152 mo
367.87 35.2074 367.134 35.1881 366.411 35.1561 cv
367.135 35.188 367.87 35.2074 368.616 35.2151 cv
368.616 35.2152 li
374.13 35.087 mo
374.13 35.0869 li
375.504 35.0147 376.904 34.915 378.326 34.7929 cv
378.326 34.7929 li
378.326 34.7929 li
376.904 34.915 375.504 35.0148 374.13 35.087 cv
361.952 34.7701 mo
361.886 34.7611 361.819 34.752 361.753 34.7427 cv
361.753 34.7427 li
361.819 34.752 361.886 34.7611 361.952 34.7701 cv
361.753 34.4576 mo
361.753 34.4549 361.753 34.4521 361.753 34.4494 cv
361.753 34.4521 361.753 34.4549 361.753 34.4576 cv
361.753 34.4463 mo
361.753 34.4447 361.753 34.443 361.753 34.4413 cv
361.753 34.443 361.753 34.4446 361.753 34.4463 cv
361.753 34.4373 mo
361.753 34.4362 361.753 34.4351 361.753 34.434 cv
361.753 34.4351 361.753 34.4362 361.753 34.4373 cv
379.002 34.0523 mo
379.001 33.9447 378.977 33.8349 378.925 33.73 cv
378.977 33.8349 379.001 33.9447 379.002 34.0523 cv
.243137 .196078 .180392 rgb
f
369.849 35.2177 mo
369.849 34.84 li
368.616 34.84 li
368.616 35.2151 li
367.87 35.2074 367.135 35.188 366.411 35.1561 cv
364.867 35.088 363.377 34.9626 361.952 34.7701 cv
361.886 34.7611 361.819 34.752 361.753 34.7427 cv
361.753 34.4576 li
361.753 34.4576 li
361.753 34.4549 361.753 34.4521 361.753 34.4494 cv
361.753 34.4484 361.753 34.4473 361.753 34.4463 cv
361.753 34.4446 361.753 34.443 361.753 34.4413 cv
361.753 34.44 361.753 34.4386 361.753 34.4373 cv
361.753 34.4362 361.753 34.4351 361.753 34.434 cv
361.762 34.1351 361.929 33.8723 362.178 33.724 cv
378.805 33.507 li
378.911 33.7025 li
378.916 33.7116 378.921 33.7208 378.925 33.73 cv
378.977 33.8349 379.001 33.9447 379.002 34.0523 cv
379.002 34.4183 378.727 34.7583 378.326 34.7929 cv
378.326 34.7929 li
376.904 34.915 375.504 35.0147 374.13 35.0869 cv
374.13 34.84 li
372.898 34.84 li
372.898 35.1445 li
371.865 35.1865 370.847 35.2116 369.849 35.2177 cv
.196078 .152941 .137255 rgb
f
403.549 28.8923 mo
403.549 28.8922 403.549 28.8922 403.549 28.8922 cv
403.549 28.8922 403.549 28.8922 403.549 28.8923 cv
403.541 28.8893 mo
403.54 28.8889 403.539 28.8885 403.538 28.8882 cv
403.539 28.8885 403.54 28.8889 403.541 28.8893 cv
403.532 28.8861 mo
403.531 28.8857 403.529 28.8852 403.528 28.8847 cv
403.529 28.8852 403.531 28.8856 403.532 28.8861 cv
403.523 28.8829 mo
403.522 28.8824 403.52 28.8819 403.519 28.8815 cv
403.52 28.8819 403.521 28.8824 403.523 28.8829 cv
1 1 1 rgb
f
404.577 29.6038 mo
397.732 27.7951 li
398.216 27.0203 li
403.51 28.8783 li
403.513 28.8794 403.516 28.8804 403.519 28.8815 cv
403.52 28.8819 403.522 28.8824 403.523 28.8829 cv
403.525 28.8835 403.526 28.8841 403.528 28.8847 cv
403.529 28.8852 403.531 28.8857 403.532 28.8861 cv
403.534 28.8868 403.536 28.8875 403.538 28.8882 cv
403.539 28.8885 403.54 28.8889 403.541 28.8893 cv
403.543 28.8902 403.546 28.8912 403.549 28.8922 cv
403.549 28.8922 403.549 28.8922 403.549 28.8923 cv
403.95 29.0393 404.3 29.2878 404.577 29.6038 cv
348.612 28.5358 mo
316.02 25.7593 li
314.191 25.6035 312.508 24.7011 311.367 23.2645 cv
305.581 15.9843 li
306.632 15.0526 li
312.984 22.7595 li
313.939 23.9167 315.33 24.6278 316.824 24.7264 cv
347.901 26.7248 li
347.667 28.3852 li
347.667 28.3852 li
347.982 28.4388 348.297 28.4881 348.612 28.5358 cv
357.313 21.0984 mo
361.753 18.3947 li
381.832 19.5055 li
380.569 20.6792 li
362.839 20.2112 li
361.378 21.0675 li
360.888 21.0582 360.401 21.0535 359.913 21.0535 cv
359.044 21.0535 358.178 21.0684 357.313 21.0984 cv
.454902 .372549 .345098 rgb
f
397.732 27.7951 mo
397.51 27.7365 li
397.362 27.6221 397.214 27.5077 397.065 27.3934 cv
397.51 26.683 li
397.754 26.8593 li
398.216 27.0203 li
397.732 27.7951 li
381.68 20.7085 mo
380.569 20.6792 li
381.832 19.5055 li
382.911 19.5625 li
381.68 20.7085 li
.290196 .231373 .207843 rgb
f
397.065 27.3934 mo
394.762 25.623 392.355 23.8747 389.261 22.5666 cv
390.053 21.9446 li
390.053 21.9446 li
391.62 22.6297 393.109 23.486 394.495 24.4928 cv
397.51 26.683 li
397.065 27.3934 li
388.43 22.2326 mo
386.698 21.5722 384.753 21.0497 382.504 20.7302 cv
381.68 20.7085 li
382.911 19.5625 li
387.489 20.9794 li
388.08 21.161 388.662 21.3687 389.238 21.5969 cv
388.43 22.2326 li
.737255 .945098 .913725 rgb
f
389.261 22.5666 mo
388.989 22.4517 388.712 22.3403 388.43 22.2326 cv
389.238 21.5969 li
389.238 21.5969 li
389.513 21.706 389.783 21.8201 390.053 21.9446 cv
389.261 22.5666 li
.290196 .231373 .207843 rgb
f
372.579 22.0277 mo
372.579 28.3852 li
365.36 29.5892 358.016 29.7657 350.532 28.8055 cv
350.065 28.7485 349.598 28.6862 349.131 28.6135 cv
348.643 28.5409 348.155 28.4682 347.667 28.3852 cv
348.581 21.8979 li
349.105 21.8201 349.624 21.7473 350.138 21.6851 cv
350.621 21.6228 351.103 21.5657 351.586 21.5139 cv
358.483 20.7562 365.059 20.9378 372.579 22.0277 cv
.243137 .192157 .172549 rgb
f
351.586 21.5139 mo
350.532 28.8055 li
350.065 28.7485 349.598 28.6862 349.131 28.6135 cv
350.138 21.6851 li
350.621 21.6228 351.103 21.5657 351.586 21.5139 cv
.854902 .819608 .819608 rgb
f
360.138 29.4223 mo
360.138 29.4223 360.136 29.4223 360.136 29.4223 cv
360.136 29.4223 360.138 29.4223 360.138 29.4223 cv
360.138 29.4223 li
360.142 29.4223 mo
364.266 29.4221 368.348 29.0804 372.39 28.4164 cv
368.347 29.0805 364.266 29.4221 360.142 29.4223 cv
350.927 28.8551 mo
350.912 28.8532 350.896 28.8513 350.881 28.8494 cv
350.896 28.8513 350.912 28.8532 350.927 28.8551 cv
350.71 28.8281 mo
350.651 28.8206 350.592 28.8131 350.532 28.8055 cv
350.065 28.7485 349.598 28.6862 349.131 28.6135 cv
348.958 28.5877 348.785 28.562 348.612 28.5358 cv
348.612 28.5358 li
348.785 28.562 348.958 28.5877 349.131 28.6135 cv
349.131 28.6135 li
349.598 28.6862 350.065 28.7485 350.532 28.8055 cv
350.532 28.8055 li
350.592 28.8131 350.651 28.8206 350.71 28.8281 cv
.305882 .247059 .227451 rgb
f
360.138 29.4223 mo
360.138 29.4223 360.136 29.4223 360.136 29.4223 cv
357.089 29.4222 354.02 29.2357 350.927 28.8551 cv
350.912 28.8532 350.896 28.8513 350.881 28.8494 cv
350.824 28.8424 350.767 28.8353 350.71 28.8281 cv
350.651 28.8206 350.592 28.8131 350.532 28.8055 cv
350.991 25.6282 li
372.579 26.463 li
372.579 28.3852 li
372.579 28.3852 li
372.516 28.3956 372.453 28.4061 372.39 28.4164 cv
368.348 29.0804 364.266 29.4221 360.142 29.4223 cv
360.141 29.4223 360.14 29.4223 360.138 29.4223 cv
349.131 28.6135 mo
349.131 28.6135 li
348.958 28.5877 348.785 28.562 348.612 28.5358 cv
348.297 28.4881 347.982 28.4388 347.667 28.3852 cv
348.072 25.5153 li
349.573 25.5733 li
349.131 28.6135 li
.196078 .152941 .137255 rgb
f
350.532 28.8055 mo
350.065 28.7485 349.598 28.6862 349.131 28.6135 cv
349.131 28.6135 li
349.573 25.5733 li
350.991 25.6282 li
350.532 28.8055 li
.682353 .654902 .654902 rgb
f
306.694 17.1471 mo
305.749 15.2471 li
307.867 15.1158 li
318.97 22.2705 li
318.442 23.185 li
306.694 17.1471 li
cp
.243137 .192157 .172549 rgb
f
303.63 15.1158 mo
305.749 15.2471 li
304.803 17.1471 li
293.056 23.185 li
292.528 22.2705 li
303.63 15.1158 li
cp
f
306.921 13.4783 mo
305.749 15.2471 li
304.576 13.4783 li
305.221 .28565 li
306.277 .28565 li
306.921 13.4783 li
cp
f
307.484 15.4107 mo
307.484 16.369 306.707 17.1459 305.749 17.1459 cv
304.79 17.1459 304.013 16.369 304.013 15.4107 cv
304.013 14.4523 304.79 13.6754 305.749 13.6754 cv
306.707 13.6754 307.484 14.4523 307.484 15.4107 cv
cp
f
306.602 15.4107 mo
306.602 15.8819 306.22 16.2638 305.749 16.2638 cv
305.277 16.2638 304.895 15.8819 304.895 15.4107 cv
304.895 14.9395 305.277 14.5575 305.749 14.5575 cv
306.22 14.5575 306.602 14.9395 306.602 15.4107 cv
cp
.854902 .819608 .819608 rgb
f
369.849 39.762 mo
368.616 39.762 li
368.616 34.84 li
369.849 34.84 li
369.849 39.762 li
.243137 .192157 .172549 rgb
f
374.13 39.762 mo
372.898 39.762 li
372.898 34.84 li
374.13 34.84 li
374.13 39.762 li
f
367.088 35.8384 mo
367.088 36.0344 366.929 36.1931 366.733 36.1931 cv
364.501 36.1931 li
364.305 36.1931 364.146 36.0344 364.146 35.8384 cv
364.146 35.6426 364.305 35.4839 364.501 35.4839 cv
366.733 35.4839 li
366.929 35.4839 367.088 35.6426 367.088 35.8384 cv
cp
.113725 .0901961 .0823529 rgb
f
367.088 37.7577 mo
367.088 37.9535 366.929 38.1123 366.733 38.1123 cv
364.501 38.1123 li
364.305 38.1123 364.146 37.9535 364.146 37.7577 cv
364.146 37.5618 364.305 37.403 364.501 37.403 cv
366.733 37.403 li
366.929 37.403 367.088 37.5618 367.088 37.7577 cv
f
378.704 36.7881 mo
378.704 36.8081 li
378.704 37.2788 378.324 37.6592 377.853 37.6592 cv
364.397 37.6592 li
364.397 35.9369 li
377.853 35.9369 li
378.324 35.9369 378.704 36.3174 378.704 36.7881 cv
f
365.92 35.9369 mo
365.92 37.6592 li
365.112 37.6592 li
365.112 35.9369 li
365.92 35.9369 li
.768627 .27451 .270588 rgb
f
367.088 35.9369 mo
367.088 37.6592 li
366.28 37.6592 li
366.28 35.9369 li
367.088 35.9369 li
f
377.853 37.6592 mo
374.13 37.6592 li
377.853 37.6592 li
377.855 37.6592 377.857 37.6592 377.858 37.6592 cv
377.857 37.6592 377.855 37.6592 377.853 37.6592 cv
.243137 .196078 .180392 rgb
f
377.862 37.6592 mo
377.862 37.6591 377.863 37.6591 377.864 37.6591 cv
377.863 37.6591 377.862 37.6591 377.862 37.6592 cv
377.867 37.6591 mo
377.868 37.6591 377.869 37.6591 377.869 37.659 cv
377.869 37.6591 377.868 37.6591 377.867 37.6591 cv
377.873 37.659 mo
377.873 37.659 377.874 37.659 377.875 37.6589 cv
377.874 37.659 377.873 37.659 377.873 37.659 cv
377.879 37.6588 mo
377.879 37.6588 377.88 37.6588 377.88 37.6588 cv
377.88 37.6588 377.879 37.6588 377.879 37.6588 cv
377.884 37.6586 mo
377.885 37.6586 377.885 37.6586 377.885 37.6586 cv
377.885 37.6586 377.885 37.6586 377.884 37.6586 cv
377.89 37.6584 mo
377.891 37.6584 377.891 37.6584 377.891 37.6584 cv
377.891 37.6584 377.89 37.6584 377.89 37.6584 cv
377.896 37.6582 mo
377.896 37.6582 377.896 37.6581 377.896 37.6581 cv
377.896 37.6581 377.896 37.6582 377.896 37.6582 cv
f
367.074 37.6592 mo
364.397 37.6592 li
365.112 37.6592 li
365.92 37.6592 li
366.28 37.6592 li
367.074 37.6592 li
367.074 37.6592 li
.0901961 .0705882 .0666667 rgb
f
377.853 37.6592 mo
374.13 37.6592 li
372.898 37.6592 li
369.849 37.6592 li
368.616 37.6592 li
367.088 37.6592 li
367.088 36.8398 li
378.701 36.8398 li
378.685 37.281 378.336 37.6363 377.896 37.6581 cv
377.896 37.6581 377.896 37.6582 377.896 37.6582 cv
377.894 37.6582 377.892 37.6583 377.891 37.6584 cv
377.891 37.6584 377.891 37.6584 377.89 37.6584 cv
377.889 37.6585 377.887 37.6585 377.885 37.6586 cv
377.885 37.6586 377.885 37.6586 377.884 37.6586 cv
377.883 37.6587 377.881 37.6587 377.88 37.6588 cv
377.88 37.6588 377.879 37.6588 377.879 37.6588 cv
377.877 37.6589 377.876 37.6589 377.875 37.6589 cv
377.874 37.659 377.873 37.659 377.873 37.659 cv
377.872 37.659 377.87 37.659 377.869 37.659 cv
377.869 37.6591 377.868 37.6591 377.867 37.6591 cv
377.866 37.6591 377.865 37.6591 377.864 37.6591 cv
377.863 37.6591 377.862 37.6591 377.862 37.6592 cv
377.861 37.6592 377.86 37.6592 377.858 37.6592 cv
377.857 37.6592 377.855 37.6592 377.853 37.6592 cv
366.28 37.6592 mo
365.92 37.6592 li
365.92 36.8398 li
366.28 36.8398 li
366.28 37.6592 li
365.112 37.6592 mo
364.397 37.6592 li
364.397 36.8398 li
365.112 36.8398 li
365.112 37.6592 li
f
365.92 37.6592 mo
365.112 37.6592 li
365.112 36.8398 li
365.92 36.8398 li
365.92 37.6592 li
.615686 .219608 .215686 rgb
f
367.088 37.6592 mo
367.074 37.6592 li
366.28 37.6592 li
366.28 36.8398 li
367.088 36.8398 li
367.088 37.6592 li
f
367.088 39.0765 mo
367.088 39.2723 366.929 39.4311 366.733 39.4311 cv
364.501 39.4311 li
364.305 39.4311 364.146 39.2723 364.146 39.0765 cv
364.146 38.8806 364.305 38.7218 364.501 38.7218 cv
366.733 38.7218 li
366.929 38.7218 367.088 38.8806 367.088 39.0765 cv
cp
.113725 .0901961 .0823529 rgb
f
367.088 40.9957 mo
367.088 41.1914 366.929 41.3503 366.733 41.3503 cv
364.501 41.3503 li
364.305 41.3503 364.146 41.1914 364.146 40.9957 cv
364.146 40.7997 364.305 40.641 364.501 40.641 cv
366.733 40.641 li
366.929 40.641 367.088 40.7997 367.088 40.9957 cv
f
378.704 40.0261 mo
378.704 40.046 li
378.704 40.5167 378.324 40.8972 377.853 40.8972 cv
364.397 40.8972 li
364.397 39.1749 li
377.853 39.1749 li
378.324 39.1749 378.704 39.5555 378.704 40.0261 cv
f
365.92 39.1749 mo
365.92 40.8972 li
365.112 40.8972 li
365.112 39.1749 li
365.92 39.1749 li
.768627 .27451 .270588 rgb
f
367.088 39.1749 mo
367.088 40.8972 li
366.28 40.8972 li
366.28 39.1749 li
367.088 39.1749 li
f
377.853 40.8972 mo
367.074 40.8972 li
367.074 40.8972 li
367.088 40.8972 li
377.853 40.8972 li
377.855 40.8972 377.857 40.8972 377.858 40.8972 cv
377.857 40.8972 377.855 40.8972 377.853 40.8972 cv
377.862 40.8972 mo
377.862 40.8972 377.863 40.8972 377.864 40.8971 cv
377.863 40.8972 377.862 40.8972 377.862 40.8972 cv
377.867 40.8971 mo
377.868 40.8971 377.869 40.8971 377.869 40.8971 cv
377.869 40.8971 377.868 40.8971 377.867 40.8971 cv
377.873 40.897 mo
377.873 40.897 377.874 40.897 377.875 40.8969 cv
377.874 40.897 377.873 40.897 377.873 40.897 cv
377.879 40.8968 mo
377.879 40.8968 377.88 40.8968 377.88 40.8968 cv
377.88 40.8968 377.879 40.8968 377.879 40.8968 cv
377.884 40.8967 mo
377.885 40.8966 377.885 40.8966 377.885 40.8966 cv
377.885 40.8966 377.885 40.8966 377.884 40.8967 cv
377.89 40.8964 mo
377.89 40.8964 377.89 40.8964 377.891 40.8964 cv
377.89 40.8964 377.89 40.8964 377.89 40.8964 cv
377.895 40.8962 mo
377.896 40.8962 377.896 40.8962 377.896 40.8961 cv
377.896 40.8962 377.896 40.8962 377.895 40.8962 cv
377.901 40.8959 mo
377.901 40.8959 377.901 40.8959 377.901 40.8959 cv
377.901 40.8959 377.901 40.8959 377.901 40.8959 cv
.8 .8 .8 rgb
f
367.074 40.8972 mo
364.397 40.8972 li
365.112 40.8972 li
365.92 40.8972 li
366.28 40.8972 li
367.074 40.8972 li
367.074 40.8972 li
.0901961 .0705882 .0666667 rgb
f
377.853 40.8972 mo
367.088 40.8972 li
367.088 40.0778 li
378.701 40.0778 li
378.685 40.5173 378.339 40.8715 377.901 40.8959 cv
377.901 40.8959 377.901 40.8959 377.901 40.8959 cv
377.9 40.896 377.898 40.8961 377.896 40.8961 cv
377.896 40.8962 377.896 40.8962 377.895 40.8962 cv
377.894 40.8963 377.892 40.8963 377.891 40.8964 cv
377.89 40.8964 377.89 40.8964 377.89 40.8964 cv
377.888 40.8965 377.887 40.8966 377.885 40.8966 cv
377.885 40.8966 377.885 40.8966 377.884 40.8967 cv
377.883 40.8967 377.881 40.8968 377.88 40.8968 cv
377.88 40.8968 377.879 40.8968 377.879 40.8968 cv
377.877 40.8969 377.876 40.8969 377.875 40.8969 cv
377.874 40.897 377.873 40.897 377.873 40.897 cv
377.872 40.897 377.87 40.897 377.869 40.8971 cv
377.869 40.8971 377.868 40.8971 377.867 40.8971 cv
377.866 40.8971 377.865 40.8971 377.864 40.8971 cv
377.863 40.8972 377.862 40.8972 377.862 40.8972 cv
377.861 40.8972 377.86 40.8972 377.858 40.8972 cv
377.857 40.8972 377.855 40.8972 377.853 40.8972 cv
366.28 40.8972 mo
365.92 40.8972 li
365.92 40.0778 li
366.28 40.0778 li
366.28 40.8972 li
365.112 40.8972 mo
364.397 40.8972 li
364.397 40.0778 li
365.112 40.0778 li
365.112 40.8972 li
f
365.92 40.8972 mo
365.112 40.8972 li
365.112 40.0778 li
365.92 40.0778 li
365.92 40.8972 li
.615686 .219608 .215686 rgb
f
367.088 40.8972 mo
367.074 40.8972 li
366.28 40.8972 li
366.28 40.0778 li
367.088 40.0778 li
367.088 40.8972 li
f
373.701 14.6447 mo
370.564 14.6447 li
370.564 13.8413 li
373.701 13.8413 li
373.701 14.6447 li
cp
.243137 .192157 .172549 rgb
f
370.412 12.0374 mo
323.101 11.8423 li
323.101 11.4963 li
370.412 11.3239 li
370.412 12.0374 li
cp
f
373.859 12.0374 mo
421.17 11.8423 li
421.17 11.4963 li
373.859 11.3239 li
373.859 12.0374 li
cp
f
372.535 14.2245 mo
371.73 14.2245 li
371.73 11.3423 li
372.535 11.3423 li
372.535 14.2245 li
cp
f
370.639 14.242 mo
370.273 10.9888 li
370.79 10.9539 li
371.156 14.207 li
370.639 14.242 li
cp
.380392 .309804 .286275 rgb
f
373.626 14.242 mo
373.109 14.207 li
373.475 10.9539 li
373.992 10.9888 li
373.626 14.242 li
cp
f
370.639 14.242 mo
370.273 10.9888 li
370.79 10.9539 li
371.156 14.207 li
370.639 14.242 li
cp
.243137 .192157 .172549 rgb
f
373.626 14.242 mo
373.109 14.207 li
373.475 10.9539 li
373.992 10.9888 li
373.626 14.242 li
cp
f
373.857 12.145 mo
370.408 12.145 li
370.081 11.4842 li
369.958 11.2355 370.082 10.9358 370.343 10.8424 cv
371.536 10.4138 372.738 10.3701 373.935 10.8303 cv
374.191 10.9285 374.312 11.2241 374.19 11.4702 cv
373.857 12.145 li
cp
.380392 .309804 .286275 rgb
f
172.612 145.379 mo
171.962 145.379 li
171.962 141.221 li
173.262 141.221 li
172.612 145.379 li
.243137 .192157 .172549 rgb
f
173.401 145.546 mo
173.401 146.872 172.327 147.947 171 147.947 cv
169.674 147.947 168.6 146.872 168.6 145.546 cv
168.6 144.22 169.674 143.145 171 143.145 cv
172.327 143.145 173.401 144.22 173.401 145.546 cv
cp
0 0 0 rgb
f
172.426 145.546 mo
172.426 146.333 171.787 146.971 171 146.971 cv
170.213 146.971 169.575 146.333 169.575 145.546 cv
169.575 144.759 170.213 144.121 171 144.121 cv
171.787 144.121 172.426 144.759 172.426 145.546 cv
cp
.243137 .192157 .172549 rgb
f
171.79 145.546 mo
171.79 145.982 171.437 146.336 171 146.336 cv
170.564 146.336 170.211 145.982 170.211 145.546 cv
170.211 145.11 170.564 144.757 171 144.757 cv
171.437 144.757 171.79 145.11 171.79 145.546 cv
cp
0 0 0 rgb
f
173.605 142.011 mo
171.618 142.011 li
171.618 139.682 li
173.605 139.682 li
173.605 142.011 li
f
209.633 145.379 mo
208.983 145.379 li
208.983 141.221 li
210.283 141.221 li
209.633 145.379 li
.243137 .192157 .172549 rgb
f
210.422 145.546 mo
210.422 146.872 209.347 147.947 208.021 147.947 cv
206.695 147.947 205.62 146.872 205.62 145.546 cv
205.62 144.22 206.695 143.145 208.021 143.145 cv
209.347 143.145 210.422 144.22 210.422 145.546 cv
cp
0 0 0 rgb
f
209.446 145.546 mo
209.446 146.333 208.808 146.971 208.021 146.971 cv
207.234 146.971 206.596 146.333 206.596 145.546 cv
206.596 144.759 207.234 144.121 208.021 144.121 cv
208.808 144.121 209.446 144.759 209.446 145.546 cv
cp
.243137 .192157 .172549 rgb
f
208.811 145.546 mo
208.811 145.982 208.458 146.336 208.021 146.336 cv
207.585 146.336 207.232 145.982 207.232 145.546 cv
207.232 145.11 207.585 144.757 208.021 144.757 cv
208.458 144.757 208.811 145.11 208.811 145.546 cv
cp
0 0 0 rgb
f
210.626 142.011 mo
208.639 142.011 li
208.639 139.682 li
210.626 139.682 li
210.626 142.011 li
f
259.248 144.482 mo
258.65 144.736 li
257.021 140.909 li
258.217 140.4 li
259.248 144.482 li
cp
.243137 .192157 .172549 rgb
f
260.04 144.326 mo
260.559 145.546 259.991 146.956 258.771 147.475 cv
257.551 147.995 256.141 147.426 255.622 146.206 cv
255.102 144.986 255.67 143.576 256.891 143.057 cv
258.111 142.537 259.521 143.106 260.04 144.326 cv
cp
0 0 0 rgb
f
259.142 144.708 mo
259.45 145.432 259.113 146.269 258.389 146.577 cv
257.665 146.885 256.828 146.548 256.52 145.824 cv
256.211 145.1 256.549 144.263 257.273 143.955 cv
257.997 143.647 258.834 143.984 259.142 144.708 cv
cp
.243137 .192157 .172549 rgb
f
258.557 144.957 mo
258.728 145.358 258.541 145.822 258.14 145.993 cv
257.739 146.163 257.275 145.977 257.104 145.575 cv
256.933 145.174 257.12 144.71 257.522 144.539 cv
257.923 144.369 258.387 144.556 258.557 144.957 cv
cp
0 0 0 rgb
f
259.135 142.011 mo
257.148 142.011 li
255.779 138.313 li
258.142 137.131 li
259.135 142.011 li
f
164.204 94.2073 mo
125.45 93.9675 li
125.45 93.5424 li
164.204 93.3305 li
164.204 94.2073 li
cp
.243137 .192157 .172549 rgb
f
167.027 94.2073 mo
205.781 93.9675 li
205.781 93.5424 li
167.027 93.3305 li
167.027 94.2073 li
cp
f
243.857 102.625 mo
209.68 102.458 li
209.68 102.16 li
243.857 102.012 li
243.857 102.625 li
cp
f
246.347 102.625 mo
280.525 102.458 li
280.525 102.16 li
246.347 102.012 li
246.347 102.625 li
cp
f
154.862 121.55 mo
154.862 100.955 li
154.862 99.283 156.217 97.9278 157.889 97.9278 cv
173.751 97.9278 li
174.813 97.9278 175.797 98.4836 176.344 99.3929 cv
187.786 118.389 li
154.862 121.55 li
.654902 .796078 .392157 rgb
f
232.447 114.23 mo
237.68 106.672 li
238.153 105.988 238.932 105.58 239.765 105.58 cv
249.037 105.58 li
250.291 105.58 251.356 106.496 251.544 107.736 cv
253.74 122.215 li
232.447 114.23 li
f
154.862 119.159 mo
154.862 118.723 li
155.677 110.293 li
181.388 111.539 li
181.923 112.44 li
170.211 113.157 li
165.616 112.741 li
165.616 116.98 li
157.11 118.096 li
156.237 118.207 155.461 118.593 154.862 119.159 cv
184.189 112.418 mo
183.726 111.655 li
183.725 111.652 li
183.728 111.652 li
184.189 112.418 li
.619608 .756863 .372549 rgb
f
253.288 119.234 mo
253.288 119.234 li
253.08 117.864 li
253.073 117.815 li
253.288 119.234 li
.94902 .94902 .94902 rgb
f
253.288 119.234 mo
253.288 119.234 253.288 119.234 253.288 119.234 cv
253.08 117.864 li
253.288 119.234 li
253.288 119.234 mo
253.281 119.229 253.274 119.225 253.268 119.221 cv
253.002 119.048 252.735 118.888 252.456 118.735 cv
251.205 118.043 249.848 117.544 248.417 117.271 cv
234.085 114.542 li
235.713 111.975 li
251.585 113.769 li
253.288 119.234 li
.619608 .756863 .372549 rgb
f
267.474 132.389 mo
267.474 132.442 li
267.481 134.086 266.443 135.55 264.892 136.095 cv
252.509 140.4 li
251.651 140.693 250.759 140.846 249.854 140.846 cv
174.963 140.846 li
170.085 140.846 165.474 138.611 162.453 134.778 cv
154.462 124.644 li
153.903 123.932 153.597 123.053 153.597 122.148 cv
153.597 122.095 li
153.597 121.703 153.65 121.323 153.763 120.964 cv
154.196 119.46 155.486 118.302 157.11 118.096 cv
186.567 114.23 li
232.447 114.23 li
248.417 117.271 li
249.848 117.544 251.205 118.043 252.456 118.735 cv
252.735 118.888 253.002 119.048 253.268 119.221 cv
254.512 120.019 255.623 121.031 256.562 122.208 cv
260.773 127.538 li
261.878 127.864 li
263.016 128.204 li
264.726 128.716 li
266.35 129.202 267.467 130.692 267.474 132.389 cv
.533333 .658824 .298039 rgb
f
250.318 140.833 mo
250.318 140.833 250.318 140.833 250.318 140.833 cv
250.318 140.833 250.318 140.833 250.318 140.833 cv
250.33 140.832 mo
250.334 140.832 250.337 140.832 250.34 140.832 cv
250.337 140.832 250.334 140.832 250.33 140.832 cv
250.342 140.832 mo
250.741 140.807 251.136 140.753 251.526 140.671 cv
251.136 140.754 250.74 140.807 250.342 140.832 cv
159.528 131.069 mo
158.823 130.174 li
159.528 131.069 li
159.528 131.069 li
.94902 .94902 .94902 rgb
f
249.854 140.846 mo
241.657 140.846 li
241.657 134.259 li
241.657 134.222 241.656 134.185 241.656 134.148 cv
266.179 135.324 li
265.809 135.654 265.38 135.923 264.892 136.093 cv
252.506 140.398 li
252.185 140.51 251.857 140.601 251.526 140.671 cv
251.136 140.753 250.741 140.807 250.342 140.832 cv
250.342 140.832 250.341 140.832 250.34 140.832 cv
250.337 140.832 250.334 140.832 250.33 140.832 cv
250.326 140.833 250.322 140.833 250.318 140.833 cv
250.318 140.833 250.318 140.833 250.318 140.833 cv
250.163 140.842 250.008 140.846 249.853 140.846 cv
.505882 .623529 .282353 rgb
f
165.602 127.063 mo
164.534 127.063 163.665 126.194 163.665 125.126 cv
163.665 124.057 164.534 123.188 165.602 123.188 cv
166.671 123.188 167.54 124.057 167.54 125.126 cv
167.54 126.194 166.671 127.063 165.602 127.063 cv
.243137 .192157 .172549 rgb
f
167.143 125.126 mo
167.143 125.976 166.453 126.666 165.602 126.666 cv
164.752 126.666 164.062 125.976 164.062 125.126 cv
164.062 124.275 164.752 123.585 165.602 123.585 cv
166.453 123.585 167.143 124.275 167.143 125.126 cv
.670588 .929412 .890196 rgb
f
184.002 127.063 mo
182.933 127.063 182.064 126.194 182.064 125.126 cv
182.064 124.057 182.933 123.188 184.002 123.188 cv
185.07 123.188 185.94 124.057 185.94 125.126 cv
185.94 126.194 185.07 127.063 184.002 127.063 cv
.243137 .192157 .172549 rgb
f
185.542 125.126 mo
185.542 125.976 184.853 126.666 184.002 126.666 cv
183.151 126.666 182.462 125.976 182.462 125.126 cv
182.462 124.275 183.151 123.585 184.002 123.585 cv
184.853 123.585 185.542 124.275 185.542 125.126 cv
.670588 .929412 .890196 rgb
f
202.402 127.063 mo
201.333 127.063 200.464 126.194 200.464 125.126 cv
200.464 124.057 201.333 123.188 202.402 123.188 cv
203.47 123.188 204.339 124.057 204.339 125.126 cv
204.339 126.194 203.47 127.063 202.402 127.063 cv
.243137 .192157 .172549 rgb
f
203.942 125.126 mo
203.942 125.976 203.252 126.666 202.402 126.666 cv
201.551 126.666 200.861 125.976 200.861 125.126 cv
200.861 124.275 201.551 123.585 202.402 123.585 cv
203.252 123.585 203.942 124.275 203.942 125.126 cv
.670588 .929412 .890196 rgb
f
220.801 127.063 mo
219.733 127.063 218.864 126.194 218.864 125.126 cv
218.864 124.057 219.733 123.188 220.801 123.188 cv
221.87 123.188 222.739 124.057 222.739 125.126 cv
222.739 126.194 221.87 127.063 220.801 127.063 cv
.243137 .192157 .172549 rgb
f
222.342 125.126 mo
222.342 125.976 221.652 126.666 220.801 126.666 cv
219.951 126.666 219.261 125.976 219.261 125.126 cv
219.261 124.275 219.951 123.585 220.801 123.585 cv
221.652 123.585 222.342 124.275 222.342 125.126 cv
.670588 .929412 .890196 rgb
f
263.016 128.204 mo
242.734 128.204 li
241.304 126.054 li
244.551 120.811 li
244.804 120.738 li
244.85 120.725 249.389 119.52 252.456 118.735 cv
252.735 118.888 253.002 119.048 253.268 119.221 cv
254.512 120.019 255.623 121.031 256.562 122.208 cv
260.773 127.538 li
261.878 127.864 li
263.016 128.204 li
.243137 .192157 .172549 rgb
f
260.773 127.538 mo
243.094 127.538 li
242.282 126.321 li
242.096 126.041 li
242.355 125.615 li
244.977 121.383 li
244.977 121.383 250.214 119.986 253.268 119.221 cv
254.512 120.019 255.623 121.031 256.562 122.208 cv
256.575 122.222 li
257.074 122.861 li
260.773 127.538 li
.670588 .929412 .890196 rgb
f
248.391 127.971 mo
247.37 124.745 li
244.664 121.384 li
245.183 120.967 li
247.986 124.485 li
249.025 127.771 li
248.391 127.971 li
cp
.243137 .192157 .172549 rgb
f
255.253 127.971 mo
253.692 123.003 li
250.908 119.727 li
251.415 119.296 li
254.307 122.739 li
255.887 127.771 li
255.253 127.971 li
cp
f
257.074 122.861 mo
253.947 123.053 li
247.765 124.903 li
246.96 125.116 243.453 126.028 242.282 126.321 cv
242.076 126.374 241.943 126.407 241.903 126.414 cv
241.789 125.755 li
241.836 125.748 242.042 125.695 242.355 125.615 cv
243.446 125.342 245.862 124.717 247.585 124.264 cv
253.867 122.388 li
256.575 122.222 li
257.074 122.861 li
cp
f
239.799 126.467 mo
239.799 133.981 li
239.799 134.767 239.159 135.408 238.372 135.408 cv
235.565 135.408 li
234.779 135.408 234.142 134.767 234.142 133.981 cv
234.142 126.467 li
234.142 125.68 234.779 125.04 235.565 125.04 cv
238.372 125.04 li
239.159 125.04 239.799 125.68 239.799 126.467 cv
.462745 .568627 .258824 rgb
f
236.969 129.89 mo
235.938 129.89 235.099 129.051 235.099 128.02 cv
235.099 126.989 235.938 126.15 236.969 126.15 cv
238 126.15 238.839 126.989 238.839 128.02 cv
238.839 129.051 238 129.89 236.969 129.89 cv
.243137 .192157 .172549 rgb
f
238.455 128.02 mo
238.455 128.841 237.79 129.506 236.969 129.506 cv
236.148 129.506 235.483 128.841 235.483 128.02 cv
235.483 127.199 236.148 126.534 236.969 126.534 cv
237.79 126.534 238.455 127.199 238.455 128.02 cv
.670588 .929412 .890196 rgb
f
174.963 140.846 mo
174.963 140.846 li
174.508 140.846 174.055 140.827 173.605 140.788 cv
172.934 140.731 172.271 140.632 171.618 140.491 cv
170.298 140.208 169.024 139.758 167.825 139.157 cv
167.825 139.157 li
170.014 140.254 172.454 140.846 174.965 140.846 cv
241.656 134.148 mo
239.797 134.059 li
239.799 134.033 239.799 134.007 239.799 133.981 cv
239.799 127.478 li
240.961 129.434 241.636 131.713 241.656 134.148 cv
234.142 133.787 mo
230.819 133.628 li
231.119 132.41 li
231.613 130.402 229.992 128.732 227.485 128.732 cv
163.176 128.732 li
161.684 128.732 160.506 129.324 159.9 130.226 cv
158.823 130.174 li
154.462 124.644 li
153.903 123.932 153.597 123.053 153.597 122.148 cv
153.597 122.095 li
153.597 121.703 153.65 121.323 153.763 120.964 cv
228.362 120.964 li
232.126 120.964 235.523 122.528 237.941 125.04 cv
235.565 125.04 li
234.779 125.04 234.142 125.68 234.142 126.467 cv
234.142 133.787 li
220.801 123.188 mo
219.733 123.188 218.864 124.057 218.864 125.126 cv
218.864 126.194 219.733 127.063 220.801 127.063 cv
221.87 127.063 222.739 126.194 222.739 125.126 cv
222.739 124.057 221.87 123.188 220.801 123.188 cv
202.402 123.188 mo
201.333 123.188 200.464 124.057 200.464 125.126 cv
200.464 126.194 201.333 127.063 202.402 127.063 cv
203.47 127.063 204.339 126.194 204.339 125.126 cv
204.339 124.057 203.47 123.188 202.402 123.188 cv
184.002 123.188 mo
182.933 123.188 182.064 124.057 182.064 125.126 cv
182.064 126.194 182.933 127.063 184.002 127.063 cv
185.07 127.063 185.94 126.194 185.94 125.126 cv
185.94 124.057 185.07 123.188 184.002 123.188 cv
165.602 123.188 mo
164.534 123.188 163.665 124.057 163.665 125.126 cv
163.665 126.194 164.534 127.063 165.602 127.063 cv
166.671 127.063 167.54 126.194 167.54 125.126 cv
167.54 124.057 166.671 123.188 165.602 123.188 cv
.505882 .623529 .282353 rgb
f
241.657 140.846 mo
210.626 140.846 li
208.639 140.846 li
174.963 140.846 li
172.454 140.846 170.014 140.254 167.825 139.157 cv
225.236 139.157 li
227.568 139.157 229.821 137.681 230.28 135.817 cv
230.28 135.817 li
230.819 133.628 li
234.142 133.787 li
234.142 133.981 li
234.142 134.767 234.779 135.408 235.565 135.408 cv
238.372 135.408 li
239.133 135.408 239.757 134.809 239.797 134.059 cv
241.656 134.148 li
241.656 134.185 241.657 134.222 241.657 134.259 cv
241.657 140.846 li
159.528 131.069 mo
158.823 130.174 li
159.9 130.226 li
159.728 130.484 159.601 130.767 159.528 131.069 cv
.478431 .592157 .266667 rgb
f
165.602 127.063 mo
164.534 127.063 163.665 126.194 163.665 125.126 cv
163.665 124.057 164.534 123.188 165.602 123.188 cv
166.671 123.188 167.54 124.057 167.54 125.126 cv
167.54 126.194 166.671 127.063 165.602 127.063 cv
165.602 123.585 mo
164.752 123.585 164.062 124.275 164.062 125.126 cv
164.062 125.976 164.752 126.666 165.602 126.666 cv
166.453 126.666 167.143 125.976 167.143 125.126 cv
167.143 124.275 166.453 123.585 165.602 123.585 cv
.231373 .184314 .164706 rgb
f
165.602 126.666 mo
164.752 126.666 164.062 125.976 164.062 125.126 cv
164.062 124.275 164.752 123.585 165.602 123.585 cv
166.453 123.585 167.143 124.275 167.143 125.126 cv
167.143 125.976 166.453 126.666 165.602 126.666 cv
.635294 .882353 .843137 rgb
f
184.002 127.063 mo
182.933 127.063 182.064 126.194 182.064 125.126 cv
182.064 124.057 182.933 123.188 184.002 123.188 cv
185.07 123.188 185.94 124.057 185.94 125.126 cv
185.94 126.194 185.07 127.063 184.002 127.063 cv
184.002 123.585 mo
183.151 123.585 182.462 124.275 182.462 125.126 cv
182.462 125.976 183.151 126.666 184.002 126.666 cv
184.853 126.666 185.542 125.976 185.542 125.126 cv
185.542 124.275 184.853 123.585 184.002 123.585 cv
.231373 .184314 .164706 rgb
f
184.002 126.666 mo
183.151 126.666 182.462 125.976 182.462 125.126 cv
182.462 124.275 183.151 123.585 184.002 123.585 cv
184.853 123.585 185.542 124.275 185.542 125.126 cv
185.542 125.976 184.853 126.666 184.002 126.666 cv
.635294 .882353 .843137 rgb
f
202.402 127.063 mo
201.333 127.063 200.464 126.194 200.464 125.126 cv
200.464 124.057 201.333 123.188 202.402 123.188 cv
203.47 123.188 204.339 124.057 204.339 125.126 cv
204.339 126.194 203.47 127.063 202.402 127.063 cv
202.402 123.585 mo
201.551 123.585 200.861 124.275 200.861 125.126 cv
200.861 125.976 201.551 126.666 202.402 126.666 cv
203.252 126.666 203.942 125.976 203.942 125.126 cv
203.942 124.275 203.252 123.585 202.402 123.585 cv
.231373 .184314 .164706 rgb
f
202.402 126.666 mo
201.551 126.666 200.861 125.976 200.861 125.126 cv
200.861 124.275 201.551 123.585 202.402 123.585 cv
203.252 123.585 203.942 124.275 203.942 125.126 cv
203.942 125.976 203.252 126.666 202.402 126.666 cv
.635294 .882353 .843137 rgb
f
220.801 127.063 mo
219.733 127.063 218.864 126.194 218.864 125.126 cv
218.864 124.057 219.733 123.188 220.801 123.188 cv
221.87 123.188 222.739 124.057 222.739 125.126 cv
222.739 126.194 221.87 127.063 220.801 127.063 cv
220.801 123.585 mo
219.951 123.585 219.261 124.275 219.261 125.126 cv
219.261 125.976 219.951 126.666 220.801 126.666 cv
221.652 126.666 222.342 125.976 222.342 125.126 cv
222.342 124.275 221.652 123.585 220.801 123.585 cv
.231373 .184314 .164706 rgb
f
220.801 126.666 mo
219.951 126.666 219.261 125.976 219.261 125.126 cv
219.261 124.275 219.951 123.585 220.801 123.585 cv
221.652 123.585 222.342 124.275 222.342 125.126 cv
222.342 125.976 221.652 126.666 220.801 126.666 cv
.635294 .882353 .843137 rgb
f
238.372 135.408 mo
235.565 135.408 li
234.779 135.408 234.142 134.767 234.142 133.981 cv
234.142 133.787 li
234.142 126.467 li
234.142 125.68 234.779 125.04 235.565 125.04 cv
237.941 125.04 li
238.65 125.776 239.274 126.594 239.799 127.478 cv
239.799 133.981 li
239.799 134.007 239.799 134.033 239.797 134.059 cv
239.757 134.809 239.133 135.408 238.372 135.408 cv
236.969 126.15 mo
235.938 126.15 235.099 126.989 235.099 128.02 cv
235.099 129.051 235.938 129.89 236.969 129.89 cv
238 129.89 238.839 129.051 238.839 128.02 cv
238.839 126.989 238 126.15 236.969 126.15 cv
.439216 .541176 .247059 rgb
f
236.969 129.89 mo
235.938 129.89 235.099 129.051 235.099 128.02 cv
235.099 126.989 235.938 126.15 236.969 126.15 cv
238 126.15 238.839 126.989 238.839 128.02 cv
238.839 129.051 238 129.89 236.969 129.89 cv
236.969 126.534 mo
236.148 126.534 235.483 127.199 235.483 128.02 cv
235.483 128.841 236.148 129.506 236.969 129.506 cv
237.79 129.506 238.455 128.841 238.455 128.02 cv
238.455 127.199 237.79 126.534 236.969 126.534 cv
.231373 .184314 .164706 rgb
f
236.969 129.506 mo
236.148 129.506 235.483 128.841 235.483 128.02 cv
235.483 127.199 236.148 126.534 236.969 126.534 cv
237.79 126.534 238.455 127.199 238.455 128.02 cv
238.455 128.841 237.79 129.506 236.969 129.506 cv
.635294 .882353 .843137 rgb
f
253.073 117.815 mo
252.475 113.869 li
251.544 107.736 li
251.4 106.787 250.742 106.027 249.879 105.723 cv
250.744 106.027 251.402 106.788 251.544 107.736 cv
252.476 113.871 li
253.073 117.815 li
232.447 114.23 mo
234.131 111.795 li
237.677 106.671 li
237.886 106.372 238.152 106.127 238.454 105.945 cv
238.152 106.127 237.886 106.373 237.68 106.672 cv
232.447 114.23 li
186.787 114.23 mo
186.784 114.23 li
186.784 113.158 li
186.787 113.159 li
186.787 114.23 li
238.457 105.943 mo
238.457 105.943 238.458 105.942 238.458 105.942 cv
238.458 105.942 238.457 105.943 238.457 105.943 cv
1 1 1 rgb
f
232.447 114.23 mo
232.447 114.23 li
237.68 106.672 li
237.886 106.373 238.152 106.127 238.454 105.945 cv
238.455 105.944 238.456 105.944 238.457 105.943 cv
238.457 105.943 238.458 105.942 238.458 105.942 cv
238.848 105.708 239.299 105.58 239.767 105.58 cv
249.036 105.58 li
249.33 105.58 249.614 105.63 249.879 105.723 cv
250.742 106.027 251.4 106.787 251.544 107.736 cv
252.474 113.869 li
251.585 113.769 li
250.273 109.559 li
249.768 107.942 248.291 106.831 246.6 106.798 cv
242.415 106.704 li
242.371 106.703 242.326 106.703 242.282 106.703 cv
240.276 106.703 238.405 107.733 237.325 109.433 cv
235.713 111.975 li
234.132 111.797 li
232.447 114.23 li
.72549 .835294 .513725 rgb
f
253.08 117.864 mo
252.474 113.869 li
252.475 113.869 li
253.073 117.815 li
253.08 117.864 li
.9606 .9606 .9606 rgb
f
253.288 119.234 mo
253.288 119.234 li
251.585 113.769 li
252.475 113.869 li
253.08 117.864 li
253.288 119.234 li
234.085 114.542 mo
232.447 114.23 li
234.132 111.797 li
235.713 111.975 li
234.085 114.542 li
.694118 .803922 .498039 rgb
f
186.784 116.264 mo
186.784 114.23 li
186.787 114.23 li
232.447 114.23 li
234.085 114.542 li
233.878 114.869 li
233.472 115.514 232.76 115.907 232.001 115.914 cv
186.784 116.264 li
.627451 .72549 .439216 rgb
f
253.288 119.234 mo
253.288 119.234 li
253.288 119.234 li
253.288 119.234 li
.737255 .945098 .913725 rgb
f
154.861 118.735 mo
154.861 100.955 li
154.861 100.386 155.019 99.8532 155.293 99.398 cv
155.019 99.8529 154.862 100.385 154.862 100.955 cv
154.862 118.723 li
154.861 118.735 li
185.651 112.841 mo
184.2 112.435 li
184.191 112.421 li
184.199 112.433 li
185.651 112.841 li
180.07 105.579 mo
176.344 99.3929 li
176.238 99.2161 176.115 99.0528 175.978 98.9042 cv
176.116 99.0526 176.239 99.2155 176.347 99.3916 cv
180.07 105.579 li
157.471 97.9564 mo
157.607 97.9375 157.747 97.9278 157.888 97.9278 cv
157.889 97.9278 li
157.747 97.9278 157.608 97.9375 157.471 97.9564 cv
173.88 97.9305 mo
173.837 97.9287 173.794 97.9278 173.751 97.9278 cv
173.752 97.9278 li
173.795 97.9278 173.838 97.9287 173.88 97.9305 cv
1 1 1 rgb
f
154.862 118.723 mo
154.862 100.955 li
154.862 100.385 155.019 99.8529 155.293 99.398 cv
155.754 98.6309 156.546 98.0844 157.471 97.9564 cv
157.608 97.9375 157.747 97.9278 157.889 97.9278 cv
173.751 97.9278 li
173.794 97.9278 173.837 97.9287 173.88 97.9305 cv
174.684 97.9649 175.437 98.3213 175.978 98.9042 cv
176.115 99.0528 176.238 99.2161 176.344 99.3929 cv
180.07 105.579 li
183.725 111.652 li
181.388 111.539 li
175.435 101.501 li
174.757 100.35 173.512 99.6444 172.175 99.6444 cv
159.066 99.6444 li
157.722 99.6444 156.604 100.662 156.478 102 cv
155.677 110.293 li
154.862 110.254 li
154.862 118.723 li
184.2 112.435 mo
184.2 112.435 li
184.189 112.418 li
184.191 112.421 li
184.2 112.435 li
.72549 .835294 .513725 rgb
f
154.862 118.723 mo
154.862 110.254 li
155.677 110.293 li
154.862 118.723 li
183.805 114.593 mo
183.805 112.325 li
181.923 112.44 li
181.388 111.539 li
183.725 111.652 li
183.726 111.655 li
184.189 112.418 li
184.2 112.435 li
183.805 112.325 li
183.805 114.593 li
.694118 .803922 .498039 rgb
f
183.805 119.478 mo
170.211 118.646 li
170.211 113.157 li
183.805 112.325 li
183.805 119.478 li
.533333 .658824 .298039 rgb
f
165.616 119.062 mo
170.211 118.646 li
170.211 113.157 li
165.616 112.741 li
165.616 119.062 li
.462745 .568627 .258824 rgb
f
183.805 119.478 mo
186.784 118.646 li
186.784 113.157 li
183.805 112.325 li
183.805 119.478 li
.654902 .796078 .392157 rgb
f
183.805 119.478 mo
170.211 118.646 li
170.211 115.402 li
183.805 116.302 li
183.805 119.478 li
.454902 .560784 .254902 rgb
f
165.616 119.062 mo
165.616 115.097 li
170.211 115.402 li
170.211 118.646 li
165.616 119.062 li
.392157 .482353 .219608 rgb
f
183.805 119.478 mo
183.805 116.302 li
186.784 116.5 li
186.784 118.646 li
183.805 119.478 li
.556863 .678431 .333333 rgb
f
225.236 139.157 mo
165.425 139.157 li
163.093 139.157 160.84 137.681 160.381 135.817 cv
159.542 132.41 li
159.048 130.402 160.669 128.732 163.176 128.732 cv
227.485 128.732 li
229.992 128.732 231.613 130.402 231.119 132.41 cv
230.28 135.817 li
229.821 137.681 227.568 139.157 225.236 139.157 cv
.462745 .568627 .258824 rgb
f
167.825 139.157 mo
165.425 139.157 li
163.093 139.157 160.84 137.681 160.381 135.817 cv
159.542 132.41 li
159.541 132.406 159.54 132.403 159.54 132.399 cv
159.541 132.403 159.541 132.406 159.542 132.41 cv
160.381 135.817 li
160.84 137.681 163.093 139.157 165.425 139.157 cv
167.825 139.157 li
167.825 139.157 li
159.539 132.396 mo
159.538 132.394 159.538 132.391 159.537 132.388 cv
159.538 132.391 159.538 132.393 159.539 132.396 cv
159.536 132.384 mo
159.536 132.382 159.535 132.38 159.535 132.378 cv
159.535 132.38 159.536 132.382 159.536 132.384 cv
159.533 132.373 mo
159.533 132.371 159.533 132.37 159.533 132.369 cv
159.533 132.37 159.533 132.372 159.533 132.373 cv
.85098 .85098 .85098 rgb
f
225.236 139.157 mo
167.825 139.157 li
165.425 139.157 li
163.093 139.157 160.84 137.681 160.381 135.817 cv
159.542 132.41 li
159.541 132.406 159.541 132.403 159.54 132.399 cv
159.539 132.398 159.539 132.397 159.539 132.396 cv
159.538 132.393 159.538 132.391 159.537 132.388 cv
159.537 132.387 159.536 132.386 159.536 132.384 cv
159.536 132.382 159.535 132.38 159.535 132.378 cv
159.534 132.376 159.534 132.374 159.533 132.373 cv
159.533 132.372 159.533 132.37 159.533 132.369 cv
159.347 131.57 159.501 130.828 159.909 130.224 cv
230.704 134.095 li
230.28 135.817 li
229.821 137.681 227.568 139.157 225.236 139.157 cv
.392157 .482353 .219608 rgb
f
169.982 97.096 mo
161.249 97.096 li
161.249 97.9277 li
169.982 97.9277 li
169.982 97.096 li
cp
0 0 0 rgb
f
168.236 96.2642 mo
162.996 96.2642 li
162.996 97.096 li
168.236 97.096 li
168.236 96.2642 li
cp
.380392 .309804 .286275 rgb
f
166.385 95.0686 mo
164.847 95.0686 li
164.847 93.7689 li
166.385 93.7689 li
166.385 95.0686 li
cp
f
163.607 95.8022 mo
161.694 93.8788 li
162.259 93.6591 li
164.172 95.5825 li
163.607 95.8022 li
cp
f
167.66 95.8079 mo
167.107 95.5769 li
169.165 93.6534 li
169.718 93.8845 li
167.66 95.8079 li
cp
f
169.982 93.353 mo
161.249 93.353 li
161.249 94.1848 li
169.982 94.1848 li
169.982 93.353 li
cp
0 0 0 rgb
f
167.071 94.7567 mo
164.16 94.7567 li
163.104 94.7567 162.247 95.292 162.247 95.9523 cv
162.247 96.2642 li
168.984 96.2642 li
168.984 95.9523 li
168.984 95.292 168.128 94.7567 167.071 94.7567 cv
cp
f
248.684 105.03 mo
241.52 105.03 li
241.52 105.713 li
248.684 105.713 li
248.684 105.03 li
cp
f
247.251 104.348 mo
242.953 104.348 li
242.953 105.03 li
247.251 105.03 li
247.251 104.348 li
cp
.380392 .309804 .286275 rgb
f
245.733 103.368 mo
244.471 103.368 li
244.471 102.302 li
245.733 102.302 li
245.733 103.368 li
cp
f
243.455 103.969 mo
241.885 102.392 li
242.349 102.211 li
243.918 103.789 li
243.455 103.969 li
cp
f
246.778 103.974 mo
246.325 103.784 li
248.013 102.207 li
248.467 102.396 li
246.778 103.974 li
cp
f
248.684 101.96 mo
241.52 101.96 li
241.52 102.643 li
248.684 102.643 li
248.684 101.96 li
cp
0 0 0 rgb
f
246.296 103.112 mo
243.908 103.112 li
243.042 103.112 242.339 103.551 242.339 104.092 cv
242.339 104.348 li
247.865 104.348 li
247.865 104.092 li
247.865 103.551 247.163 103.112 246.296 103.112 cv
cp
f
222.82 46.5673 mo
221.71 46.1835 li
221.975 39.7646 li
223.085 40.1485 li
222.82 46.5673 li
.243137 .192157 .172549 rgb
f
242.179 46.5549 mo
241.101 46.4291 li
239.313 39.9978 li
240.391 40.1236 li
242.179 46.5549 li
f
245.743 46.8498 mo
218.917 46.6884 li
218.631 46.6867 218.309 46.4678 218.199 46.1996 cv
218.089 45.9313 218.232 45.7151 218.519 45.7169 cv
245.345 45.8783 li
245.688 45.8804 245.996 45.8004 246.234 45.6465 cv
247.014 45.1411 li
247.213 45.0129 247.563 45.1005 247.797 45.3361 cv
248.032 45.572 248.062 45.8667 247.864 45.9947 cv
247.083 46.5003 li
246.725 46.7322 246.262 46.8529 245.743 46.8498 cv
cp
f
166.712 10.2008 mo
167.344 9.68538 li
186.482 8.0084 204.908 6.99805 223.488 7.47617 cv
223.469 8.39602 li
204.916 7.91992 185.82 8.5268 166.712 10.2008 cv
cp
f
283.001 10.3108 mo
282.369 9.79414 li
263.235 8.08104 244.811 7.03577 226.23 7.47885 cv
226.248 8.39871 li
244.801 7.95764 263.896 8.60051 283.001 10.3108 cv
cp
f
224.299 12.4817 mo
225.408 12.4828 li
225.412 8.47752 li
224.303 8.47645 li
224.299 12.4817 li
cp
.854902 .819608 .819608 rgb
f
223.056 8.47524 mo
224.301 9.79682 li
225.411 9.79776 li
226.66 8.47873 li
226.661 7.69354 li
226.661 7.46328 226.475 7.27651 226.245 7.27638 cv
223.474 7.27369 li
223.244 7.27356 223.057 7.45992 223.057 7.69005 cv
223.056 8.47524 li
cp
f
223.05 18.3823 mo
226.654 18.3857 li
225.731 11.282 li
223.98 11.2803 li
223.05 18.3823 li
.235294 .235294 .231373 rgb
f
223.758 7.64091 mo
225.96 7.64306 li
225.96 7.63567 li
225.96 7.23449 225.635 6.90889 225.234 6.90849 cv
224.485 6.90768 li
224.084 6.90742 223.758 7.23234 223.758 7.63353 cv
223.758 7.64091 li
cp
f
172.383 21.3613 mo
172.257 24.7365 li
218.755 31.3052 li
219.06 23.1005 li
172.383 21.3613 li
.976471 .713726 .34902 rgb
f
216.757 27.4748 mo
172.685 23.4372 li
173.132 22.2695 li
216.852 24.9105 li
216.757 27.4748 li
1 1 1 rgb
f
216.713 28.6576 mo
172.869 24.0495 li
173.301 22.9699 li
216.808 26.0932 li
216.713 28.6576 li
.768627 .27451 .270588 rgb
f
173.307 24.5161 mo
166.509 23.207 li
166.541 22.3404 li
174.702 22.1343 li
173.307 24.5161 li
.243137 .192157 .172549 rgb
f
167.704 22.1782 mo
168.027 22.936 167.675 23.8123 166.917 24.1353 cv
166.159 24.4584 165.283 24.1058 164.96 23.348 cv
164.637 22.5901 164.989 21.7139 165.747 21.3908 cv
166.505 21.0678 167.381 21.4203 167.704 22.1782 cv
.976471 .713726 .34902 rgb
f
172.232 18.384 mo
166.701 21.6682 li
166.261 22.7077 li
167.389 22.7087 li
172.594 18.8858 li
172.476 18.7172 172.355 18.55 172.232 18.384 cv
.243137 .192157 .172549 rgb
f
165.695 23.6847 mo
166.261 22.7077 li
166.941 23.6087 li
167.027 30.6337 li
166.466 30.6679 li
165.695 23.6847 li
f
165.697 21.7296 mo
166.261 22.7077 li
165.14 22.8462 li
159.013 19.4081 li
159.264 18.9054 li
165.697 21.7296 li
f
166.75 21.9205 mo
167.207 22.1479 167.392 22.7021 167.165 23.1583 cv
166.937 23.6145 166.383 23.7999 165.927 23.5725 cv
165.471 23.3451 165.285 22.7908 165.513 22.3346 cv
165.74 21.8785 166.294 21.6931 166.75 21.9205 cv
f
166.541 22.3404 mo
166.765 22.4522 166.857 22.7247 166.745 22.949 cv
166.633 23.1733 166.36 23.2645 166.136 23.1526 cv
165.912 23.0409 165.821 22.7683 165.932 22.544 cv
166.044 22.3197 166.317 22.2285 166.541 22.3404 cv
.854902 .819608 .819608 rgb
f
166.111 28.5034 mo
162.939 28.3853 160.462 25.7172 160.58 22.5446 cv
160.699 19.3718 163.367 16.8954 166.539 17.0137 cv
169.712 17.1319 172.189 19.7998 172.07 22.9727 cv
171.952 26.1454 169.284 28.6217 166.111 28.5034 cv
174.219 19.4131 mo
170.074 15.6881 164.609 14.3967 160.323 14.4651 cv
158.81 14.4894 157.582 15.6916 157.492 17.2019 cv
157.308 20.2975 159.02 25.8939 162.292 30.2158 cv
163.055 31.2244 164.382 31.555 165.59 31.1787 cv
169.446 29.977 172.604 27.4788 174.971 22.6064 cv
175.494 21.5303 175.11 20.2128 174.219 19.4131 cv
.839216 .6 .262745 rgb
f
164.607 31.3295 mo
163.712 31.3295 162.851 30.9545 162.292 30.2158 cv
162.292 30.2158 li
162.292 30.2158 li
162.851 30.9545 163.712 31.3295 164.608 31.3295 cv
164.607 31.3295 li
165.59 31.1787 mo
165.59 31.1787 li
165.597 31.1766 165.603 31.1745 165.61 31.1724 cv
165.603 31.1745 165.596 31.1766 165.59 31.1787 cv
165.59 31.1787 li
165.619 31.1694 mo
165.623 31.1683 165.627 31.1671 165.63 31.166 cv
165.627 31.1671 165.623 31.1683 165.619 31.1694 cv
165.642 31.1624 mo
165.644 31.1616 165.647 31.1606 165.65 31.1598 cv
165.647 31.1607 165.644 31.1616 165.642 31.1624 cv
165.662 31.1559 mo
165.664 31.1553 165.666 31.1547 165.668 31.154 cv
165.666 31.1547 165.664 31.1553 165.662 31.1559 cv
162.271 30.1882 mo
162.268 30.1842 162.265 30.1801 162.262 30.1761 cv
162.265 30.1801 162.268 30.1842 162.271 30.1882 cv
162.25 30.1602 mo
162.246 30.1557 162.243 30.1516 162.24 30.1471 cv
162.243 30.1516 162.246 30.1557 162.25 30.1602 cv
162.228 30.1317 mo
162.225 30.1273 162.222 30.123 162.219 30.1187 cv
162.222 30.1229 162.225 30.1274 162.228 30.1317 cv
162.207 30.1032 mo
162.204 30.0987 162.201 30.0946 162.197 30.0901 cv
162.201 30.0943 162.204 30.099 162.207 30.1032 cv
162.182 30.0692 mo
162.178 30.0639 162.174 30.0587 162.17 30.0534 cv
162.174 30.0585 162.178 30.0642 162.182 30.0692 cv
162.157 30.0353 mo
162.154 30.0311 162.151 30.027 162.147 30.0229 cv
162.151 30.0271 162.154 30.0311 162.157 30.0353 cv
162.135 30.0064 mo
162.132 30.0026 162.129 29.9984 162.127 29.9946 cv
162.129 29.9986 162.132 30.0024 162.135 30.0064 cv
162.113 29.9764 mo
162.111 29.9732 162.108 29.9697 162.106 29.9664 cv
162.108 29.9696 162.111 29.9732 162.113 29.9764 cv
162.089 29.9432 mo
162.088 29.9416 162.086 29.9398 162.085 29.9382 cv
162.086 29.94 162.087 29.9413 162.089 29.9432 cv
162.041 29.8777 mo
162.041 29.8773 162.04 29.8767 162.04 29.8762 cv
162.04 29.8767 162.041 29.8772 162.041 29.8777 cv
166.228 28.5066 mo
166.189 28.5059 166.15 28.5048 166.111 28.5034 cv
166.227 28.502 li
166.228 28.5066 li
167 28.4685 mo
167 28.4613 li
169.345 28.1863 171.276 26.4978 171.876 24.2406 cv
171.881 24.2416 li
171.28 26.4998 169.346 28.1941 167 28.4685 cv
164.979 23.3908 mo
164.979 23.3907 164.978 23.3906 164.978 23.3905 cv
164.978 23.3906 164.979 23.3906 164.979 23.3908 cv
164.975 23.3825 mo
164.975 23.3823 164.975 23.3822 164.975 23.382 cv
164.975 23.3822 164.975 23.3823 164.975 23.3825 cv
164.971 23.374 mo
164.971 23.3735 164.97 23.373 164.97 23.3725 cv
164.97 23.373 164.971 23.3735 164.971 23.374 cv
164.968 23.3663 mo
164.967 23.3654 164.967 23.3644 164.966 23.3635 cv
164.967 23.3644 164.967 23.3654 164.968 23.3663 cv
164.964 23.3585 mo
164.964 23.3575 164.963 23.3566 164.963 23.3556 cv
164.963 23.3566 164.964 23.3575 164.964 23.3585 cv
160.576 22.7668 mo
160.576 22.693 160.578 22.6189 160.58 22.5446 cv
160.586 22.3877 160.598 22.2324 160.617 22.0792 cv
160.62 22.0795 li
160.601 22.2328 160.586 22.3874 160.58 22.5446 cv
160.578 22.6189 160.576 22.693 160.576 22.7668 cv
164.507 22.4906 mo
164.45 22.4587 li
164.507 22.4906 li
.94902 .94902 .94902 rgb
f
214.742 30.7383 mo
173.667 24.9356 li
173.824 24.6923 173.979 24.4412 174.131 24.1821 cv
214.826 28.4594 li
214.742 30.7383 li
.92549 .678431 .329412 rgb
f
214.826 28.4594 mo
174.131 24.1821 li
174.268 23.9471 174.404 23.7056 174.537 23.4573 cv
214.864 27.4497 li
214.826 28.4594 li
.729412 .258824 .254902 rgb
f
171.881 24.2416 mo
171.876 24.2407 li
171.876 24.2406 171.876 24.2406 171.876 24.2406 cv
167.666 23.4299 li
167.764 23.2331 167.819 23.0153 167.824 22.7927 cv
172.056 23.2117 li
172.029 23.5653 171.969 23.9096 171.881 24.2416 cv
.231373 .184314 .164706 rgb
f
165.745 24.1314 mo
165.418 23.991 165.139 23.7366 164.979 23.3908 cv
164.979 23.3906 164.978 23.3906 164.978 23.3905 cv
164.977 23.3878 164.976 23.3851 164.975 23.3825 cv
164.975 23.3823 164.975 23.3822 164.975 23.382 cv
164.973 23.3793 164.972 23.3767 164.971 23.374 cv
164.971 23.3735 164.97 23.373 164.97 23.3725 cv
164.969 23.3704 164.968 23.3684 164.968 23.3663 cv
164.967 23.3654 164.967 23.3644 164.966 23.3635 cv
164.966 23.3618 164.965 23.3601 164.964 23.3585 cv
164.964 23.3575 164.963 23.3566 164.963 23.3556 cv
164.962 23.3531 164.961 23.3505 164.96 23.348 cv
164.96 23.348 li
164.96 23.348 li
164.867 23.1302 164.836 22.9034 164.848 22.682 cv
165.14 22.8462 li
165.418 22.8119 li
165.437 23.0812 165.574 23.336 165.803 23.4985 cv
165.695 23.6847 li
165.745 24.1314 li
166.947 24.1186 mo
166.941 23.6087 li
166.863 23.506 li
166.988 23.4203 167.092 23.3029 167.165 23.1583 cv
167.232 23.0228 167.263 22.8787 167.262 22.737 cv
167.824 22.7927 li
167.819 23.0153 167.764 23.2331 167.666 23.4299 cv
167.659 23.4286 li
167.512 23.7238 167.269 23.9722 166.947 24.1186 cv
.92549 .678431 .329412 rgb
f
166.329 28.5075 mo
166.295 28.5075 166.262 28.5072 166.228 28.5066 cv
166.227 28.502 li
166.227 28.502 li
165.745 24.1314 li
165.745 24.1314 165.745 24.1314 165.745 24.1314 cv
165.695 23.6847 li
165.803 23.4985 li
165.842 23.5259 165.883 23.5507 165.927 23.5725 cv
166.059 23.6385 166.199 23.6697 166.338 23.6697 cv
166.525 23.6697 166.709 23.6122 166.863 23.506 cv
166.941 23.6087 li
166.947 24.1186 li
166.947 24.1186 166.947 24.1186 166.947 24.1186 cv
167 28.4613 li
167 28.4613 li
167 28.4685 li
166.78 28.4942 166.556 28.5075 166.329 28.5075 cv
.231373 .184314 .164706 rgb
f
165.14 22.8462 mo
164.848 22.682 li
164.848 22.682 164.848 22.682 164.848 22.6819 cv
164.507 22.4906 li
164.45 22.4587 li
165.435 22.5562 li
165.417 22.6412 165.412 22.7273 165.418 22.8119 cv
165.14 22.8462 li
f
166.338 23.6697 mo
166.199 23.6697 166.059 23.6385 165.927 23.5725 cv
165.883 23.5507 165.842 23.5259 165.803 23.4985 cv
165.574 23.336 165.437 23.0812 165.418 22.8119 cv
165.412 22.7273 165.417 22.6412 165.435 22.5562 cv
165.908 22.603 li
165.837 22.8141 165.931 23.0505 166.136 23.1526 cv
166.201 23.1851 166.27 23.2005 166.338 23.2005 cv
166.505 23.2005 166.665 23.1083 166.745 22.949 cv
166.786 22.8658 166.8 22.776 166.789 22.6902 cv
167.262 22.737 li
167.263 22.8787 167.232 23.0228 167.165 23.1583 cv
167.092 23.3029 166.988 23.4203 166.863 23.506 cv
166.709 23.6122 166.525 23.6697 166.338 23.6697 cv
f
166.338 23.2005 mo
166.27 23.2005 166.201 23.1851 166.136 23.1526 cv
165.931 23.0505 165.837 22.8141 165.908 22.603 cv
166.789 22.6902 li
166.8 22.776 166.786 22.8658 166.745 22.949 cv
166.665 23.1083 166.505 23.2005 166.338 23.2005 cv
.811765 .776471 .776471 rgb
f
164.608 31.3295 mo
163.712 31.3295 162.851 30.9545 162.292 30.2158 cv
162.292 30.2158 li
162.285 30.2065 162.278 30.1974 162.271 30.1882 cv
162.268 30.1842 162.265 30.1801 162.262 30.1761 cv
162.258 30.1709 162.254 30.1654 162.25 30.1602 cv
162.246 30.1557 162.243 30.1516 162.24 30.1471 cv
162.236 30.142 162.232 30.1368 162.228 30.1317 cv
162.225 30.1274 162.222 30.1229 162.219 30.1187 cv
162.215 30.1135 162.211 30.1083 162.207 30.1032 cv
162.204 30.099 162.201 30.0943 162.197 30.0901 cv
162.192 30.0832 162.187 30.0761 162.182 30.0692 cv
162.178 30.0642 162.174 30.0585 162.17 30.0534 cv
162.166 30.0475 162.161 30.0413 162.157 30.0353 cv
162.154 30.0311 162.151 30.0271 162.147 30.0229 cv
162.143 30.0172 162.139 30.012 162.135 30.0064 cv
162.132 30.0024 162.129 29.9986 162.127 29.9946 cv
162.122 29.9885 162.118 29.9825 162.113 29.9764 cv
162.111 29.9732 162.108 29.9696 162.106 29.9664 cv
162.1 29.9586 162.095 29.9511 162.089 29.9432 cv
162.087 29.9413 162.086 29.94 162.085 29.9382 cv
162.07 29.9181 162.056 29.8979 162.041 29.8777 cv
162.041 29.8772 162.04 29.8767 162.04 29.8762 cv
160.199 27.3452 158.884 24.4243 158.153 21.8352 cv
160.617 22.0792 li
160.598 22.2324 160.586 22.3877 160.58 22.5446 cv
160.578 22.6189 160.576 22.693 160.576 22.7668 cv
160.579 25.8411 163.013 28.3881 166.111 28.5034 cv
166.111 28.5034 li
166.15 28.5048 166.189 28.5059 166.228 28.5066 cv
166.262 28.5072 166.295 28.5075 166.329 28.5075 cv
166.556 28.5075 166.78 28.4942 167 28.4685 cv
169.346 28.1941 171.28 26.4998 171.881 24.2416 cv
171.969 23.9096 172.029 23.5653 172.056 23.2117 cv
174.537 23.4573 li
174.404 23.7056 174.268 23.9471 174.131 24.1821 cv
173.979 24.4412 173.824 24.6923 173.667 24.9356 cv
173.663 24.935 li
171.5 28.2767 168.82 30.1549 165.668 31.154 cv
165.666 31.1547 165.664 31.1553 165.662 31.1559 cv
165.658 31.1572 165.654 31.1585 165.65 31.1598 cv
165.647 31.1606 165.644 31.1616 165.642 31.1624 cv
165.638 31.1637 165.634 31.1648 165.63 31.166 cv
165.627 31.1671 165.623 31.1683 165.619 31.1694 cv
165.616 31.1704 165.613 31.1714 165.61 31.1724 cv
165.603 31.1745 165.597 31.1766 165.59 31.1787 cv
165.59 31.1787 li
165.266 31.2794 164.935 31.3295 164.608 31.3295 cv
.796078 .568627 .25098 rgb
f
249.471 36.7534 mo
249.469 36.808 li
249.453 37.2418 249.382 37.6655 249.265 38.0643 cv
249.193 38.3197 249.098 38.5705 248.987 38.8089 cv
248.132 40.6629 246.223 41.9141 244.055 41.8332 cv
224.105 41.0899 li
218.729 40.8896 214.532 36.3669 214.732 30.9909 cv
215.058 22.2354 li
215.16 19.5005 217.458 17.3678 220.193 17.4697 cv
228.073 17.7633 li
237.157 19.6685 248.998 28.0854 249.471 36.7534 cv
.976471 .713726 .34902 rgb
f
249.265 38.0643 mo
249.193 38.3197 249.098 38.5705 248.987 38.8089 cv
234.343 35.8806 li
229.756 34.9663 226.555 30.9072 226.729 26.2344 cv
227.046 17.7251 li
227.827 17.7543 li
236.05 19.9922 249.382 37.6655 249.265 38.0643 cv
.768627 .27451 .270588 rgb
f
249.471 36.7534 mo
249.469 36.808 li
249.453 37.2418 249.382 37.6655 249.265 38.0643 cv
234.496 35.1155 li
230.314 34.279 227.351 30.53 227.51 26.2636 cv
227.827 17.7543 li
228.073 17.7633 li
228.226 17.769 228.386 17.779 228.546 17.7887 cv
228.639 17.7922 228.733 17.7997 228.831 17.8072 cv
229.056 17.8263 229.292 17.8517 229.532 17.8799 cv
229.783 17.9081 230.034 17.9418 230.286 17.9803 cv
230.511 18.0138 230.738 18.0496 230.972 18.0904 cv
231.073 18.1099 li
240.3 19.8426 249.808 27.7087 249.471 36.7534 cv
.670588 .929412 .890196 rgb
f
243.067 37.2185 mo
242.301 29.1455 236.131 23.4948 227.348 22.8221 cv
227.408 22.0426 li
236.59 22.7458 243.042 28.6733 243.845 37.1444 cv
243.067 37.2185 li
cp
.768627 .27451 .270588 rgb
f
214.73 31.6603 mo
214.73 31.6592 214.73 31.6581 214.73 31.6571 cv
214.73 31.6584 214.73 31.659 214.73 31.6603 cv
214.729 31.6362 mo
214.729 31.6342 214.729 31.6321 214.729 31.6301 cv
214.729 31.632 214.729 31.6343 214.729 31.6362 cv
214.728 31.6098 mo
214.728 31.6082 214.728 31.607 214.728 31.6055 cv
214.728 31.6071 214.728 31.6081 214.728 31.6098 cv
214.727 31.5611 mo
214.727 31.5606 214.727 31.5602 214.727 31.5597 cv
214.727 31.5603 214.727 31.5604 214.727 31.5611 cv
214.727 31.5414 mo
214.727 31.5383 214.727 31.535 214.727 31.5319 cv
214.727 31.5348 214.727 31.5384 214.727 31.5414 cv
214.726 31.515 mo
214.726 31.5111 214.726 31.5073 214.726 31.5034 cv
214.726 31.5073 214.726 31.5111 214.726 31.515 cv
214.726 31.4874 mo
214.726 31.4836 214.726 31.4796 214.726 31.4757 cv
214.726 31.4796 214.726 31.4835 214.726 31.4874 cv
214.726 31.4477 mo
214.726 31.4436 214.726 31.439 214.725 31.4348 cv
214.726 31.4391 214.726 31.4435 214.726 31.4477 cv
214.725 31.4203 mo
214.725 31.4154 214.725 31.4112 214.725 31.4063 cv
214.725 31.4108 214.725 31.4157 214.725 31.4203 cv
214.725 31.392 mo
214.725 31.3872 214.725 31.3821 214.725 31.3772 cv
214.725 31.3821 214.725 31.3872 214.725 31.392 cv
214.725 31.3644 mo
214.725 31.3556 214.725 31.3467 214.725 31.338 cv
214.725 31.3468 214.725 31.3556 214.725 31.3644 cv
214.725 31.3276 mo
214.725 31.3217 214.725 31.3154 214.725 31.3095 cv
214.725 31.3153 214.725 31.3217 214.725 31.3276 cv
214.725 31.2973 mo
214.725 31.2919 214.725 31.2861 214.726 31.2806 cv
214.725 31.2862 214.725 31.2917 214.725 31.2973 cv
214.726 31.269 mo
214.726 31.262 214.726 31.2554 214.726 31.2485 cv
214.726 31.2553 214.726 31.2621 214.726 31.269 cv
214.726 31.2407 mo
214.726 31.2314 214.726 31.2221 214.726 31.2128 cv
214.726 31.222 214.726 31.2316 214.726 31.2407 cv
214.726 31.2038 mo
214.727 31.1973 214.727 31.1907 214.727 31.1842 cv
214.727 31.1907 214.727 31.1973 214.726 31.2038 cv
214.727 31.1737 mo
214.727 31.1675 214.727 31.1607 214.727 31.1545 cv
214.727 31.1611 214.727 31.1671 214.727 31.1737 cv
214.728 31.1445 mo
214.728 31.1365 214.728 31.1287 214.728 31.1207 cv
214.728 31.1285 214.728 31.1366 214.728 31.1445 cv
214.728 31.1161 mo
214.728 31.1068 214.729 31.0971 214.729 31.0877 cv
214.729 31.0972 214.728 31.1066 214.728 31.1161 cv
214.729 31.0788 mo
214.729 31.0721 214.73 31.0654 214.73 31.0587 cv
214.73 31.0653 214.729 31.0723 214.729 31.0788 cv
214.73 31.0486 mo
214.73 31.0419 214.731 31.0353 214.731 31.0286 cv
214.731 31.0355 214.73 31.0417 214.73 31.0486 cv
214.731 31.0197 mo
214.731 31.0101 214.732 31.0005 214.732 30.9909 cv
214.732 31.0005 214.731 31.0101 214.731 31.0197 cv
215.058 22.2354 mo
215.158 19.5649 217.351 17.4687 220 17.4662 cv
217.351 17.4689 215.158 19.5651 215.058 22.2354 cv
220.193 17.4697 mo
220.188 17.4696 220.184 17.4694 220.18 17.4692 cv
220.184 17.4694 220.188 17.4696 220.193 17.4697 cv
220.005 17.4662 mo
220.005 17.4662 li
220.005 17.4662 li
220.005 17.4662 li
.94902 .94902 .94902 rgb
f
217.326 37.9768 mo
215.772 36.3028 214.804 34.0864 214.73 31.6603 cv
214.73 31.659 214.73 31.6584 214.73 31.6571 cv
214.729 31.6502 214.729 31.6431 214.729 31.6362 cv
214.729 31.6343 214.729 31.632 214.729 31.6301 cv
214.729 31.6232 214.729 31.6167 214.728 31.6098 cv
214.728 31.6081 214.728 31.6071 214.728 31.6055 cv
214.728 31.5909 214.728 31.5757 214.727 31.5611 cv
214.727 31.5604 214.727 31.5603 214.727 31.5597 cv
214.727 31.5535 214.727 31.5475 214.727 31.5414 cv
214.727 31.5384 214.727 31.5348 214.727 31.5319 cv
214.727 31.5263 214.727 31.5206 214.726 31.515 cv
214.726 31.5111 214.726 31.5073 214.726 31.5034 cv
214.726 31.498 214.726 31.4928 214.726 31.4874 cv
214.726 31.4835 214.726 31.4796 214.726 31.4757 cv
214.726 31.4663 214.726 31.4572 214.726 31.4477 cv
214.726 31.4435 214.726 31.4391 214.725 31.4348 cv
214.725 31.43 214.725 31.4251 214.725 31.4203 cv
214.725 31.4157 214.725 31.4108 214.725 31.4063 cv
214.725 31.4017 214.725 31.3967 214.725 31.392 cv
214.725 31.3872 214.725 31.3821 214.725 31.3772 cv
214.725 31.3729 214.725 31.3687 214.725 31.3644 cv
214.725 31.3556 214.725 31.3468 214.725 31.338 cv
214.725 31.3344 214.725 31.3312 214.725 31.3276 cv
214.725 31.3217 214.725 31.3153 214.725 31.3095 cv
214.725 31.3054 214.725 31.3014 214.725 31.2973 cv
214.725 31.2917 214.725 31.2862 214.726 31.2806 cv
214.726 31.2768 214.726 31.2728 214.726 31.269 cv
214.726 31.2621 214.726 31.2553 214.726 31.2485 cv
214.726 31.2459 214.726 31.2433 214.726 31.2407 cv
214.726 31.2316 214.726 31.222 214.726 31.2128 cv
214.726 31.2097 214.726 31.2069 214.726 31.2038 cv
214.727 31.1973 214.727 31.1907 214.727 31.1842 cv
214.727 31.1806 214.727 31.1773 214.727 31.1737 cv
214.727 31.1671 214.727 31.1611 214.727 31.1545 cv
214.727 31.1512 214.727 31.1478 214.728 31.1445 cv
214.728 31.1366 214.728 31.1285 214.728 31.1207 cv
214.728 31.1191 214.728 31.1177 214.728 31.1161 cv
214.728 31.1066 214.729 31.0972 214.729 31.0877 cv
214.729 31.0846 214.729 31.0819 214.729 31.0788 cv
214.729 31.0723 214.73 31.0653 214.73 31.0587 cv
214.73 31.0553 214.73 31.052 214.73 31.0486 cv
214.73 31.0417 214.731 31.0355 214.731 31.0286 cv
214.731 31.0257 214.731 31.0225 214.731 31.0197 cv
214.731 31.0101 214.732 31.0005 214.732 30.9909 cv
214.732 30.9909 li
214.974 24.4913 li
215.154 24.5004 li
215.178 24.5017 215.203 24.5023 215.227 24.5023 cv
215.956 24.5023 216.56 23.9258 216.588 23.1883 cv
216.621 22.2936 li
216.689 20.4653 218.192 19.0302 220.006 19.0302 cv
220.049 19.0302 220.092 19.031 220.135 19.0326 cv
221.699 19.0909 li
221.083 35.6264 li
218.745 34.818 216.638 33.838 214.813 32.6465 cv
215.083 34.684 215.987 36.5322 217.326 37.9768 cv
.92549 .678431 .329412 rgb
f
239.779 41.6739 mo
224.105 41.0899 li
224.096 41.0895 224.086 41.0891 224.076 41.0887 cv
224.086 41.0891 224.096 41.0895 224.105 41.0899 cv
239.779 41.6739 li
.94902 .94902 .94902 rgb
f
224.064 41.0882 mo
224.058 41.088 224.052 41.0877 224.046 41.0875 cv
224.052 41.0877 224.058 41.088 224.064 41.0882 cv
224.032 41.0869 mo
224.027 41.0866 224.022 41.0864 224.016 41.0862 cv
224.022 41.0864 224.027 41.0866 224.032 41.0869 cv
224.002 41.0855 mo
223.997 41.0852 223.992 41.085 223.987 41.0848 cv
223.992 41.085 223.997 41.0852 224.002 41.0855 cv
223.971 41.084 mo
223.967 41.0837 223.962 41.0835 223.958 41.0833 cv
223.962 41.0835 223.967 41.0837 223.971 41.084 cv
223.942 41.0824 mo
223.937 41.0822 223.933 41.0819 223.928 41.0817 cv
223.933 41.0819 223.937 41.0822 223.942 41.0824 cv
223.912 41.0808 mo
223.907 41.0805 223.903 41.0803 223.899 41.0801 cv
223.903 41.0803 223.908 41.0805 223.912 41.0808 cv
223.882 41.079 mo
223.879 41.0789 223.876 41.0787 223.873 41.0785 cv
223.876 41.0787 223.879 41.0789 223.882 41.079 cv
223.797 41.0736 mo
223.797 41.0736 li
223.797 41.0736 li
223.773 41.0719 mo
223.771 41.0718 223.769 41.0716 223.767 41.0715 cv
223.769 41.0716 223.771 41.0718 223.773 41.0719 cv
223.744 41.0698 mo
223.743 41.0697 223.741 41.0696 223.739 41.0694 cv
223.741 41.0695 223.743 41.0697 223.744 41.0698 cv
223.716 41.0677 mo
223.714 41.0675 223.712 41.0674 223.71 41.0672 cv
223.712 41.0674 223.714 41.0675 223.716 41.0677 cv
223.687 41.0654 mo
223.685 41.0653 223.684 41.0652 223.682 41.065 cv
223.684 41.0652 223.685 41.0653 223.687 41.0654 cv
223.658 41.0631 mo
223.657 41.063 223.656 41.0629 223.655 41.0628 cv
223.656 41.0629 223.657 41.063 223.658 41.0631 cv
f
244.253 41.8369 mo
244.187 41.8369 244.121 41.8357 244.055 41.8332 cv
244.055 41.8332 li
240.833 41.7132 li
239.779 41.6739 li
224.105 41.0899 li
224.096 41.0895 224.086 41.0891 224.076 41.0887 cv
224.072 41.0886 224.068 41.0884 224.064 41.0882 cv
224.058 41.088 224.052 41.0877 224.046 41.0875 cv
224.041 41.0873 224.037 41.0871 224.032 41.0869 cv
224.027 41.0866 224.022 41.0864 224.016 41.0862 cv
224.012 41.0859 224.007 41.0857 224.002 41.0855 cv
223.997 41.0852 223.992 41.085 223.987 41.0848 cv
223.982 41.0845 223.977 41.0842 223.971 41.084 cv
223.967 41.0837 223.962 41.0835 223.958 41.0833 cv
223.952 41.083 223.947 41.0827 223.942 41.0824 cv
223.937 41.0822 223.933 41.0819 223.928 41.0817 cv
223.923 41.0814 223.917 41.0811 223.912 41.0808 cv
223.908 41.0805 223.903 41.0803 223.899 41.0801 cv
223.894 41.0797 223.888 41.0794 223.882 41.079 cv
223.879 41.0789 223.876 41.0787 223.873 41.0785 cv
223.847 41.0769 223.822 41.0753 223.797 41.0736 cv
223.797 41.0736 li
223.789 41.073 223.781 41.0725 223.773 41.0719 cv
223.771 41.0718 223.769 41.0716 223.767 41.0715 cv
223.76 41.071 223.752 41.0704 223.744 41.0698 cv
223.743 41.0697 223.741 41.0695 223.739 41.0694 cv
223.731 41.0689 223.724 41.0683 223.716 41.0677 cv
223.714 41.0675 223.712 41.0674 223.71 41.0672 cv
223.703 41.0667 223.695 41.066 223.687 41.0654 cv
223.685 41.0653 223.684 41.0652 223.682 41.065 cv
223.674 41.0644 223.666 41.0637 223.658 41.0631 cv
223.657 41.063 223.656 41.0629 223.655 41.0628 cv
221.149 40.8548 218.926 39.7044 217.326 37.9768 cv
218.31 39.0376 219.529 39.8806 220.904 40.4214 cv
221.083 35.6264 li
228.518 38.1976 238.28 39.0315 248.663 39.4008 cv
247.736 40.8701 246.1 41.837 244.253 41.8369 cv
.92549 .678431 .329412 rgb
f
220.904 40.4214 mo
219.529 39.8806 218.31 39.0376 217.326 37.9768 cv
215.987 36.5322 215.083 34.684 214.813 32.6465 cv
216.638 33.838 218.745 34.818 221.083 35.6264 cv
220.904 40.4214 li
.878431 .643137 .313725 rgb
f
215.032 22.9504 mo
215.032 22.9504 li
215.058 22.2354 li
215.032 22.9504 li
199.867 22.3854 mo
175.206 21.4665 li
175.206 21.4664 li
199.867 22.3854 li
230.972 18.0904 mo
230.738 18.0496 230.511 18.0138 230.286 17.9803 cv
230.034 17.9418 229.783 17.9081 229.532 17.8799 cv
229.309 17.8537 229.09 17.8299 228.879 17.8114 cv
229.521 17.8676 230.225 17.9596 230.972 18.0904 cv
228.861 17.8099 mo
228.861 17.8099 228.861 17.8099 228.861 17.8099 cv
228.861 17.8099 li
168.744 16.0315 mo
165.992 14.9181 163.135 14.4625 160.645 14.4625 cv
160.537 14.4625 160.43 14.4634 160.323 14.4651 cv
160.09 14.4688 159.864 14.5005 159.647 14.5569 cv
159.864 14.5002 160.09 14.4682 160.324 14.4641 cv
160.428 14.4625 160.535 14.4617 160.641 14.4617 cv
163.132 14.4617 165.99 14.9172 168.744 16.0315 cv
1 1 1 rgb
f
214.974 24.4913 mo
183.958 22.9235 li
175.065 22.3863 li
175.173 22.0886 175.218 21.777 175.206 21.4665 cv
199.867 22.3854 li
215.032 22.9505 li
215.032 22.9504 li
215.032 22.9504 li
214.974 24.4913 li
.980392 .772549 .478431 rgb
f
183.958 22.9235 mo
175.031 22.4723 li
175.043 22.4437 175.054 22.4151 175.065 22.3863 cv
183.958 22.9235 li
1 1 1 rgb
f
175.031 22.4723 mo
174.518 22.4463 li
170.221 15.8341 163.46 15.0004 160.222 15.0004 cv
159.47 15.0004 158.908 15.0453 158.611 15.0733 cv
158.915 14.8348 159.265 14.6572 159.647 14.5569 cv
159.864 14.5005 160.09 14.4688 160.323 14.4651 cv
160.43 14.4634 160.537 14.4625 160.645 14.4625 cv
163.135 14.4625 165.992 14.9181 168.744 16.0315 cv
170.675 16.8125 172.554 17.9169 174.22 19.4148 cv
174.811 19.9416 175.17 20.7022 175.2 21.4662 cv
175.206 21.4664 li
175.206 21.4665 li
175.218 21.777 175.173 22.0886 175.065 22.3863 cv
175.054 22.4151 175.043 22.4437 175.031 22.4723 cv
.870588 .678431 .411765 rgb
f
226.988 19.288 mo
221.699 19.0909 li
221.757 17.528 li
220.193 17.4697 li
228.073 17.7633 li
227.827 17.7543 li
227.827 17.7543 li
227.046 17.7251 li
226.988 19.288 li
220.18 17.4692 mo
220.121 17.4672 220.063 17.4662 220.005 17.4662 cv
220.063 17.4662 220.121 17.4672 220.18 17.4692 cv
220 17.4662 mo
220.001 17.4662 220.003 17.4662 220.005 17.4662 cv
220.005 17.4662 li
220.003 17.4662 220.001 17.4662 220 17.4662 cv
.980392 .772549 .478431 rgb
f
227.769 19.3171 mo
226.988 19.288 li
227.046 17.7251 li
227.827 17.7543 li
227.827 17.7543 li
227.769 19.3171 li
.815686 .419608 .415686 rgb
f
249.265 38.0643 mo
249.265 38.0643 249.302 22.2712 228.015 19.3263 cv
227.769 19.3171 li
227.827 17.7543 li
228.073 17.7633 li
228.226 17.769 228.386 17.779 228.546 17.7887 cv
228.639 17.7922 228.733 17.7997 228.831 17.8072 cv
228.841 17.8081 228.851 17.809 228.861 17.8099 cv
228.861 17.8099 228.861 17.8099 228.861 17.8099 cv
228.867 17.8104 228.873 17.8109 228.879 17.8114 cv
229.09 17.8299 229.309 17.8537 229.532 17.8799 cv
229.783 17.9081 230.034 17.9418 230.286 17.9803 cv
230.511 18.0138 230.738 18.0496 230.972 18.0904 cv
230.972 18.0904 li
231.073 18.1099 li
240.138 19.8121 249.474 27.4341 249.479 36.2775 cv
249.48 36.4357 249.477 36.5944 249.471 36.7534 cv
249.469 36.808 li
249.453 37.2418 249.382 37.6655 249.265 38.0643 cv
.737255 .945098 .913725 rgb
f
215.227 24.5023 mo
215.203 24.5023 215.178 24.5017 215.154 24.5004 cv
214.974 24.4913 li
215.058 22.2354 li
215.158 19.5651 217.351 17.4689 220 17.4662 cv
220.001 17.4662 220.003 17.4662 220.005 17.4662 cv
220.005 17.4662 li
220.063 17.4662 220.121 17.4672 220.18 17.4692 cv
220.184 17.4694 220.188 17.4696 220.193 17.4697 cv
220.193 17.4697 li
221.757 17.528 li
221.699 19.0909 li
220.135 19.0326 li
220.092 19.031 220.049 19.0302 220.006 19.0302 cv
218.192 19.0302 216.689 20.4653 216.621 22.2936 cv
216.588 23.1883 li
216.56 23.9258 215.956 24.5023 215.227 24.5023 cv
.941176 .741176 .462745 rgb
f
204.041 247.35 mo
205.038 247.425 li
204.73 247.402 li
205.037 247.432 li
205.038 247.425 li
204.73 247.402 li
205.037 247.432 li
205.042 247.388 205.174 246.137 206.26 244.523 cv
207.349 242.909 209.388 240.901 213.348 239.339 cv
212.982 238.409 li
212.274 237.701 li
203.334 246.643 li
204.041 247.35 li
205.038 247.425 li
204.041 247.35 li
204.748 248.057 li
217.086 235.719 li
212.615 237.478 li
208.185 239.217 205.756 241.602 204.476 243.594 cv
203.193 245.587 203.052 247.154 203.043 247.274 cv
202.839 249.965 li
204.748 248.057 li
204.041 247.35 li
0 0 0 rgb
f
239.809 247.35 mo
240.806 247.274 li
240.797 247.154 240.656 245.587 239.373 243.594 cv
238.093 241.602 235.664 239.217 231.234 237.478 cv
226.763 235.719 li
241.01 249.965 li
240.806 247.274 li
239.809 247.35 li
240.516 246.643 li
231.575 237.701 li
230.868 238.409 li
230.501 239.339 li
234.589 240.952 236.631 243.039 237.692 244.678 cv
238.221 245.499 238.502 246.214 238.651 246.711 cv
238.726 246.96 238.767 247.153 238.789 247.277 cv
238.809 247.409 li
238.812 247.432 li
239.119 247.402 li
238.811 247.425 li
238.812 247.432 li
239.119 247.402 li
238.811 247.425 li
239.809 247.35 li
240.516 246.643 li
239.809 247.35 li
f
151.141 235.565 mo
149.307 235.565 li
148.241 225.099 li
152.924 225.099 li
151.141 235.565 li
.768627 .27451 .270588 rgb
f
212.831 229.31 mo
149.559 226.566 li
148.603 226.525 147.849 225.738 147.849 224.781 cv
147.849 224.745 li
147.849 223.759 148.649 222.958 149.636 222.958 cv
212.831 222.958 li
212.831 229.31 li
.905882 .360784 .356863 rgb
f
196.998 228.624 mo
152.651 226.7 li
149.559 226.566 li
149.074 226.545 148.642 226.333 148.333 226.004 cv
148.032 225.684 147.849 225.253 147.849 224.781 cv
147.849 224.745 li
147.849 224.642 147.862 224.542 147.879 224.444 cv
203.243 225.597 li
196.998 228.624 li
.811765 .32549 .321569 rgb
f
146.237 209.67 mo
144.402 209.67 li
147.849 223.987 li
152.531 223.987 li
146.237 209.67 li
cp
.905882 .360784 .356863 rgb
f
217.692 207.97 mo
158.082 207.758 li
158.082 207.382 li
217.692 207.195 li
217.692 207.97 li
cp
.243137 .192157 .172549 rgb
f
222.035 207.97 mo
281.645 207.758 li
281.645 207.382 li
222.035 207.195 li
222.035 207.97 li
cp
f
220.297 210.348 mo
219.422 210.348 li
219.422 207.214 li
220.297 207.214 li
220.297 210.348 li
f
218.237 210.367 mo
217.838 206.83 li
218.4 206.792 li
218.798 210.329 li
218.237 210.367 li
.380392 .309804 .286275 rgb
f
221.483 210.367 mo
220.921 210.329 li
221.319 206.792 li
221.881 206.83 li
221.483 210.367 li
f
218.237 210.367 mo
217.838 206.83 li
218.4 206.792 li
218.798 210.329 li
218.237 210.367 li
.243137 .192157 .172549 rgb
f
221.483 210.367 mo
220.921 210.329 li
221.319 206.792 li
221.881 206.83 li
221.483 210.367 li
f
221.734 208.087 mo
217.985 208.087 li
217.63 207.369 li
217.496 207.098 217.631 206.773 217.914 206.671 cv
219.211 206.205 220.518 206.158 221.82 206.658 cv
222.097 206.765 222.229 207.086 222.097 207.354 cv
221.734 208.087 li
cp
.380392 .309804 .286275 rgb
f
226.122 221.501 mo
217.217 221.501 li
217.217 210.801 li
217.217 210.208 217.697 209.727 218.29 209.727 cv
221.254 209.727 li
221.879 209.727 222.433 210.13 222.626 210.725 cv
226.122 221.501 li
.905882 .360784 .356863 rgb
f
217.217 219.78 mo
217.217 210.801 li
217.217 210.208 217.697 209.727 218.29 209.727 cv
221.254 209.727 li
221.879 209.727 222.433 210.13 222.626 210.725 cv
224.927 217.818 li
224.867 217.834 224.806 217.849 224.746 217.864 cv
222.32 211.659 li
222.154 211.065 221.68 210.662 221.144 210.662 cv
218.606 210.662 li
218.098 210.662 217.687 211.143 217.687 211.735 cv
217.488 216.256 li
217.397 216.18 217.307 216.101 217.217 216.019 cv
217.217 219.78 li
217.217 219.78 li
.92549 .490196 .486274 rgb
f
217.334 219.767 mo
217.488 216.256 li
219.057 217.576 220.737 218.15 222.502 218.15 cv
223.236 218.15 223.985 218.05 224.746 217.864 cv
225.447 219.655 li
218.978 219.676 li
218.427 219.677 217.878 219.707 217.334 219.767 cv
225.523 219.655 mo
224.927 217.818 li
224.927 217.818 224.927 217.818 224.927 217.818 cv
225.523 219.655 li
225.523 219.655 li
.811765 .32549 .321569 rgb
f
217.217 219.78 mo
217.217 216.019 li
217.307 216.101 217.397 216.18 217.488 216.256 cv
217.334 219.767 li
217.295 219.771 217.256 219.775 217.217 219.78 cv
225.447 219.655 mo
224.746 217.864 li
224.806 217.849 224.867 217.834 224.927 217.818 cv
225.523 219.655 li
225.447 219.655 li
.831372 .439216 .435294 rgb
f
247.675 251.398 mo
245.239 252.072 li
242.85 252.733 240.384 253.067 237.905 253.067 cv
210.423 253.067 li
208.317 253.067 206.215 252.873 204.145 252.487 cv
195.878 250.944 li
194.483 250.683 193.472 249.466 193.472 248.047 cv
193.472 247.993 li
193.472 246.365 194.792 245.046 196.419 245.046 cv
246.889 245.046 li
248.516 245.046 249.836 246.365 249.836 247.993 cv
249.836 248.558 li
249.836 249.883 248.951 251.045 247.675 251.398 cv
.854902 .819608 .819608 rgb
f
193.615 248.926 mo
193.934 249.943 194.784 250.739 195.878 250.944 cv
204.145 252.487 li
206.215 252.873 208.317 253.067 210.423 253.067 cv
237.905 253.067 li
240.384 253.067 242.85 252.733 245.239 252.072 cv
247.675 251.398 li
248.831 251.078 249.658 250.093 249.805 248.926 cv
193.615 248.926 li
.768627 .27451 .270588 rgb
f
193.472 247.98 mo
193.472 247.979 193.472 247.978 193.472 247.977 cv
193.472 247.978 193.472 247.979 193.472 247.98 cv
193.473 247.95 mo
193.473 247.95 193.473 247.949 193.473 247.949 cv
193.473 247.949 193.473 247.95 193.473 247.95 cv
.898039 .898039 .898039 rgb
f
195.864 250.941 mo
195.863 250.941 195.863 250.941 195.863 250.941 cv
195.863 250.941 195.863 250.941 195.864 250.941 cv
208.059 248.926 mo
193.615 248.926 li
193.615 248.926 li
193.528 248.646 193.472 248.353 193.472 248.047 cv
193.472 248.047 li
193.472 247.993 li
193.472 247.988 193.472 247.984 193.472 247.98 cv
193.472 247.979 193.472 247.978 193.472 247.977 cv
193.472 247.968 193.472 247.959 193.473 247.95 cv
193.473 247.95 193.473 247.949 193.473 247.949 cv
193.481 247.351 193.669 246.796 193.983 246.335 cv
196.682 247.453 201.761 248.288 208.059 248.926 cv
.768627 .737255 .737255 rgb
f
237.905 253.067 mo
210.423 253.067 li
208.317 253.067 206.215 252.873 204.145 252.487 cv
195.878 250.944 li
195.878 250.944 li
195.873 250.943 195.868 250.942 195.864 250.941 cv
195.863 250.941 195.863 250.941 195.863 250.941 cv
195.711 250.911 195.565 250.867 195.422 250.816 cv
195.275 250.755 li
195.183 250.715 195.092 250.673 195.005 250.625 cv
194.838 250.526 li
194.636 250.382 li
194.462 250.244 li
194.381 250.162 li
194.232 250.018 194.099 249.859 193.982 249.686 cv
193.942 249.629 li
193.881 249.532 193.827 249.431 193.776 249.327 cv
193.747 249.264 li
193.697 249.154 193.652 249.043 193.615 248.926 cv
193.615 248.926 li
193.615 248.926 li
208.059 248.926 li
219.828 250.118 235.852 250.621 248.542 250.99 cv
248.507 251.017 li
248.266 251.154 li
248.113 251.237 li
247.972 251.301 247.827 251.356 247.675 251.398 cv
247.675 251.398 li
245.239 252.072 li
242.85 252.733 240.384 253.067 237.905 253.067 cv
.690196 .247059 .243137 rgb
f
246.971 245.047 mo
246.971 245.047 246.97 245.047 246.97 245.047 cv
246.97 245.047 246.971 245.047 246.971 245.047 cv
246.96 245.047 mo
246.959 245.047 246.959 245.047 246.959 245.047 cv
246.959 245.047 246.959 245.047 246.96 245.047 cv
246.948 245.047 mo
246.948 245.047 246.947 245.047 246.947 245.047 cv
246.947 245.047 246.948 245.047 246.948 245.047 cv
246.925 245.046 mo
246.924 245.046 246.923 245.046 246.922 245.046 cv
246.923 245.046 246.924 245.046 246.925 245.046 cv
246.914 245.046 mo
246.913 245.046 246.912 245.046 246.911 245.046 cv
246.912 245.046 246.913 245.046 246.914 245.046 cv
246.903 245.046 mo
246.902 245.046 246.901 245.046 246.9 245.046 cv
246.901 245.046 246.902 245.046 246.903 245.046 cv
196.409 245.046 mo
196.413 245.046 196.416 245.046 196.419 245.046 cv
196.416 245.046 196.413 245.046 196.409 245.046 cv
1 1 1 rgb
f
249.301 246.304 mo
194.383 245.874 li
194.91 245.366 195.62 245.049 196.409 245.046 cv
196.413 245.046 196.416 245.046 196.419 245.046 cv
196.419 245.046 li
246.889 245.046 li
246.893 245.046 246.896 245.046 246.9 245.046 cv
246.901 245.046 246.902 245.046 246.903 245.046 cv
246.906 245.046 246.908 245.046 246.911 245.046 cv
246.912 245.046 246.913 245.046 246.914 245.046 cv
246.917 245.046 246.919 245.046 246.922 245.046 cv
246.923 245.046 246.924 245.046 246.925 245.046 cv
246.932 245.046 246.94 245.047 246.947 245.047 cv
246.947 245.047 246.948 245.047 246.948 245.047 cv
246.951 245.047 246.955 245.047 246.959 245.047 cv
246.959 245.047 246.959 245.047 246.96 245.047 cv
246.963 245.047 246.967 245.047 246.97 245.047 cv
246.97 245.047 246.971 245.047 246.971 245.047 cv
247.936 245.074 248.783 245.565 249.301 246.304 cv
.913725 .890196 .890196 rgb
f
245.448 236.834 mo
240.034 239.377 li
239.118 239.806 238.124 240.031 237.115 240.031 cv
234.75 240.036 li
212.569 240.104 li
211.35 240.109 210.131 239.989 208.939 239.754 cv
195.667 237.096 li
193.851 236.73 192.544 235.145 192.538 233.293 cv
192.538 233.235 li
192.549 232.963 li
192.638 231.572 193.47 230.332 194.736 229.72 cv
212.266 221.224 li
214.358 220.209 216.65 219.681 218.978 219.676 cv
227.295 219.65 li
227.724 219.65 228.148 219.66 228.567 219.686 cv
228.745 219.691 228.922 219.702 229.1 219.718 cv
232.6 219.984 245.992 229.37 245.992 229.37 cv
246.453 229.934 li
246.887 230.458 li
247.065 230.672 247.227 230.902 247.347 231.143 cv
248.441 233.183 247.64 235.809 245.448 236.834 cv
.905882 .360784 .356863 rgb
f
246.453 229.934 mo
246.092 232.137 244.187 233.79 241.901 233.79 cv
235.2 233.79 li
232.621 233.79 230.392 231.87 230.011 229.322 cv
228.567 219.686 li
228.745 219.691 228.922 219.702 229.1 219.718 cv
232.6 219.984 245.992 229.37 245.992 229.37 cv
246.453 229.934 li
.768627 .27451 .270588 rgb
f
245.992 229.37 mo
245.888 231.54 244.099 233.267 241.901 233.267 cv
235.2 233.267 li
232.862 233.267 230.874 231.556 230.528 229.244 cv
229.1 219.718 li
232.6 219.984 235.953 221.062 238.914 222.835 cv
241.117 224.149 243.099 225.838 244.763 227.868 cv
245.992 229.37 li
.670588 .929412 .890196 rgb
f
220.944 231.394 mo
220.096 231.394 219.365 230.761 219.243 229.921 cv
218.416 224.202 li
218.352 223.758 218.483 223.309 218.777 222.969 cv
219.071 222.63 219.496 222.435 219.945 222.435 cv
226.1 222.435 li
226.949 222.435 227.68 223.068 227.801 223.908 cv
228.628 229.628 li
228.692 230.071 228.561 230.521 228.267 230.86 cv
227.973 231.199 227.548 231.394 227.099 231.394 cv
220.944 231.394 li
cp
.768627 .27451 .270588 rgb
f
227.099 230.871 mo
220.944 230.871 li
220.35 230.871 219.846 230.434 219.761 229.846 cv
218.934 224.127 li
218.845 223.511 219.323 222.958 219.945 222.958 cv
226.1 222.958 li
226.694 222.958 227.198 223.395 227.283 223.983 cv
228.11 229.702 li
228.199 230.319 227.721 230.871 227.099 230.871 cv
cp
.670588 .929412 .890196 rgb
f
209.787 231.394 mo
209.074 231.394 208.46 230.862 208.358 230.157 cv
207.938 227.254 li
207.846 226.62 208.19 225.993 208.775 225.73 cv
214.886 222.982 li
215.075 222.898 215.274 222.855 215.478 222.855 cv
216.191 222.855 216.806 223.387 216.908 224.093 cv
217.725 229.743 li
217.785 230.158 217.662 230.578 217.388 230.895 cv
217.113 231.212 216.715 231.394 216.296 231.394 cv
209.787 231.394 li
.768627 .27451 .270588 rgb
f
216.296 230.871 mo
209.786 230.871 li
209.329 230.871 208.941 230.535 208.875 230.082 cv
208.455 227.179 li
208.397 226.773 208.614 226.376 208.989 226.208 cv
215.101 223.459 li
215.659 223.208 216.302 223.562 216.39 224.167 cv
217.207 229.818 li
217.288 230.373 216.857 230.871 216.296 230.871 cv
cp
.670588 .929412 .890196 rgb
f
234.75 240.036 mo
212.569 240.104 li
211.35 240.109 210.131 239.989 208.939 239.754 cv
195.667 237.096 li
193.851 236.73 192.544 235.145 192.538 233.293 cv
192.538 233.235 li
192.549 232.963 li
225.648 232.963 li
230.032 232.963 233.72 235.971 234.75 240.036 cv
.768627 .27451 .270588 rgb
f
203.713 228.669 mo
203.713 228.826 203.586 228.953 203.429 228.953 cv
199.898 228.953 li
199.741 228.953 199.615 228.826 199.615 228.669 cv
199.615 228.513 199.741 228.386 199.898 228.386 cv
203.429 228.386 li
203.586 228.386 203.713 228.513 203.713 228.669 cv
.243137 .192157 .172549 rgb
f
203.713 229.594 mo
203.713 229.75 203.586 229.877 203.429 229.877 cv
199.898 229.877 li
199.742 229.877 199.615 229.75 199.615 229.594 cv
199.615 229.437 199.742 229.31 199.898 229.31 cv
203.429 229.31 li
203.586 229.31 203.713 229.437 203.713 229.594 cv
cp
f
203.713 230.518 mo
203.713 230.674 203.586 230.801 203.429 230.801 cv
199.898 230.801 li
199.742 230.801 199.615 230.674 199.615 230.518 cv
199.615 230.361 199.742 230.234 199.898 230.234 cv
203.429 230.234 li
203.586 230.234 203.713 230.361 203.713 230.518 cv
cp
f
203.713 231.442 mo
203.713 231.599 203.586 231.725 203.429 231.725 cv
199.898 231.725 li
199.742 231.725 199.615 231.599 199.615 231.442 cv
199.615 231.286 199.742 231.159 199.898 231.159 cv
203.429 231.159 li
203.586 231.159 203.713 231.286 203.713 231.442 cv
cp
f
212.493 240.104 mo
212.518 240.104 212.544 240.104 212.569 240.104 cv
212.701 240.104 li
212.569 240.104 li
212.544 240.104 212.519 240.104 212.493 240.104 cv
0 0 0 rgb
f
245.465 236.826 mo
245.467 236.826 245.469 236.825 245.471 236.824 cv
245.469 236.825 245.467 236.826 245.465 236.826 cv
245.487 236.816 mo
245.488 236.816 245.489 236.815 245.49 236.815 cv
245.489 236.815 245.488 236.816 245.487 236.816 cv
245.506 236.807 mo
245.507 236.807 245.508 236.806 245.508 236.806 cv
245.508 236.806 245.507 236.807 245.506 236.807 cv
.898039 .898039 .898039 rgb
f
234.75 240.036 mo
234.428 238.765 233.846 237.597 233.064 236.593 cv
237.56 236.573 242.06 236.401 246.559 236.074 cv
246.258 236.362 245.907 236.611 245.508 236.806 cv
245.508 236.806 245.507 236.807 245.506 236.807 cv
245.501 236.81 245.495 236.812 245.49 236.815 cv
245.489 236.815 245.488 236.816 245.487 236.816 cv
245.482 236.819 245.476 236.821 245.471 236.824 cv
245.469 236.825 245.467 236.826 245.465 236.826 cv
245.46 236.829 245.454 236.832 245.448 236.834 cv
245.448 236.834 li
240.034 239.377 li
239.118 239.806 238.124 240.031 237.115 240.031 cv
235.956 240.033 li
234.75 240.036 li
193.484 232.963 mo
192.549 232.963 li
192.571 232.792 li
192.875 232.85 193.181 232.907 193.484 232.963 cv
.811765 .32549 .321569 rgb
f
212.493 240.104 mo
212.49 240.104 212.487 240.104 212.484 240.104 cv
211.382 240.104 210.28 240.001 209.198 239.803 cv
209.188 239.801 209.178 239.799 209.168 239.797 cv
209.164 239.797 209.16 239.796 209.155 239.795 cv
209.122 239.789 209.089 239.783 209.055 239.776 cv
209.037 239.773 209.019 239.769 209.001 239.766 cv
208.993 239.764 208.985 239.763 208.976 239.761 cv
208.964 239.759 208.951 239.756 208.939 239.754 cv
208.939 239.754 li
195.667 237.096 li
193.851 236.73 192.544 235.145 192.538 233.293 cv
192.538 233.235 li
192.549 232.963 li
193.484 232.963 li
206.367 235.351 219.259 236.595 232.165 236.595 cv
232.465 236.595 232.764 236.594 233.064 236.593 cv
233.846 237.597 234.428 238.765 234.75 240.036 cv
234.75 240.036 li
231.092 240.047 li
212.701 240.104 li
212.569 240.104 li
212.544 240.104 212.518 240.104 212.493 240.104 cv
212.493 240.104 li
.690196 .247059 .243137 rgb
f
194.696 229.74 mo
194.697 229.739 194.697 229.739 194.698 229.738 cv
194.697 229.739 194.697 229.739 194.696 229.74 cv
194.713 229.731 mo
194.715 229.73 194.716 229.729 194.718 229.729 cv
194.716 229.729 194.715 229.73 194.713 229.731 cv
1 1 1 rgb
f
247.817 232.882 mo
247.7 232.681 247.561 232.487 247.404 232.306 cv
246.951 231.783 li
246.471 231.218 li
246.189 230.888 li
246.309 230.585 246.398 230.266 246.453 229.934 cv
246.453 229.934 li
246.887 230.458 li
247.065 230.672 247.227 230.902 247.347 231.143 cv
247.643 231.694 247.788 232.288 247.817 232.882 cv
192.896 231.624 mo
193.256 230.821 193.878 230.146 194.696 229.74 cv
194.697 229.739 194.697 229.739 194.698 229.738 cv
194.703 229.736 194.708 229.733 194.713 229.731 cv
194.715 229.73 194.716 229.729 194.718 229.729 cv
194.724 229.726 194.73 229.723 194.736 229.72 cv
212.266 221.224 li
214.358 220.209 216.65 219.681 218.978 219.676 cv
227.295 219.65 li
227.724 219.65 228.148 219.66 228.567 219.686 cv
228.567 219.686 li
228.848 221.566 li
228.663 221.55 228.477 221.54 228.292 221.535 cv
227.855 221.509 227.413 221.498 226.966 221.498 cv
218.288 221.524 li
215.86 221.53 213.469 222.058 211.286 223.073 cv
199.833 228.393 li
199.795 228.402 199.76 228.419 199.729 228.442 cv
192.999 231.568 li
192.896 231.624 li
.92549 .490196 .486274 rgb
f
246.189 230.888 mo
245.799 230.432 li
245.908 230.095 245.975 229.739 245.992 229.37 cv
245.992 229.37 li
246.453 229.934 li
246.398 230.266 246.309 230.585 246.189 230.888 cv
229.384 221.611 mo
229.206 221.594 229.028 221.579 228.849 221.566 cv
228.849 221.566 228.848 221.566 228.848 221.566 cv
228.567 219.686 li
228.745 219.691 228.922 219.702 229.1 219.718 cv
229.1 219.718 li
229.384 221.611 li
.815686 .419608 .415686 rgb
f
245.799 230.432 mo
245.188 229.716 li
243.453 227.687 241.384 225.997 239.087 224.684 cv
236.149 222.998 232.841 221.94 229.384 221.611 cv
229.1 219.718 li
232.6 219.984 235.953 221.062 238.914 222.835 cv
241.117 224.149 243.099 225.838 244.763 227.868 cv
245.992 229.37 li
245.975 229.739 245.908 230.095 245.799 230.432 cv
.737255 .945098 .913725 rgb
f
199.729 228.442 mo
199.76 228.419 199.795 228.402 199.833 228.393 cv
199.729 228.442 li
.396078 .352941 .337255 rgb
f
151.471 225.191 mo
149.588 224.702 li
150.771 223.158 li
162.401 219.783 li
162.716 220.698 li
151.471 225.191 li
cp
.854902 .819608 .819608 rgb
f
148.222 226.088 mo
149.588 224.702 li
150.333 226.499 li
147.441 238.258 li
146.491 238.073 li
148.222 226.088 li
cp
f
149.07 222.826 mo
149.588 224.702 li
147.658 224.449 li
138.921 216.065 li
139.556 215.334 li
149.07 222.826 li
cp
f
150.745 223.6 mo
151.408 224.177 151.478 225.181 150.901 225.844 cv
150.324 226.507 149.32 226.577 148.657 226.001 cv
147.994 225.424 147.924 224.419 148.5 223.756 cv
149.077 223.093 150.082 223.023 150.745 223.6 cv
cp
.243137 .192157 .172549 rgb
f
150.214 224.21 mo
150.54 224.494 150.574 224.988 150.291 225.314 cv
150.007 225.64 149.513 225.674 149.187 225.391 cv
148.861 225.107 148.827 224.613 149.11 224.287 cv
149.394 223.961 149.888 223.927 150.214 224.21 cv
cp
.854902 .819608 .819608 rgb
f
386.005 140.995 mo
385.325 140.995 li
385.325 136.649 li
386.684 136.649 li
386.005 140.995 li
.243137 .192157 .172549 rgb
f
386.83 141.17 mo
386.83 142.555 385.706 143.679 384.321 143.679 cv
382.935 143.679 381.812 142.555 381.812 141.17 cv
381.812 139.784 382.935 138.661 384.321 138.661 cv
385.706 138.661 386.83 139.784 386.83 141.17 cv
cp
0 0 0 rgb
f
385.81 141.17 mo
385.81 141.992 385.143 142.659 384.321 142.659 cv
383.499 142.659 382.832 141.992 382.832 141.17 cv
382.832 140.347 383.499 139.681 384.321 139.681 cv
385.143 139.681 385.81 140.347 385.81 141.17 cv
cp
.243137 .192157 .172549 rgb
f
385.146 141.17 mo
385.146 141.625 384.777 141.995 384.321 141.995 cv
383.865 141.995 383.496 141.625 383.496 141.17 cv
383.496 140.714 383.865 140.345 384.321 140.345 cv
384.777 140.345 385.146 140.714 385.146 141.17 cv
cp
0 0 0 rgb
f
387.043 137.475 mo
384.966 137.475 li
384.966 135.042 li
387.043 135.042 li
387.043 137.475 li
f
330.442 140.39 mo
331.06 140.653 li
332.74 136.704 li
331.506 136.179 li
330.442 140.39 li
cp
.243137 .192157 .172549 rgb
f
329.625 140.23 mo
329.089 141.489 329.675 142.944 330.934 143.48 cv
332.194 144.016 333.649 143.43 334.185 142.171 cv
334.721 140.911 334.134 139.456 332.875 138.92 cv
331.616 138.384 330.161 138.97 329.625 140.23 cv
cp
0 0 0 rgb
f
330.552 140.624 mo
330.234 141.372 330.582 142.235 331.329 142.553 cv
332.076 142.871 332.94 142.523 333.258 141.776 cv
333.576 141.029 333.228 140.165 332.481 139.847 cv
331.733 139.529 330.87 139.877 330.552 140.624 cv
cp
.243137 .192157 .172549 rgb
f
331.155 140.881 mo
330.979 141.295 331.172 141.774 331.586 141.95 cv
332 142.126 332.478 141.933 332.655 141.519 cv
332.831 141.105 332.638 140.626 332.224 140.45 cv
331.81 140.274 331.331 140.467 331.155 140.881 cv
cp
0 0 0 rgb
f
330.559 137.841 mo
332.609 137.841 li
335.603 130.256 li
333.164 129.037 li
330.559 137.841 li
f
317.643 123.803 mo
306.206 121.601 li
306.26 120.142 li
319.99 119.796 li
317.643 123.803 li
.243137 .192157 .172549 rgb
f
308.217 119.869 mo
308.76 121.145 308.167 122.619 306.892 123.162 cv
305.617 123.706 304.143 123.113 303.599 121.838 cv
303.056 120.563 303.649 119.088 304.924 118.545 cv
306.199 118.001 307.673 118.594 308.217 119.869 cv
cp
.976471 .713726 .34902 rgb
f
311.566 116.021 mo
306.529 119.012 li
305.788 120.76 li
307.688 120.762 li
312.419 117.287 li
312.137 116.863 311.857 116.438 311.566 116.021 cv
.243137 .192157 .172549 rgb
f
307.005 128.145 mo
306.933 122.276 li
305.789 120.76 li
304.838 122.404 li
305.445 127.905 li
305.968 127.964 306.488 128.04 307.005 128.145 cv
cp
f
304.84 119.115 mo
299.986 116.984 li
299.825 117.291 299.664 117.599 299.511 117.91 cv
299.432 118.072 299.352 118.233 299.274 118.395 cv
303.904 120.993 li
305.789 120.76 li
304.84 119.115 li
cp
f
306.613 119.436 mo
307.38 119.819 307.692 120.751 307.309 121.519 cv
306.927 122.286 305.994 122.598 305.227 122.216 cv
304.459 121.833 304.147 120.9 304.53 120.133 cv
304.913 119.365 305.845 119.053 306.613 119.436 cv
cp
f
306.26 120.142 mo
306.638 120.331 306.791 120.789 306.603 121.166 cv
306.415 121.544 305.956 121.697 305.579 121.509 cv
305.202 121.321 305.048 120.863 305.236 120.485 cv
305.425 120.108 305.883 119.954 306.26 120.142 cv
cp
.854902 .819608 .819608 rgb
f
401.884 129.921 mo
401.884 129.966 li
401.884 131.302 401.08 132.508 399.851 133.022 cv
392.761 135.541 li
391.376 136.117 389.898 136.417 388.397 136.417 cv
357.209 136.417 li
356.034 136.417 354.86 136.234 353.738 135.872 cv
331.249 129.063 li
320.764 125.681 li
317.994 124.788 li
313.536 123.349 li
313.536 119.887 li
313.536 119.887 313.848 119.874 314.411 119.856 cv
319.92 119.646 349.583 118.525 349.11 118.324 cv
348.592 118.1 349.99 114.303 349.99 114.303 cv
359.318 112.963 li
365.559 112.069 li
365.823 110.059 li
374.248 110.059 li
374.838 112.293 li
376.321 112.708 li
376.817 112.846 li
376.978 112.891 li
377.474 113.03 li
381.624 114.191 li
382.518 114.441 li
383.223 114.638 383.893 114.924 384.514 115.295 cv
384.742 115.433 384.966 115.581 385.184 115.741 cv
385.301 115.826 385.417 115.92 385.533 116.014 cv
385.707 116.157 385.872 116.304 386.033 116.461 cv
386.109 116.537 li
386.257 116.68 386.395 116.827 386.529 116.983 cv
386.663 117.135 386.788 117.287 386.909 117.448 cv
391.323 123.349 li
392.131 123.685 li
399.833 126.861 li
400.642 127.191 401.267 127.821 401.602 128.59 cv
401.785 129.001 401.884 129.452 401.884 129.921 cv
f
305.928 126.508 mo
302.854 126.508 300.361 124.015 300.361 120.937 cv
300.361 117.863 302.854 115.371 305.928 115.371 cv
309.005 115.371 311.498 117.863 311.498 120.937 cv
311.498 124.015 309.005 126.508 305.928 126.508 cv
307.201 102.388 mo
301.594 102.388 li
301.594 114.075 li
299.32 115.513 297.806 118.047 297.806 120.937 cv
297.806 125.427 301.442 129.063 305.928 129.063 cv
309.618 129.063 312.727 126.606 313.719 123.238 cv
316.015 123.238 li
307.201 102.388 li
f
307.576 107.713 mo
307.576 107.838 li
307.576 111.113 304.913 113.776 301.639 113.776 cv
301.594 113.776 li
301.594 102.388 li
306.83 102.388 li
307.576 107.713 li
.976471 .713726 .34902 rgb
f
305.789 107.838 mo
305.789 110.13 303.931 111.989 301.639 111.989 cv
301.594 111.989 li
301.594 102.388 li
305.025 102.388 li
305.789 107.838 li
.905882 .360784 .356863 rgb
f
401.602 128.59 mo
372.394 125.655 li
369.459 125.36 367.252 123.242 367.252 120.727 cv
367.252 119.154 li
367.252 116.416 369.861 114.191 373.078 114.191 cv
374.79 114.191 li
374.606 114.37 li
374.373 114.598 374.302 114.942 374.422 115.246 cv
374.548 115.545 374.838 115.741 375.164 115.741 cv
382.19 115.741 li
382.771 115.906 383.321 116.143 383.827 116.445 cv
383.877 116.475 383.926 116.506 383.974 116.537 cv
382.008 116.537 li
381.709 116.537 381.441 116.688 381.289 116.948 cv
381.141 117.207 381.137 117.515 381.284 117.774 cv
384.05 122.702 li
384.429 123.376 385.144 123.796 385.917 123.796 cv
389.983 123.796 li
390.47 124.447 li
390.47 124.447 399.512 126.889 399.87 126.89 cv
399.892 126.89 399.881 126.88 399.833 126.861 cv
392.131 123.685 li
391.323 123.349 li
386.909 117.448 li
386.788 117.287 386.663 117.135 386.529 116.983 cv
386.395 116.827 386.257 116.68 386.109 116.537 cv
386.109 116.537 li
386.033 116.461 li
385.872 116.304 385.707 116.157 385.533 116.014 cv
385.417 115.92 385.301 115.826 385.184 115.741 cv
385.184 115.741 li
385.184 115.741 li
384.966 115.581 384.742 115.433 384.514 115.295 cv
383.893 114.924 383.223 114.638 382.518 114.441 cv
381.624 114.191 li
381.624 114.191 li
382.518 114.441 li
383.223 114.638 383.893 114.924 384.514 115.295 cv
384.742 115.433 384.966 115.581 385.184 115.741 cv
385.301 115.826 385.417 115.92 385.533 116.014 cv
385.707 116.157 385.872 116.304 386.033 116.461 cv
386.109 116.537 li
386.257 116.68 386.395 116.827 386.529 116.983 cv
386.663 117.135 386.788 117.287 386.909 117.448 cv
391.323 123.349 li
392.131 123.685 li
399.833 126.861 li
400.642 127.191 401.267 127.821 401.602 128.59 cv
.898039 .87451 .87451 rgb
f
392.216 123.796 mo
385.917 123.796 li
385.144 123.796 384.429 123.376 384.05 122.702 cv
381.284 117.774 li
381.137 117.515 381.141 117.207 381.289 116.948 cv
381.441 116.688 381.709 116.537 382.008 116.537 cv
386.109 116.537 li
386.257 116.68 386.395 116.827 386.529 116.983 cv
386.663 117.135 386.788 117.287 386.909 117.448 cv
391.323 123.349 li
392.131 123.685 li
392.216 123.796 li
1 1 1 rgb
f
391.323 123.349 mo
385.919 123.349 li
385.305 123.349 384.739 123.018 384.439 122.483 cv
381.673 117.556 li
381.529 117.3 381.714 116.983 382.008 116.983 cv
386.529 116.983 li
386.663 117.135 386.788 117.287 386.909 117.448 cv
391.323 123.349 li
.670588 .929412 .890196 rgb
f
381.924 123.646 mo
381.776 123.635 li
376.94 122.909 li
376.398 122.828 375.931 122.463 375.72 121.956 cv
373.986 117.77 li
373.871 117.493 373.902 117.181 374.068 116.933 cv
374.234 116.685 374.511 116.537 374.809 116.537 cv
378.725 116.537 li
379.259 116.537 379.757 116.825 380.022 117.29 cv
380.635 118.363 382.005 120.834 382.768 122.21 cv
382.935 122.513 382.93 122.871 382.755 123.168 cv
382.579 123.467 382.268 123.646 381.924 123.646 cv
cp
1 1 1 rgb
f
381.843 123.193 mo
377.006 122.467 li
376.616 122.409 376.284 122.15 376.133 121.785 cv
374.399 117.598 li
374.277 117.306 374.492 116.983 374.809 116.983 cv
378.725 116.983 li
379.101 116.983 379.448 117.185 379.635 117.512 cv
380.254 118.596 381.628 121.074 382.377 122.427 cv
382.586 122.805 382.27 123.257 381.843 123.193 cv
cp
.670588 .929412 .890196 rgb
f
385.184 115.741 mo
375.164 115.741 li
374.838 115.741 374.548 115.545 374.422 115.246 cv
374.302 114.942 374.373 114.598 374.606 114.37 cv
376.321 112.708 li
376.817 112.846 li
376.978 112.891 li
377.474 113.03 li
382.518 114.441 li
383.223 114.638 383.893 114.924 384.514 115.295 cv
384.742 115.433 384.966 115.581 385.184 115.741 cv
1 1 1 rgb
f
384.514 115.295 mo
375.164 115.295 li
374.847 115.295 374.691 114.915 374.918 114.691 cv
376.817 112.846 li
376.978 112.891 li
377.474 113.03 li
382.518 114.441 li
383.223 114.638 383.893 114.924 384.514 115.295 cv
.670588 .929412 .890196 rgb
f
370.531 122.82 mo
369.941 122.82 369.462 122.34 369.462 121.751 cv
369.462 117.606 li
369.462 117.016 369.941 116.537 370.531 116.537 cv
371.425 116.537 li
372.042 116.537 372.592 116.906 372.827 117.477 cv
374.388 121.286 li
374.529 121.63 374.49 122.019 374.283 122.328 cv
374.077 122.636 373.731 122.82 373.361 122.82 cv
370.531 122.82 li
cp
1 1 1 rgb
f
373.36 122.373 mo
370.531 122.373 li
370.187 122.373 369.908 122.094 369.908 121.751 cv
369.908 117.606 li
369.908 117.262 370.187 116.983 370.531 116.983 cv
371.425 116.983 li
371.858 116.983 372.249 117.245 372.413 117.646 cv
373.975 121.456 li
374.155 121.894 373.833 122.373 373.36 122.373 cv
cp
.670588 .929412 .890196 rgb
f
372.6 136.417 mo
357.209 136.417 li
356.034 136.417 354.86 136.234 353.738 135.872 cv
320.764 125.681 li
317.994 124.788 li
357.227 124.788 li
363.593 124.788 369.249 128.599 371.639 134.496 cv
372.6 136.417 li
1 1 1 rgb
f
371.635 136.417 mo
357.209 136.417 li
356.034 136.417 354.86 136.234 353.738 135.872 cv
320.764 125.681 li
357.227 125.681 li
363.196 125.681 368.57 129.3 370.813 134.831 cv
371.635 136.417 li
.976471 .713726 .34902 rgb
f
367.123 136.417 mo
357.209 136.417 li
356.034 136.417 354.86 136.234 353.738 135.872 cv
331.249 129.063 li
356.495 129.063 li
360.832 129.063 365.166 130.377 367.123 136.417 cv
.905882 .360784 .356863 rgb
f
359.282 131.891 mo
357.863 131.891 356.709 130.737 356.709 129.318 cv
356.709 118.638 li
356.709 117.22 357.863 116.065 359.282 116.065 cv
363.27 116.065 li
364.688 116.065 365.842 117.22 365.842 118.638 cv
365.842 129.318 li
365.842 130.737 364.688 131.891 363.27 131.891 cv
359.282 131.891 li
1 1 1 rgb
f
365.3 118.636 mo
365.3 129.318 li
365.3 130.341 364.54 131.185 363.558 131.324 cv
363.464 131.337 363.37 131.346 363.272 131.346 cv
359.278 131.346 li
358.161 131.346 357.258 130.439 357.258 129.318 cv
357.258 118.636 li
357.258 117.519 358.161 116.608 359.278 116.608 cv
363.272 116.608 li
364.388 116.608 365.3 117.519 365.3 118.636 cv
.854902 .819608 .819608 rgb
f
388.397 136.417 mo
387.043 136.417 li
388.397 136.417 li
389.898 136.417 391.376 136.117 392.761 135.541 cv
399.851 133.022 li
399.874 133.012 399.897 133.002 399.92 132.992 cv
399.897 133.002 399.874 133.012 399.851 133.022 cv
392.761 135.541 li
391.376 136.117 389.898 136.417 388.397 136.417 cv
399.923 132.991 mo
399.926 132.989 399.929 132.988 399.931 132.987 cv
399.929 132.988 399.926 132.989 399.923 132.991 cv
399.938 132.984 mo
399.939 132.983 399.941 132.982 399.943 132.981 cv
399.941 132.982 399.939 132.983 399.938 132.984 cv
399.952 132.977 mo
399.953 132.977 399.954 132.977 399.955 132.976 cv
399.954 132.977 399.953 132.977 399.952 132.977 cv
.898039 .898039 .898039 rgb
f
388.397 136.417 mo
387.043 136.417 li
384.966 136.417 li
372.6 136.417 li
371.639 134.496 li
371.38 133.857 371.083 133.243 370.751 132.655 cv
374.867 132.933 378.897 133.083 382.827 133.083 cv
389.291 133.083 395.486 132.678 401.343 131.775 cv
401.008 132.289 400.532 132.711 399.955 132.976 cv
399.954 132.977 399.953 132.977 399.952 132.977 cv
399.949 132.979 399.946 132.98 399.943 132.981 cv
399.941 132.982 399.939 132.983 399.938 132.984 cv
399.935 132.985 399.933 132.986 399.931 132.987 cv
399.929 132.988 399.926 132.989 399.923 132.991 cv
399.922 132.991 399.921 132.991 399.92 132.992 cv
399.897 133.002 399.874 133.012 399.851 133.022 cv
392.761 135.541 li
391.376 136.117 389.898 136.417 388.397 136.417 cv
.768627 .737255 .737255 rgb
f
319.434 124.788 mo
317.994 124.788 li
315.234 123.897 li
316.636 124.198 318.038 124.495 319.434 124.788 cv
f
372.6 136.417 mo
371.635 136.417 li
370.813 134.831 li
370.492 134.039 370.107 133.287 369.665 132.579 cv
370.028 132.606 370.389 132.631 370.751 132.655 cv
371.083 133.243 371.38 133.857 371.639 134.496 cv
372.6 136.417 li
323.759 125.681 mo
320.764 125.681 li
317.994 124.788 li
319.434 124.788 li
320.881 125.091 322.319 125.388 323.759 125.681 cv
.898039 .898039 .898039 rgb
f
371.635 136.417 mo
367.123 136.417 li
366.537 134.609 365.738 133.224 364.79 132.171 cv
366.427 132.326 368.052 132.462 369.665 132.579 cv
370.107 133.287 370.492 134.039 370.813 134.831 cv
371.635 136.417 li
341.772 129.063 mo
331.707 129.063 li
320.764 125.681 li
323.759 125.681 li
329.837 126.919 335.853 128.063 341.772 129.063 cv
.878431 .639216 .313725 rgb
f
367.123 136.417 mo
357.209 136.417 li
356.034 136.417 354.86 136.234 353.738 135.872 cv
353.738 135.872 li
331.707 129.063 li
341.772 129.063 li
347.202 129.981 352.548 130.777 357.79 131.413 cv
358.211 131.714 358.726 131.891 359.282 131.891 cv
361.992 131.891 li
362.929 131.99 363.861 132.084 364.79 132.171 cv
365.738 133.224 366.537 134.609 367.123 136.417 cv
367.123 136.417 li
.811765 .32549 .321569 rgb
f
361.992 131.891 mo
359.282 131.891 li
358.726 131.891 358.211 131.714 357.79 131.413 cv
359.197 131.584 360.601 131.744 361.992 131.891 cv
.898039 .898039 .898039 rgb
f
375.207 113.787 mo
373.738 113.376 li
373.327 111.022 li
366.812 111.08 li
366.506 112.708 li
359.318 113.648 li
359.318 112.965 li
365.559 112.069 li
365.823 110.059 li
374.248 110.059 li
374.838 112.293 li
376.321 112.708 li
375.207 113.787 li
.898039 .87451 .87451 rgb
f
399.87 126.89 mo
399.512 126.889 390.47 124.447 390.47 124.447 cv
389.983 123.796 li
392.216 123.796 li
392.131 123.685 li
399.833 126.861 li
399.881 126.88 399.892 126.89 399.87 126.89 cv
386.109 116.537 mo
383.974 116.537 li
383.926 116.506 383.877 116.475 383.827 116.445 cv
383.321 116.143 382.771 115.906 382.19 115.741 cv
385.184 115.741 li
385.184 115.741 li
385.301 115.826 385.417 115.92 385.533 116.014 cv
385.707 116.157 385.872 116.304 386.033 116.461 cv
386.109 116.537 li
.929412 .913725 .913725 rgb
f
392.216 123.796 mo
389.983 123.796 li
389.649 123.349 li
391.323 123.349 li
392.131 123.685 li
392.216 123.796 li
386.529 116.983 mo
384.6 116.983 li
384.531 116.928 384.462 116.873 384.391 116.821 cv
384.258 116.724 384.119 116.629 383.974 116.537 cv
386.109 116.537 li
386.257 116.68 386.395 116.827 386.529 116.983 cv
1 1 1 rgb
f
391.323 123.349 mo
389.649 123.349 li
385.836 118.251 li
385.737 118.119 385.634 117.995 385.513 117.857 cv
385.405 117.732 385.294 117.613 385.162 117.484 cv
385.1 117.423 li
384.966 117.293 384.828 117.17 384.69 117.056 cv
384.66 117.032 384.63 117.007 384.6 116.983 cv
386.529 116.983 li
386.529 116.983 li
386.663 117.135 386.788 117.287 386.909 117.448 cv
391.323 123.349 li
.768627 .94902 .921569 rgb
f
385.184 115.741 mo
382.19 115.741 li
382.179 115.738 382.167 115.735 382.156 115.732 cv
380.594 115.295 li
384.514 115.295 li
384.514 115.295 li
384.742 115.433 384.966 115.581 385.184 115.741 cv
375.705 113.927 mo
375.207 113.787 li
376.321 112.708 li
376.817 112.846 li
375.705 113.927 li
1 1 1 rgb
f
384.514 115.295 mo
380.594 115.295 li
375.705 113.927 li
376.817 112.846 li
376.978 112.891 li
377.474 113.03 li
382.518 114.441 li
383.223 114.638 383.893 114.924 384.514 115.295 cv
.768627 .94902 .921569 rgb
f
314.051 120.854 mo
314.05 120.852 li
314.075 120.853 li
314.059 120.854 314.051 120.854 314.051 120.854 cv
.898039 .87451 .87451 rgb
f
314.583 119.849 mo
314.582 119.848 li
315.471 119.815 316.884 119.761 318.643 119.694 cv
316.885 119.762 315.473 119.815 314.583 119.849 cv
1 1 1 rgb
f
314.05 120.851 mo
307.176 104.859 li
306.83 102.388 li
307.201 102.388 li
314.582 119.848 li
314.582 119.848 li
314.583 119.849 li
314.523 119.852 314.466 119.854 314.411 119.856 cv
314.05 120.851 li
.898039 .87451 .87451 rgb
f
301.594 112.88 mo
301.594 111.989 li
301.639 111.989 li
301.648 111.989 301.657 111.989 301.666 111.989 cv
301.594 112.88 li
307.176 104.859 mo
306.531 103.358 li
305.161 103.358 li
305.025 102.388 li
306.83 102.388 li
307.176 104.859 li
.984314 .8 .545098 rgb
f
301.639 111.989 mo
301.594 111.989 li
301.594 102.388 li
305.025 102.388 li
305.161 103.358 li
302.361 103.358 li
301.666 111.989 li
301.657 111.989 301.648 111.989 301.639 111.989 cv
.933333 .552941 .552941 rgb
f
349.115 118.327 mo
349.114 118.326 349.113 118.325 349.11 118.324 cv
349.113 118.325 349.114 118.326 349.115 118.327 cv
1 1 1 rgb
f
352.251 122.818 mo
315.028 120.902 li
315.003 120.845 li
317.993 120.815 327.384 120.702 334.087 120.426 cv
338.553 120.241 342.088 120.087 344.592 119.964 cv
345.991 119.896 347.143 119.835 347.945 119.784 cv
349.422 119.691 350.236 119.639 350.433 118.573 cv
350.433 118.573 350.458 116.049 350.609 114.787 cv
359.318 113.648 li
359.318 115.75 li
359.318 115.856 359.316 115.961 359.311 116.065 cv
359.282 116.065 li
357.863 116.065 356.709 117.22 356.709 118.638 cv
356.709 121.235 li
355.493 122.225 353.941 122.818 352.251 122.818 cv
.898039 .87451 .87451 rgb
f
315.028 120.902 mo
314.075 120.853 li
314.162 120.853 314.487 120.85 315.003 120.845 cv
315.028 120.902 li
314.049 120.852 mo
314.049 120.852 li
314.05 120.851 li
314.05 120.852 li
f
318.643 119.694 mo
328.485 119.317 349.12 118.508 349.115 118.328 cv
349.115 118.328 349.115 118.328 349.115 118.327 cv
349.209 118.506 328.504 119.318 318.643 119.694 cv
f
349.99 114.303 mo
359.318 112.963 li
359.318 112.965 li
349.99 114.303 li
f
356.709 121.235 mo
356.709 118.638 li
356.709 117.22 357.863 116.065 359.282 116.065 cv
359.311 116.065 li
359.303 116.248 359.288 116.429 359.267 116.608 cv
358.155 116.614 357.258 117.523 357.258 118.636 cv
357.258 120.738 li
357.084 120.913 356.9 121.079 356.709 121.235 cv
1 1 1 rgb
f
357.258 120.738 mo
357.258 118.636 li
357.258 117.523 358.155 116.614 359.267 116.608 cv
359.073 118.213 358.342 119.651 357.258 120.738 cv
.898039 .87451 .87451 rgb
f
315.003 120.845 mo
314.583 119.849 li
315.473 119.815 316.885 119.762 318.643 119.694 cv
328.504 119.318 349.209 118.506 349.115 118.327 cv
349.114 118.326 349.113 118.325 349.11 118.324 cv
349.029 118.289 348.995 118.167 348.995 117.985 cv
348.995 117.006 349.99 114.303 349.99 114.303 cv
349.99 114.303 li
359.318 112.965 li
359.318 113.648 li
350.609 114.787 li
350.458 116.049 350.433 118.573 350.433 118.573 cv
350.236 119.639 349.422 119.691 347.945 119.784 cv
347.143 119.835 345.991 119.896 344.592 119.964 cv
342.088 120.087 338.553 120.241 334.087 120.426 cv
327.384 120.702 317.993 120.815 315.003 120.845 cv
.929412 .913725 .913725 rgb
f
314.075 120.853 mo
314.049 120.852 li
314.05 120.851 li
314.411 119.856 li
314.466 119.854 314.523 119.852 314.583 119.849 cv
315.003 120.845 li
314.487 120.85 314.162 120.853 314.075 120.853 cv
f
363.178 117.7 mo
359.373 117.7 li
358.819 117.7 358.367 118.151 358.367 118.706 cv
358.367 122.605 li
358.367 123.16 358.819 123.611 359.373 123.611 cv
360.516 123.611 li
362.035 123.611 li
363.178 123.611 li
363.732 123.611 364.184 123.16 364.184 122.605 cv
364.184 118.706 li
364.184 118.151 363.732 117.7 363.178 117.7 cv
cp
1 1 1 rgb
f
363.178 118.12 mo
362.337 118.12 li
361.929 118.12 360.622 118.12 360.214 118.12 cv
359.373 118.12 li
359.049 118.12 358.787 118.382 358.787 118.706 cv
358.787 122.605 li
358.787 122.928 359.049 123.191 359.373 123.191 cv
360.516 123.191 li
362.035 123.191 li
363.178 123.191 li
363.501 123.191 363.764 122.928 363.764 122.605 cv
363.764 118.706 li
363.764 118.382 363.501 118.12 363.178 118.12 cv
cp
.670588 .929412 .890196 rgb
f
365.3 128.107 mo
365.3 129.318 li
365.3 130.341 364.54 131.185 363.558 131.324 cv
363.464 131.337 363.37 131.346 363.272 131.346 cv
359.278 131.346 li
358.161 131.346 357.258 130.439 357.258 129.318 cv
357.258 125.681 li
360.185 125.686 362.963 126.566 365.3 128.107 cv
cp
.976471 .713726 .34902 rgb
f
363.558 131.324 mo
363.464 131.337 363.37 131.346 363.272 131.346 cv
359.278 131.346 li
358.161 131.346 357.258 130.439 357.258 129.318 cv
357.258 129.086 li
359.51 129.193 361.721 129.823 363.558 131.324 cv
cp
.905882 .360784 .356863 rgb
f
368.097 106.374 mo
314.405 106.171 li
314.405 105.811 li
368.097 105.631 li
368.097 106.374 li
cp
.243137 .192157 .172549 rgb
f
372.009 106.374 mo
425.7 106.171 li
425.7 105.811 li
372.009 105.631 li
372.009 106.374 li
cp
f
374.386 109.284 mo
365.719 109.284 li
365.719 110.109 li
374.386 110.109 li
374.386 109.284 li
cp
0 0 0 rgb
f
372.653 108.458 mo
367.453 108.458 li
367.453 109.284 li
372.653 109.284 li
372.653 108.458 li
cp
.380392 .309804 .286275 rgb
f
370.816 107.272 mo
369.289 107.272 li
369.289 105.982 li
370.816 105.982 li
370.816 107.272 li
cp
f
368.059 108 mo
366.161 106.091 li
366.722 105.873 li
368.62 107.782 li
368.059 108 li
cp
f
372.081 108.005 mo
371.532 107.776 li
373.575 105.867 li
374.123 106.097 li
372.081 108.005 li
cp
f
374.386 105.569 mo
371.542 104.819 368.654 104.79 365.719 105.569 cv
365.719 106.395 li
374.386 106.395 li
374.386 105.569 li
cp
0 0 0 rgb
f
371.497 106.962 mo
368.608 106.962 li
367.56 106.962 366.71 107.493 366.71 108.149 cv
366.71 108.458 li
373.396 108.458 li
373.396 108.149 li
373.396 107.493 372.545 106.962 371.497 106.962 cv
cp
f
54.5302 25.4737 mo
54.5302 27.0965 53.2147 28.4121 51.592 28.4121 cv
49.9694 28.4121 48.6539 27.0965 48.6539 25.4737 cv
48.6539 20.963 li
48.6539 19.3402 49.9694 18.0248 51.592 18.0248 cv
53.2147 18.0248 54.5302 19.3402 54.5302 20.963 cv
54.5302 25.4737 li
.133333 .223529 .352941 rgb
f
84.9148 8.02562 mo
29.6023 7.79361 li
29.6023 7.38222 li
84.9148 7.17719 li
84.9148 8.02562 li
cp
f
88.9448 8.02562 mo
144.257 7.79361 li
144.257 7.38222 li
88.9448 7.17719 li
88.9448 8.02562 li
cp
f
87.3962 10.6255 mo
86.4555 10.6255 li
86.4555 7.19908 li
87.3962 7.19908 li
87.3962 10.6255 li
cp
f
85.1801 10.6464 mo
84.752 6.77899 li
85.3564 6.73732 li
85.7846 10.6047 li
85.1801 10.6464 li
.380392 .309804 .286275 rgb
f
88.6717 10.6464 mo
88.0672 10.6047 li
88.4954 6.73732 li
89.0998 6.77899 li
88.6717 10.6464 li
f
85.1801 10.6464 mo
84.752 6.77899 li
85.3564 6.73732 li
85.7846 10.6047 li
85.1801 10.6464 li
.133333 .223529 .352941 rgb
f
88.6717 10.6464 mo
88.0672 10.6047 li
88.4954 6.73732 li
89.0998 6.77899 li
88.6717 10.6464 li
f
88.9418 8.15344 mo
84.91 8.15344 li
84.528 7.36785 li
84.3843 7.0722 84.5293 6.71599 84.8334 6.60482 cv
86.2283 6.09528 87.6334 6.04331 89.034 6.59045 cv
89.3326 6.70713 89.4741 7.05863 89.3319 7.3512 cv
88.9418 8.15344 li
cp
.290196 .635294 .717647 rgb
f
89.2853 10.1702 mo
84.5744 10.1702 li
83.9915 10.1702 83.5189 10.6428 83.5189 11.2257 cv
83.5189 12.5215 li
90.3408 12.5215 li
90.3408 11.2257 li
90.3408 10.6428 89.8681 10.1702 89.2853 10.1702 cv
.976471 .713726 .34902 rgb
f
109.569 48.252 mo
109.047 48.4739 li
107.627 45.1368 li
108.67 44.6927 li
109.569 48.252 li
cp
.243137 .192157 .172549 rgb
f
110.26 48.1161 mo
110.712 49.1802 110.217 50.4099 109.153 50.8628 cv
108.089 51.3157 106.859 50.8202 106.406 49.7562 cv
105.953 48.6921 106.449 47.4624 107.513 47.0095 cv
108.577 46.5566 109.807 47.0521 110.26 48.1161 cv
cp
f
109.476 48.4495 mo
109.745 49.0811 109.451 49.811 108.82 50.0798 cv
108.188 50.3484 107.458 50.0544 107.189 49.4229 cv
106.921 48.7913 107.215 48.0615 107.846 47.7927 cv
108.478 47.5239 109.208 47.8179 109.476 48.4495 cv
cp
.854902 .819608 .819608 rgb
f
108.967 48.6665 mo
109.116 49.0165 108.953 49.4209 108.603 49.5698 cv
108.253 49.7188 107.848 49.5559 107.699 49.2058 cv
107.55 48.8559 107.713 48.4514 108.063 48.3025 cv
108.413 48.1536 108.818 48.3164 108.967 48.6665 cv
cp
.243137 .192157 .172549 rgb
f
109.47 46.0973 mo
107.738 46.0973 li
105.208 39.6884 li
107.269 38.658 li
109.47 46.0973 li
.854902 .819608 .819608 rgb
f
71.1565 26.4388 mo
19.1438 22.7077 li
17.2506 22.5719 15.6148 21.3346 14.969 19.5499 cv
9.57506 4.64377 li
11.8415 4.64377 li
17.2816 14.8007 li
17.8443 15.8511 18.9394 16.507 20.1312 16.507 cv
71.1565 16.507 li
71.1565 26.4388 li
.380392 .764706 .854902 rgb
f
117.689 33.3691 mo
117.689 33.6451 li
117.689 35.1019 117.302 36.4756 116.635 37.6565 cv
116.033 38.7158 115.2 39.6264 114.207 40.3215 cv
113.953 40.4981 113.694 40.6637 113.418 40.8127 cv
112.265 41.4361 110.94 41.7947 109.533 41.7947 cv
75.6102 41.7947 li
70.7324 41.7947 64.2766 39.3007 60.1769 35.5212 cv
59.7852 35.1625 59.4156 34.7873 59.0679 34.4065 cv
57.2912 32.4367 56.171 30.1854 56.171 27.7963 cv
56.171 25.3629 li
63.9235 24.6898 69.0661 21.8592 71.1574 16.507 cv
71.3063 14.4323 li
71.7864 12.468 73.5465 11.083 75.566 11.083 cv
89.0679 11.083 li
90.7013 11.083 92.0255 12.4017 92.0255 14.035 cv
92.0255 20.463 li
104.716 20.463 li
107.878 20.463 110.775 21.5943 113.021 23.4703 cv
113.605 23.9614 114.152 24.502 114.643 25.0871 cv
114.792 25.2637 114.941 25.4512 115.079 25.6388 cv
116.563 27.5976 117.496 29.9924 117.661 32.5912 cv
117.678 32.8449 117.689 33.1099 117.689 33.3691 cv
.290196 .635294 .717647 rgb
f
51.0615 21.2909 mo
51.0615 21.9124 46.3049 22.4161 40.4375 22.4161 cv
34.57 22.4161 29.8135 21.9124 29.8135 21.2909 cv
29.8135 20.6694 34.57 20.1654 40.4375 20.1654 cv
46.3049 20.1654 51.0615 20.6694 51.0615 21.2909 cv
f
117.567 31.6862 mo
111.867 32.5415 li
111.542 32.5912 li
110.858 31.6752 li
110.979 31.6587 li
117.413 30.7702 li
117.479 31.0737 117.529 31.3773 117.567 31.6862 cv
f
117.689 33.3691 mo
117.689 33.6451 li
117.689 35.1019 117.302 36.4756 116.635 37.6565 cv
116.033 38.7158 115.2 39.6264 114.207 40.3215 cv
113.953 40.4981 113.694 40.6637 113.418 40.8127 cv
112.408 33.1429 li
104.766 33.1429 li
103.806 33.1429 103.017 32.3595 103.006 31.3993 cv
102.962 26.5548 li
102.956 26.1629 103.105 25.7933 103.381 25.5174 cv
103.657 25.2415 104.021 25.0871 104.413 25.0871 cv
114.643 25.0871 li
114.792 25.2637 114.941 25.4512 115.079 25.6388 cv
116.563 27.5976 117.496 29.9924 117.661 32.5912 cv
117.678 32.8449 117.689 33.1099 117.689 33.3691 cv
.133333 .223529 .352941 rgb
f
117.661 32.5912 mo
107.683 32.5912 li
106.767 25.6388 li
115.079 25.6388 li
116.563 27.5976 117.496 29.9924 117.661 32.5912 cv
.670588 .929412 .890196 rgb
f
117.689 33.3691 mo
117.689 33.6451 li
117.689 35.1019 117.302 36.4756 116.635 37.6565 cv
116.033 38.7158 115.2 39.6264 114.207 40.3215 cv
114.036 40.3215 li
113.12 33.3691 li
117.689 33.3691 li
f
106.905 32.5912 mo
104.768 32.5912 li
104.105 32.5912 103.566 32.0574 103.56 31.3946 cv
103.511 26.549 li
103.506 26.0477 103.911 25.6388 104.413 25.6388 cv
106.083 25.6388 li
106.905 32.5912 li
cp
f
112.894 32.7843 mo
112.158 32.7843 li
111.216 25.4963 li
111.952 25.4963 li
112.894 32.7843 li
.133333 .223529 .352941 rgb
f
101.014 41.7947 mo
75.6102 41.7947 li
70.7324 41.7947 64.2766 39.3007 60.1769 35.5212 cv
93.3498 35.5212 li
97.0909 35.5212 100.28 38.1641 101.014 41.7947 cv
f
99.4522 29.0033 mo
99.4522 30.985 97.8457 32.5915 95.8641 32.5915 cv
75.8653 32.5915 li
73.8836 32.5915 72.2772 30.985 72.2772 29.0033 cv
72.2772 27.0217 73.8836 25.4152 75.8653 25.4152 cv
95.8641 25.4152 li
97.8457 25.4152 99.4522 27.0217 99.4522 29.0033 cv
cp
.380392 .764706 .854902 rgb
f
95.2447 31.5678 mo
93.8305 31.5678 92.6802 30.4173 92.6802 29.0033 cv
92.6802 27.5894 93.8305 26.4389 95.2447 26.4389 cv
96.6591 26.4389 97.8092 27.5894 97.8092 29.0033 cv
97.8092 30.4173 96.6591 31.5678 95.2447 31.5678 cv
cp
.133333 .223529 .352941 rgb
f
97.2833 29.0033 mo
97.2833 30.1292 96.3707 31.0418 95.2448 31.0418 cv
94.119 31.0418 93.2064 30.1292 93.2064 29.0033 cv
93.2064 27.8775 94.119 26.9649 95.2448 26.9649 cv
96.3707 26.9649 97.2833 27.8775 97.2833 29.0033 cv
cp
.670588 .929412 .890196 rgb
f
85.8645 31.5678 mo
84.4502 31.5678 83.3 30.4173 83.3 29.0033 cv
83.3 27.5894 84.4502 26.4389 85.8645 26.4389 cv
87.2788 26.4389 88.429 27.5894 88.429 29.0033 cv
88.429 30.4173 87.2788 31.5678 85.8645 31.5678 cv
cp
.133333 .223529 .352941 rgb
f
87.9032 29.0033 mo
87.9032 30.1292 86.9904 31.0418 85.8647 31.0418 cv
84.7389 31.0418 83.8262 30.1292 83.8262 29.0033 cv
83.8262 27.8775 84.7389 26.9649 85.8647 26.9649 cv
86.9904 26.9649 87.9032 27.8775 87.9032 29.0033 cv
cp
.670588 .929412 .890196 rgb
f
76.4844 31.5678 mo
75.07 31.5678 73.9199 30.4173 73.9199 29.0033 cv
73.9199 27.5894 75.07 26.4389 76.4844 26.4389 cv
77.8986 26.4389 79.0489 27.5894 79.0489 29.0033 cv
79.0489 30.4173 77.8986 31.5678 76.4844 31.5678 cv
cp
.133333 .223529 .352941 rgb
f
78.5229 29.0033 mo
78.5229 30.1292 77.6103 31.0418 76.4845 31.0418 cv
75.3587 31.0418 74.4461 30.1292 74.4461 29.0033 cv
74.4461 27.8775 75.3587 26.9649 76.4845 26.9649 cv
77.6103 26.9649 78.5229 27.8775 78.5229 29.0033 cv
cp
.670588 .929412 .890196 rgb
f
10.1237 6.16004 mo
10.1237 6.16004 li
9.57506 4.64377 li
10.1237 6.16004 li
1 1 1 rgb
f
70.4462 18.0243 mo
70.4462 18.0232 li
20.1312 18.0232 li
18.9394 18.0232 17.8443 17.3674 17.2816 16.3169 cv
11.8415 6.16004 li
10.1237 6.16004 li
9.57506 4.64377 li
11.8415 4.64377 li
17.2816 14.8007 li
17.8443 15.8511 18.9394 16.507 20.1312 16.507 cv
71.1565 16.507 li
70.4479 18.0212 li
70.4472 18.0224 70.4468 18.0231 70.4462 18.0243 cv
.505882 .811765 .882353 rgb
f
70.4462 18.0248 mo
70.4462 18.0243 li
70.4468 18.0231 70.4472 18.0224 70.4479 18.0212 cv
70.4462 18.0248 li
.431373 .709804 .772549 rgb
f
100.302 14.3881 mo
100.302 14.3881 li
100.302 14.3881 li
100.087 14.3771 99.8663 14.3605 99.651 14.3494 cv
99.1213 14.3219 98.5917 14.2887 98.0618 14.2667 cv
98.0618 14.2667 li
98.023 14.2647 97.9848 14.2628 97.946 14.2608 cv
97.9847 14.2627 98.0233 14.2647 98.062 14.2667 cv
98.5917 14.2887 99.1213 14.3219 99.651 14.3494 cv
99.8663 14.3605 100.087 14.3771 100.302 14.3881 cv
100.302 14.3881 li
91.9968 13.6215 mo
91.857 12.6233 91.2184 11.7868 90.3408 11.3691 cv
90.3408 11.3691 li
91.2183 11.7868 91.857 12.6233 91.9968 13.6215 cv
1 1 1 rgb
f
90.3408 11.3691 mo
89.9552 11.1857 89.5236 11.083 89.0679 11.083 cv
89.0681 11.083 li
89.5238 11.083 89.9553 11.1856 90.3408 11.3691 cv
90.3408 11.3691 li
.980392 .772549 .478431 rgb
f
71.1577 16.5026 mo
71.3063 14.4323 li
71.7864 12.468 73.5465 11.083 75.566 11.083 cv
89.0681 11.083 li
89.5236 11.083 89.9552 11.1857 90.3408 11.3691 cv
91.2184 11.7868 91.857 12.6233 91.9968 13.6215 cv
92.0157 13.7566 92.0255 13.8946 92.0255 14.035 cv
92.0255 14.0546 li
91.8881 14.052 91.7516 14.0496 91.6143 14.0473 cv
91.0992 13.1796 90.1516 12.5991 89.0681 12.5991 cv
75.566 12.5991 li
73.5465 12.5991 71.7864 13.984 71.3063 15.9486 cv
71.1577 16.5026 li
.431373 .709804 .772549 rgb
f
71.1569 16.508 mo
71.1565 16.507 li
71.1577 16.5026 li
71.1574 16.507 li
71.1574 16.507 li
71.1569 16.508 li
1 1 1 rgb
f
117.661 32.5912 mo
117.66 32.582 117.66 32.5729 117.659 32.5637 cv
117.66 32.5728 117.66 32.582 117.661 32.5912 cv
115.171 25.7622 mo
115.171 25.762 115.171 25.7617 115.171 25.7615 cv
115.171 25.7618 115.171 25.7619 115.171 25.7622 cv
115.159 25.746 mo
115.158 25.7442 115.157 25.7427 115.155 25.7409 cv
115.157 25.7426 115.158 25.7443 115.159 25.746 cv
115.145 25.727 mo
115.143 25.7241 115.141 25.7212 115.138 25.7183 cv
115.141 25.7212 115.143 25.7241 115.145 25.727 cv
115.126 25.701 mo
115.122 25.6968 115.119 25.6925 115.116 25.6883 cv
115.119 25.6925 115.122 25.6968 115.126 25.701 cv
115.11 25.6799 mo
115.106 25.6754 115.103 25.6709 115.1 25.6665 cv
115.103 25.6709 115.106 25.6754 115.11 25.6799 cv
115.094 25.6593 mo
115.089 25.6525 115.084 25.6456 115.079 25.6388 cv
115.084 25.6456 115.089 25.6525 115.094 25.6593 cv
f
114.643 25.0871 mo
113.139 25.0871 li
113.1 25.0533 113.06 25.0198 113.021 24.9865 cv
110.775 23.1106 107.878 21.9793 104.716 21.9793 cv
101.586 21.9793 li
101.71 21.7535 101.786 21.4984 101.786 21.2234 cv
101.786 20.463 li
104.716 20.463 li
107.878 20.463 110.775 21.5943 113.021 23.4703 cv
113.605 23.9614 114.152 24.502 114.643 25.0871 cv
.431373 .709804 .772549 rgb
f
117.689 33.3691 mo
117.59 33.3691 li
117.557 33.1074 117.516 32.8482 117.468 32.5912 cv
117.661 32.5912 li
117.661 32.5912 li
117.678 32.8449 117.689 33.1099 117.689 33.3691 cv
115.079 25.6388 mo
113.744 25.6388 li
113.548 25.4488 113.346 25.2648 113.139 25.0871 cv
114.643 25.0871 li
114.643 25.0871 li
114.792 25.2637 114.941 25.4512 115.079 25.6388 cv
.305882 .380392 .482353 rgb
f
117.661 32.5912 mo
117.468 32.5912 li
117.457 32.5299 117.445 32.4687 117.433 32.4077 cv
117.413 32.2865 li
117.412 32.2867 li
117.016 30.3919 116.209 28.6466 115.079 27.1551 cv
114.941 26.9675 114.792 26.7798 114.643 26.6032 cv
114.36 26.2667 114.06 25.945 113.744 25.6388 cv
115.079 25.6388 li
115.079 25.6388 li
115.079 25.6388 li
115.084 25.6456 115.089 25.6525 115.094 25.6593 cv
115.096 25.6617 115.098 25.6641 115.1 25.6665 cv
115.103 25.6709 115.106 25.6754 115.11 25.6799 cv
115.112 25.6827 115.114 25.6854 115.116 25.6883 cv
115.119 25.6925 115.122 25.6968 115.126 25.701 cv
115.13 25.7068 115.134 25.7125 115.138 25.7183 cv
115.141 25.7212 115.143 25.7241 115.145 25.727 cv
115.148 25.7316 115.152 25.7363 115.155 25.7409 cv
115.157 25.7427 115.158 25.7442 115.159 25.746 cv
115.163 25.7512 115.167 25.7563 115.171 25.7615 cv
115.171 25.7617 115.171 25.762 115.171 25.7622 cv
116.253 27.2263 117.027 28.9277 117.412 30.7704 cv
117.413 30.7702 li
117.433 30.8914 li
117.542 31.438 117.622 31.995 117.659 32.5637 cv
117.66 32.5729 117.66 32.582 117.661 32.5912 cv
117.661 32.5912 li
.737255 .945098 .913725 rgb
f
117.666 34.2382 mo
117.661 34.1075 li
117.645 33.8592 117.621 33.6131 117.59 33.3691 cv
117.689 33.3691 li
117.689 33.3691 li
117.689 33.6451 li
117.689 33.6451 li
117.689 33.8446 117.68 34.0421 117.666 34.2382 cv
f
109.533 41.7947 mo
108.197 41.7947 li
109.533 41.7947 li
110.94 41.7947 112.265 41.4361 113.418 40.8127 cv
113.418 40.8127 li
113.694 40.6637 113.953 40.4981 114.207 40.3215 cv
114.207 40.3215 li
114.212 40.318 114.217 40.3145 114.222 40.3109 cv
114.217 40.3145 114.212 40.318 114.207 40.3215 cv
113.953 40.4981 113.694 40.6637 113.418 40.8127 cv
112.265 41.4361 110.94 41.7947 109.533 41.7947 cv
75.5801 41.7947 mo
75.5772 41.7947 75.5737 41.7947 75.5707 41.7947 cv
75.5737 41.7947 75.5771 41.7947 75.5801 41.7947 cv
75.55 41.7946 mo
75.5461 41.7946 75.5424 41.7946 75.5385 41.7946 cv
75.5424 41.7946 75.5461 41.7946 75.55 41.7946 cv
75.5199 41.7945 mo
75.5156 41.7944 75.5116 41.7944 75.5073 41.7944 cv
75.5115 41.7944 75.5157 41.7944 75.5199 41.7945 cv
75.49 41.7942 mo
75.4857 41.7942 75.4807 41.7942 75.4764 41.7941 cv
75.4809 41.7942 75.4855 41.7942 75.49 41.7942 cv
75.4593 41.7939 mo
75.4551 41.7939 75.4508 41.7939 75.4465 41.7938 cv
75.451 41.7939 75.4548 41.7939 75.4593 41.7939 cv
75.429 41.7936 mo
75.4247 41.7935 75.4202 41.7935 75.4159 41.7934 cv
75.4204 41.7935 75.4245 41.7935 75.429 41.7936 cv
75.3982 41.7932 mo
75.3942 41.7931 75.3898 41.7931 75.3858 41.793 cv
75.39 41.7931 75.394 41.7931 75.3982 41.7932 cv
75.3678 41.7927 mo
75.3635 41.7926 75.3592 41.7926 75.3549 41.7925 cv
75.3591 41.7926 75.3636 41.7926 75.3678 41.7927 cv
75.3359 41.7921 mo
75.3322 41.7921 75.3287 41.792 75.325 41.7919 cv
75.3287 41.792 75.3323 41.7921 75.3359 41.7921 cv
75.3011 41.7915 mo
75.2988 41.7914 75.2968 41.7914 75.2945 41.7913 cv
75.2966 41.7914 75.299 41.7914 75.3011 41.7915 cv
75.2635 41.7906 mo
75.2631 41.7906 75.2623 41.7906 75.2619 41.7906 cv
75.2625 41.7906 75.2629 41.7906 75.2635 41.7906 cv
75.2335 41.7899 mo
75.2299 41.7898 75.226 41.7897 75.2224 41.7896 cv
75.2263 41.7897 75.2296 41.7898 75.2335 41.7899 cv
75.2028 41.7891 mo
75.1988 41.789 75.1948 41.7888 75.1908 41.7887 cv
75.1947 41.7888 75.1988 41.789 75.2028 41.7891 cv
75.1724 41.7882 mo
75.1681 41.7881 75.164 41.7879 75.1597 41.7878 cv
75.1639 41.7879 75.1682 41.7881 75.1724 41.7882 cv
75.1413 41.7872 mo
75.1373 41.7871 75.1327 41.787 75.1287 41.7868 cv
75.1329 41.787 75.137 41.7871 75.1413 41.7872 cv
75.1114 41.7863 mo
75.1068 41.7861 75.1017 41.7859 75.097 41.7858 cv
75.1016 41.7859 75.1069 41.7861 75.1114 41.7863 cv
75.0809 41.7852 mo
75.0759 41.785 75.0712 41.7849 75.0662 41.7847 cv
75.071 41.7849 75.076 41.785 75.0809 41.7852 cv
75.0504 41.7841 mo
75.0457 41.7839 75.0402 41.7837 75.0356 41.7835 cv
75.0407 41.7837 75.0452 41.7839 75.0504 41.7841 cv
75.0194 41.7829 mo
75.0147 41.7827 75.0093 41.7825 75.0046 41.7823 cv
75.0098 41.7825 75.0142 41.7827 75.0194 41.7829 cv
74.9891 41.7817 mo
74.9841 41.7815 74.9789 41.7813 74.9739 41.7811 cv
74.9791 41.7813 74.9839 41.7815 74.9891 41.7817 cv
74.9563 41.7803 mo
74.9483 41.7799 74.9408 41.7796 74.9327 41.7793 cv
74.9407 41.7796 74.9484 41.78 74.9563 41.7803 cv
74.9133 41.7784 mo
74.9083 41.7781 74.9033 41.7779 74.8982 41.7777 cv
74.9031 41.7779 74.9084 41.7782 74.9133 41.7784 cv
74.8828 41.7769 mo
74.8774 41.7767 74.8718 41.7764 74.8664 41.7761 cv
74.8719 41.7764 74.8773 41.7767 74.8828 41.7769 cv
74.8522 41.7754 mo
74.8465 41.7752 74.8406 41.7749 74.8349 41.7746 cv
74.8407 41.7749 74.8464 41.7751 74.8522 41.7754 cv
74.8215 41.7739 mo
74.8158 41.7736 74.81 41.7733 74.8043 41.773 cv
74.8098 41.7733 74.816 41.7736 74.8215 41.7739 cv
74.7908 41.7723 mo
74.7848 41.7719 74.7787 41.7716 74.7727 41.7713 cv
74.7788 41.7716 74.7847 41.7719 74.7908 41.7723 cv
74.7606 41.7706 mo
74.7545 41.7703 74.7483 41.7699 74.7422 41.7696 cv
74.7484 41.7699 74.7544 41.7703 74.7606 41.7706 cv
74.7295 41.7688 mo
74.7234 41.7685 74.7173 41.7681 74.7112 41.7678 cv
74.7174 41.7681 74.7233 41.7685 74.7295 41.7688 cv
74.6987 41.767 mo
74.6926 41.7667 74.6867 41.7663 74.6806 41.766 cv
74.6865 41.7663 74.6929 41.7667 74.6987 41.767 cv
74.6682 41.7652 mo
74.6618 41.7648 74.6555 41.7644 74.6491 41.764 cv
74.6553 41.7644 74.6621 41.7648 74.6682 41.7652 cv
74.6426 41.7636 mo
74.606 41.7613 74.5696 41.7589 74.5329 41.7564 cv
74.5695 41.7589 74.6061 41.7613 74.6426 41.7636 cv
74.5288 41.7561 mo
74.5206 41.7555 74.5128 41.7549 74.5046 41.7544 cv
74.5127 41.7549 74.5207 41.7555 74.5288 41.7561 cv
74.4977 41.7539 mo
74.4899 41.7533 74.4819 41.7527 74.474 41.7522 cv
74.4818 41.7527 74.4899 41.7533 74.4977 41.7539 cv
74.4674 41.7517 mo
74.4595 41.7511 74.452 41.7505 74.4442 41.75 cv
74.4516 41.7505 74.4599 41.7511 74.4674 41.7517 cv
74.4361 41.7494 mo
74.4286 41.7488 74.4206 41.7482 74.4131 41.7476 cv
74.4208 41.7482 74.4283 41.7488 74.4361 41.7494 cv
74.4063 41.7471 mo
74.3981 41.7465 74.39 41.7458 74.3818 41.7452 cv
74.3899 41.7458 74.3982 41.7465 74.4063 41.7471 cv
74.3769 41.7448 mo
74.368 41.7441 74.3591 41.7434 74.3502 41.7427 cv
74.3592 41.7434 74.3679 41.7441 74.3769 41.7448 cv
74.3501 41.7427 mo
69.1778 41.3276 62.7257 38.4668 59.0679 34.4065 cv
57.2912 32.4367 56.171 30.1854 56.171 27.7963 cv
56.171 27.7963 li
56.171 30.1854 57.2912 32.4367 59.0679 34.4065 cv
59.4156 34.7873 59.7852 35.1625 60.1769 35.5212 cv
60.1769 35.5212 li
63.9323 38.9833 69.6646 41.3667 74.3501 41.7427 cv
56.171 25.364 mo
54.5302 25.2463 li
54.5302 25.2461 li
56.171 25.3638 li
56.171 25.364 li
48.6539 24.8247 mo
19.1438 22.7077 li
19.1369 22.7072 19.1302 22.7067 19.1233 22.7062 cv
19.1301 22.7067 19.137 22.7072 19.1438 22.7077 cv
48.6539 24.8246 li
48.6539 24.8247 li
19.1168 22.7057 mo
19.1122 22.7053 19.1076 22.705 19.103 22.7046 cv
19.1077 22.705 19.1121 22.7053 19.1168 22.7057 cv
19.0944 22.7039 mo
19.0906 22.7036 19.087 22.7033 19.0832 22.703 cv
19.0869 22.7033 19.0908 22.7036 19.0944 22.7039 cv
19.0731 22.7021 mo
19.0705 22.7019 19.0678 22.7017 19.0653 22.7014 cv
19.0679 22.7017 19.0704 22.7019 19.0731 22.7021 cv
.909635 .909635 .908835 rgb
f
54.5302 25.2463 mo
48.6539 24.8247 li
48.6539 24.8246 li
54.5302 25.2461 li
54.5302 25.2463 li
.129412 .211765 .329412 rgb
f
56.171 25.3638 mo
54.5302 25.2461 li
48.6539 24.8246 li
19.1438 22.7077 li
19.137 22.7072 19.1301 22.7067 19.1233 22.7062 cv
19.1212 22.706 19.1189 22.7059 19.1168 22.7057 cv
19.1121 22.7053 19.1077 22.705 19.103 22.7046 cv
19.1002 22.7044 19.0973 22.7041 19.0944 22.7039 cv
19.0908 22.7036 19.0869 22.7033 19.0832 22.703 cv
19.0799 22.7027 19.0764 22.7024 19.0731 22.7021 cv
19.0704 22.7019 19.0679 22.7017 19.0653 22.7014 cv
17.5306 22.5659 16.1867 21.697 15.4022 20.4104 cv
30.3004 20.9531 li
29.9839 21.0597 29.8135 21.1732 29.8135 21.2909 cv
29.8135 21.9124 34.57 22.4161 40.4375 22.4161 cv
44.9963 22.4161 48.8844 22.1121 50.392 21.6849 cv
66.3249 22.2652 li
66.2882 22.3203 66.2515 22.3761 66.2157 22.4308 cv
63.6409 24.0476 60.271 25.0069 56.171 25.3629 cv
56.171 25.3638 li
.352941 .698039 .780392 rgb
f
109.533 41.7947 mo
108.197 41.7947 li
106.039 41.7947 li
101.014 41.7947 li
100.887 41.1659 100.686 40.5668 100.422 40.0057 cv
100.538 40.0059 100.651 40.006 100.767 40.006 cv
105.039 40.006 109.293 39.8911 113.275 39.7271 cv
113.418 40.8127 li
112.265 41.4361 110.94 41.7947 109.533 41.7947 cv
69.0419 35.5212 mo
60.1769 35.5212 li
60.1769 35.5212 li
59.7852 35.1625 59.4156 34.7873 59.0679 34.4065 cv
57.2912 32.4367 56.171 30.1854 56.171 27.7963 cv
56.171 25.364 li
56.171 25.3638 li
56.171 25.3629 li
60.271 25.0069 63.6409 24.0476 66.2157 22.4308 cv
62.1047 28.7224 63.912 32.8548 69.0419 35.5212 cv
.270588 .580392 .654902 rgb
f
40.4375 22.4161 mo
34.57 22.4161 29.8135 21.9124 29.8135 21.2909 cv
29.8135 21.1732 29.9839 21.0597 30.3004 20.9531 cv
50.392 21.6849 li
48.8844 22.1121 44.9963 22.4161 40.4375 22.4161 cv
f
113.418 40.8127 mo
113.418 40.8127 li
113.275 39.7271 li
113.502 39.7178 113.729 39.7082 113.954 39.6986 cv
114.036 40.3215 li
114.207 40.3215 li
113.953 40.4981 113.694 40.6637 113.418 40.8127 cv
.129412 .211765 .329412 rgb
f
114.207 40.3215 mo
114.207 40.3215 li
114.036 40.3215 li
113.954 39.6986 li
114.316 39.683 114.675 39.6671 115.033 39.6509 cv
114.775 39.886 114.508 40.1098 114.222 40.3109 cv
114.217 40.3145 114.212 40.318 114.207 40.3215 cv
.615686 .847059 .811765 rgb
f
101.014 41.7947 mo
75.6102 41.7947 li
75.6102 41.7947 li
75.6001 41.7947 75.5902 41.7947 75.5801 41.7947 cv
75.5771 41.7947 75.5737 41.7947 75.5707 41.7947 cv
75.5639 41.7947 75.5569 41.7946 75.55 41.7946 cv
75.5461 41.7946 75.5424 41.7946 75.5385 41.7946 cv
75.5323 41.7945 75.5261 41.7945 75.5199 41.7945 cv
75.5157 41.7944 75.5115 41.7944 75.5073 41.7944 cv
75.5014 41.7943 75.4959 41.7943 75.49 41.7942 cv
75.4855 41.7942 75.4809 41.7942 75.4764 41.7941 cv
75.4705 41.7941 75.4652 41.794 75.4593 41.7939 cv
75.4548 41.7939 75.451 41.7939 75.4465 41.7938 cv
75.4406 41.7937 75.4349 41.7937 75.429 41.7936 cv
75.4245 41.7935 75.4204 41.7935 75.4159 41.7934 cv
75.41 41.7934 75.4041 41.7933 75.3982 41.7932 cv
75.394 41.7931 75.39 41.7931 75.3858 41.793 cv
75.3796 41.7929 75.3741 41.7928 75.3678 41.7927 cv
75.3636 41.7926 75.3591 41.7926 75.3549 41.7925 cv
75.3487 41.7924 75.3421 41.7923 75.3359 41.7921 cv
75.3323 41.7921 75.3287 41.792 75.325 41.7919 cv
75.3171 41.7918 75.3091 41.7916 75.3011 41.7915 cv
75.299 41.7914 75.2966 41.7914 75.2945 41.7913 cv
75.2842 41.7911 75.2737 41.7909 75.2635 41.7906 cv
75.2629 41.7906 75.2625 41.7906 75.2619 41.7906 cv
75.2523 41.7904 75.2431 41.7901 75.2335 41.7899 cv
75.2296 41.7898 75.2263 41.7897 75.2224 41.7896 cv
75.2158 41.7894 75.2094 41.7892 75.2028 41.7891 cv
75.1988 41.789 75.1947 41.7888 75.1908 41.7887 cv
75.1848 41.7886 75.1784 41.7884 75.1724 41.7882 cv
75.1682 41.7881 75.1639 41.7879 75.1597 41.7878 cv
75.1534 41.7876 75.1476 41.7874 75.1413 41.7872 cv
75.137 41.7871 75.1329 41.787 75.1287 41.7868 cv
75.1227 41.7866 75.1174 41.7865 75.1114 41.7863 cv
75.1069 41.7861 75.1016 41.7859 75.097 41.7858 cv
75.0917 41.7856 75.0862 41.7854 75.0809 41.7852 cv
75.076 41.785 75.071 41.7849 75.0662 41.7847 cv
75.0608 41.7845 75.0558 41.7843 75.0504 41.7841 cv
75.0452 41.7839 75.0407 41.7837 75.0356 41.7835 cv
75.0299 41.7833 75.0251 41.7831 75.0194 41.7829 cv
75.0142 41.7827 75.0098 41.7825 75.0046 41.7823 cv
74.9992 41.7821 74.9944 41.7819 74.9891 41.7817 cv
74.9839 41.7815 74.9791 41.7813 74.9739 41.7811 cv
74.9682 41.7808 74.962 41.7805 74.9563 41.7803 cv
74.9484 41.78 74.9407 41.7796 74.9327 41.7793 cv
74.9264 41.779 74.9197 41.7787 74.9133 41.7784 cv
74.9084 41.7782 74.9031 41.7779 74.8982 41.7777 cv
74.8929 41.7774 74.8882 41.7772 74.8828 41.7769 cv
74.8773 41.7767 74.8719 41.7764 74.8664 41.7761 cv
74.8617 41.7759 74.8569 41.7757 74.8522 41.7754 cv
74.8464 41.7751 74.8407 41.7749 74.8349 41.7746 cv
74.8305 41.7743 74.8259 41.7741 74.8215 41.7739 cv
74.816 41.7736 74.8098 41.7733 74.8043 41.773 cv
74.7996 41.7727 74.7955 41.7725 74.7908 41.7723 cv
74.7847 41.7719 74.7788 41.7716 74.7727 41.7713 cv
74.7686 41.771 74.7646 41.7708 74.7606 41.7706 cv
74.7544 41.7703 74.7484 41.7699 74.7422 41.7696 cv
74.7382 41.7693 74.7335 41.7691 74.7295 41.7688 cv
74.7233 41.7685 74.7174 41.7681 74.7112 41.7678 cv
74.7068 41.7675 74.7031 41.7673 74.6987 41.767 cv
74.6929 41.7667 74.6865 41.7663 74.6806 41.766 cv
74.6766 41.7657 74.6723 41.7654 74.6682 41.7652 cv
74.6621 41.7648 74.6553 41.7644 74.6491 41.764 cv
74.6471 41.7639 74.6446 41.7637 74.6426 41.7636 cv
74.6061 41.7613 74.5695 41.7589 74.5329 41.7564 cv
74.5315 41.7563 74.5301 41.7562 74.5288 41.7561 cv
74.5207 41.7555 74.5127 41.7549 74.5046 41.7544 cv
74.5026 41.7542 74.4997 41.754 74.4977 41.7539 cv
74.4899 41.7533 74.4818 41.7527 74.474 41.7522 cv
74.4717 41.752 74.4698 41.7519 74.4674 41.7517 cv
74.4599 41.7511 74.4516 41.7505 74.4442 41.75 cv
74.4414 41.7498 74.4388 41.7496 74.4361 41.7494 cv
74.4283 41.7488 74.4208 41.7482 74.4131 41.7476 cv
74.4107 41.7474 74.4087 41.7473 74.4063 41.7471 cv
74.3982 41.7465 74.3899 41.7458 74.3818 41.7452 cv
74.3805 41.7451 74.3783 41.7449 74.3769 41.7448 cv
74.3679 41.7441 74.3592 41.7434 74.3502 41.7427 cv
74.3499 41.7427 74.3504 41.7427 74.3501 41.7427 cv
69.6646 41.3667 63.9323 38.9833 60.1769 35.5212 cv
60.1769 35.5212 li
69.0419 35.5212 li
75.7537 39.0099 88.1517 39.9879 100.422 40.0057 cv
100.686 40.5668 100.887 41.1659 101.014 41.7947 cv
101.014 41.7947 li
.129412 .211765 .329412 rgb
f
101.786 15.9716 mo
101.786 19.7071 li
101.786 20.579 101.08 21.2909 100.208 21.2909 cv
77.8063 21.2909 li
76.9289 21.2909 76.2225 20.579 76.2225 19.7071 cv
76.2225 15.9606 li
76.2225 15.1275 76.8682 14.4323 77.6959 14.3771 cv
77.9773 14.3605 78.2532 14.3384 78.5346 14.3274 cv
79.0643 14.2943 79.594 14.2612 80.1236 14.2392 cv
86.0278 13.9356 92.0089 13.9577 98.0618 14.2667 cv
98.5917 14.2887 99.1213 14.3219 99.651 14.3494 cv
99.8663 14.3605 100.087 14.3771 100.302 14.3881 cv
101.135 14.4377 101.786 15.133 101.786 15.9716 cv
.133333 .223529 .352941 rgb
f
80.1236 14.2392 mo
80.1236 21.2909 li
78.5346 21.2909 li
78.5346 14.3274 li
79.0643 14.2943 79.594 14.2612 80.1236 14.2392 cv
.976471 .713726 .34902 rgb
f
99.651 14.3494 mo
99.651 21.2909 li
98.0618 21.2909 li
98.0618 14.2667 li
98.5917 14.2887 99.1213 14.3219 99.651 14.3494 cv
f
100.346 14.3913 mo
100.345 14.3912 100.344 14.3911 100.342 14.391 cv
100.344 14.3911 100.345 14.3912 100.346 14.3913 cv
100.338 14.3906 mo
100.336 14.3905 100.335 14.3903 100.333 14.3902 cv
100.335 14.3903 100.336 14.3905 100.338 14.3906 cv
100.329 14.3899 mo
100.327 14.3898 100.326 14.3896 100.324 14.3895 cv
100.326 14.3896 100.327 14.3898 100.329 14.3899 cv
100.32 14.3892 mo
100.318 14.3891 100.316 14.389 100.314 14.3888 cv
100.316 14.389 100.318 14.3891 100.32 14.3892 cv
100.311 14.3886 mo
100.308 14.3884 100.305 14.3882 100.302 14.3881 cv
100.305 14.3882 100.308 14.3884 100.311 14.3886 cv
1 1 1 rgb
f
101.734 15.5872 mo
101.04 15.5266 100.345 15.4711 99.651 15.4205 cv
99.651 14.3494 li
99.651 14.3494 li
99.8663 14.3605 100.087 14.3771 100.302 14.3881 cv
100.302 14.3881 li
100.305 14.3882 100.308 14.3884 100.311 14.3886 cv
100.312 14.3887 100.313 14.3888 100.314 14.3888 cv
100.316 14.389 100.318 14.3891 100.32 14.3892 cv
100.321 14.3893 100.323 14.3894 100.324 14.3895 cv
100.326 14.3896 100.327 14.3898 100.329 14.3899 cv
100.33 14.39 100.332 14.3901 100.333 14.3902 cv
100.335 14.3903 100.336 14.3905 100.338 14.3906 cv
100.339 14.3907 100.341 14.3908 100.342 14.391 cv
100.344 14.3911 100.345 14.3912 100.346 14.3913 cv
101.027 14.4507 101.573 14.9443 101.734 15.5872 cv
.223529 .301961 .419608 rgb
f
77.6039 14.3859 mo
77.6051 14.3858 77.6063 14.3856 77.6075 14.3855 cv
77.6063 14.3856 77.6051 14.3858 77.6039 14.3859 cv
77.6119 14.3849 mo
77.6136 14.3847 77.6153 14.3845 77.617 14.3843 cv
77.6153 14.3845 77.6136 14.3847 77.6119 14.3849 cv
77.6203 14.3839 mo
77.6224 14.3837 77.6245 14.3835 77.6266 14.3832 cv
77.6245 14.3835 77.6224 14.3837 77.6203 14.3839 cv
77.6292 14.3829 mo
77.6384 14.3819 77.6476 14.381 77.6569 14.3802 cv
77.6476 14.381 77.6384 14.3819 77.6292 14.3829 cv
77.6579 14.3801 mo
77.6606 14.3798 77.6633 14.3796 77.666 14.3794 cv
77.6633 14.3796 77.6606 14.3798 77.6579 14.3801 cv
77.6679 14.3792 mo
77.6703 14.379 77.6728 14.3788 77.6753 14.3786 cv
77.6728 14.3788 77.6703 14.379 77.6679 14.3792 cv
77.6773 14.3784 mo
77.6798 14.3782 77.6823 14.378 77.6847 14.3779 cv
77.6823 14.378 77.6798 14.3782 77.6773 14.3784 cv
77.6866 14.3777 mo
77.6897 14.3775 77.6928 14.3773 77.6959 14.3771 cv
77.6928 14.3773 77.6897 14.3775 77.6866 14.3777 cv
.360784 .670588 .745098 rgb
f
97.946 14.2608 mo
97.9456 14.2608 97.9453 14.2608 97.9449 14.2607 cv
97.8511 14.256 97.7562 14.2513 97.6624 14.2467 cv
97.7566 14.2513 97.8518 14.256 97.946 14.2608 cv
1 1 1 rgb
f
98.0618 14.2667 mo
98.0227 14.2647 97.984 14.2627 97.9449 14.2607 cv
97.9453 14.2608 97.9456 14.2608 97.946 14.2608 cv
97.9848 14.2628 98.023 14.2647 98.0618 14.2667 cv
f
80.3783 14.2263 mo
83.126 14.0894 85.8902 14.0229 88.6707 14.0228 cv
85.8906 14.0229 83.1257 14.0894 80.3783 14.2263 cv
88.6777 14.0228 mo
88.6763 14.0228 88.6754 14.0228 88.6739 14.0228 cv
88.6739 14.0228 li
88.6754 14.0228 88.6763 14.0228 88.6777 14.0228 cv
.360784 .670588 .745098 rgb
f
76.2721 15.5872 mo
76.4247 14.9585 76.9472 14.4686 77.6039 14.3859 cv
77.6051 14.3858 77.6063 14.3856 77.6075 14.3855 cv
77.6089 14.3853 77.6104 14.3851 77.6119 14.3849 cv
77.6136 14.3847 77.6153 14.3845 77.617 14.3843 cv
77.6181 14.3842 77.6192 14.3841 77.6203 14.3839 cv
77.6224 14.3837 77.6245 14.3835 77.6266 14.3832 cv
77.6275 14.3831 77.6283 14.383 77.6292 14.3829 cv
77.6384 14.3819 77.6476 14.381 77.6569 14.3802 cv
77.6573 14.3801 77.6576 14.3801 77.6579 14.3801 cv
77.6606 14.3798 77.6633 14.3796 77.666 14.3794 cv
77.6666 14.3793 77.6673 14.3792 77.6679 14.3792 cv
77.6703 14.379 77.6728 14.3788 77.6753 14.3786 cv
77.676 14.3785 77.6767 14.3785 77.6773 14.3784 cv
77.6798 14.3782 77.6823 14.378 77.6847 14.3779 cv
77.6854 14.3778 77.686 14.3778 77.6866 14.3777 cv
77.6897 14.3775 77.6928 14.3773 77.6959 14.3771 cv
77.6959 14.3771 li
77.9773 14.3605 78.2532 14.3384 78.5346 14.3274 cv
78.5346 15.4095 li
77.7804 15.463 77.0267 15.5222 76.2721 15.5872 cv
98.0618 15.3136 mo
95.059 15.128 92.0533 15.0355 89.0436 15.0355 cv
86.0738 15.0355 83.1001 15.1256 80.1236 15.3051 cv
80.1236 14.2392 li
80.1236 14.2392 li
80.2087 14.2348 80.2933 14.2305 80.3783 14.2263 cv
83.1257 14.0894 85.8906 14.0229 88.6707 14.0228 cv
88.6718 14.0228 88.6728 14.0228 88.6739 14.0228 cv
88.6754 14.0228 88.6763 14.0228 88.6777 14.0228 cv
91.6541 14.0229 94.6497 14.0991 97.6624 14.2467 cv
97.7562 14.2513 97.8511 14.256 97.9449 14.2607 cv
97.984 14.2627 98.0227 14.2647 98.0618 14.2667 cv
98.0618 14.2667 li
98.0618 15.3136 li
.223529 .301961 .419608 rgb
f
78.5346 15.4095 mo
78.5346 14.3274 li
78.5346 14.3274 li
79.0643 14.2943 79.594 14.2612 80.1236 14.2392 cv
80.1236 15.3051 li
79.5941 15.3371 79.0643 15.3719 78.5346 15.4095 cv
.980392 .741176 .415686 rgb
f
99.651 15.4205 mo
99.1214 15.382 98.5916 15.3463 98.0618 15.3136 cv
98.0618 14.2667 li
98.0618 14.2667 li
98.5917 14.2887 99.1213 14.3219 99.651 14.3494 cv
99.651 15.4205 li
f
100.208 21.2909 mo
99.651 21.2909 li
99.651 18.5286 li
100.362 18.363 101.074 18.1797 101.786 17.9783 cv
101.786 19.7071 li
101.786 20.579 101.08 21.2909 100.208 21.2909 cv
98.0618 21.2909 mo
80.1236 21.2909 li
80.1236 18.8599 li
83.1467 19.4278 86.1806 19.7265 89.2274 19.7265 cv
92.1602 19.7265 95.1048 19.4496 98.0618 18.8694 cv
98.0618 21.2909 li
78.5346 21.2909 mo
77.8063 21.2909 li
76.9289 21.2909 76.2225 20.579 76.2225 19.7071 cv
76.2225 17.9783 li
76.9927 18.1813 77.763 18.3674 78.5346 18.5365 cv
78.5346 21.2909 li
.129412 .2 .301961 rgb
f
80.1236 21.2909 mo
78.5346 21.2909 li
78.5346 18.5365 li
79.0639 18.6524 79.5936 18.7603 80.1236 18.8599 cv
80.1236 21.2909 li
.803922 .592157 .301961 rgb
f
99.651 21.2909 mo
98.0618 21.2909 li
98.0618 18.8694 li
98.5909 18.7656 99.1211 18.652 99.651 18.5286 cv
99.651 21.2909 li
f
63.0729 47.6693 mo
62.9587 47.6693 62.843 47.6456 62.7319 47.5956 cv
62.3154 47.4069 62.1311 46.9166 62.3197 46.5001 cv
69.2406 31.226 li
69.4292 30.8095 69.919 30.6251 70.3361 30.8138 cv
70.7526 31.0023 70.9369 31.4926 70.7483 31.9093 cv
63.8274 47.1834 li
63.6888 47.4888 63.3882 47.6693 63.0729 47.6693 cv
cp
.854902 .819608 .819608 rgb
f
64.8906 47.1503 mo
65.4935 48.567 64.8338 50.2042 63.4172 50.8072 cv
62.0006 51.4102 60.3633 50.7505 59.7603 49.3339 cv
59.1573 47.9171 59.817 46.2799 61.2338 45.677 cv
62.6504 45.0741 64.2877 45.7337 64.8906 47.1503 cv
cp
.243137 .192157 .172549 rgb
f
63.8479 47.5941 mo
64.2057 48.435 63.8142 49.4067 62.9735 49.7646 cv
62.1327 50.1225 61.1609 49.7309 60.803 48.8902 cv
60.4451 48.0493 60.8366 47.0776 61.6775 46.7196 cv
62.5183 46.3618 63.4901 46.7533 63.8479 47.5941 cv
cp
.854902 .819608 .819608 rgb
f
63.1691 47.883 mo
63.3674 48.3489 63.1506 48.8875 62.6845 49.0858 cv
62.2186 49.2841 61.6801 49.0671 61.4818 48.6012 cv
61.2835 48.1352 61.5004 47.5968 61.9663 47.3985 cv
62.4324 47.2002 62.9708 47.4171 63.1691 47.883 cv
cp
.243137 .192157 .172549 rgb
f
14.1316 8.74354 mo
12.1198 8.46883 li
13.1558 6.72257 li
24.7907 1.7895 li
25.2299 2.69928 li
14.1316 8.74354 li
cp
.133333 .223529 .352941 rgb
f
10.8761 10.0738 mo
12.1198 8.46883 li
13.1142 10.2391 li
11.5689 22.7819 li
10.5614 22.7073 li
10.8761 10.0738 li
cp
f
11.3518 6.58937 mo
12.1198 8.46883 li
10.0896 8.44493 li
0 .835269 li
.568214 0 li
11.3518 6.58937 li
cp
f
13.183 7.18417 mo
13.9412 7.69989 14.1378 8.73266 13.6221 9.49073 cv
13.1062 10.2489 12.0736 10.4454 11.3155 9.92964 cv
10.5573 9.41393 10.3608 8.38129 10.8765 7.62309 cv
11.3922 6.86502 12.425 6.66846 13.183 7.18417 cv
cp
.290196 .635294 .717647 rgb
f
12.7084 7.88195 mo
13.0811 8.13558 13.1778 8.64338 12.9242 9.0161 cv
12.6707 9.38882 12.1629 9.48549 11.7902 9.23186 cv
11.4174 8.97837 11.3208 8.47058 11.5744 8.09785 cv
11.8279 7.725 12.3357 7.62846 12.7084 7.88195 cv
cp
.976471 .713726 .34902 rgb
f
101.395 251.031 mo
100.834 251.27 li
99.3038 247.676 li
100.427 247.198 li
101.395 251.031 li
cp
.243137 .192157 .172549 rgb
f
102.139 250.884 mo
102.627 252.03 102.093 253.355 100.947 253.843 cv
99.8013 254.33 98.477 253.797 97.9893 252.651 cv
97.5015 251.505 98.0352 250.18 99.1811 249.693 cv
100.327 249.205 101.651 249.738 102.139 250.884 cv
cp
f
101.296 251.243 mo
101.585 251.924 101.269 252.71 100.588 252.999 cv
99.9082 253.289 99.1222 252.972 98.8327 252.292 cv
98.5432 251.612 98.8598 250.826 99.54 250.536 cv
100.22 250.247 101.006 250.563 101.296 251.243 cv
cp
.854902 .819608 .819608 rgb
f
100.747 251.477 mo
100.907 251.854 100.732 252.29 100.355 252.45 cv
99.9777 252.61 99.5422 252.435 99.3817 252.058 cv
99.2213 251.681 99.3968 251.245 99.7738 251.085 cv
100.151 250.925 100.586 251.1 100.747 251.477 cv
cp
.243137 .192157 .172549 rgb
f
101.289 248.71 mo
99.423 248.71 li
96.6991 241.808 li
98.9181 240.698 li
101.289 248.71 li
.854902 .819608 .819608 rgb
f
76.1977 199.533 mo
76.0598 199.525 75.9182 199.539 75.7724 199.578 cv
75.2514 199.718 74.9163 200.23 74.9163 200.769 cv
74.9163 213.736 li
77.276 213.736 li
77.276 200.777 li
77.276 200.152 76.8215 199.571 76.1977 199.533 cv
cp
.243137 .192157 .172549 rgb
f
78.89 213.736 mo
73.0512 213.736 li
73.0512 215.128 li
78.89 215.128 li
78.89 213.736 li
cp
0 0 0 rgb
f
78.1842 213.067 mo
73.9699 213.067 li
73.9699 213.736 li
78.1842 213.736 li
78.1842 213.067 li
cp
.380392 .309804 .286275 rgb
f
76.6957 212.105 mo
75.4583 212.105 li
75.4583 211.06 li
76.6957 211.06 li
76.6957 212.105 li
cp
f
74.4615 212.695 mo
72.9231 211.148 li
73.3777 210.972 li
74.9163 212.518 li
74.4615 212.695 li
cp
f
77.7207 212.7 mo
77.276 212.514 li
78.9314 210.967 li
79.3761 211.153 li
77.7207 212.7 li
cp
f
79.5889 210.725 mo
72.5652 210.725 li
72.5652 211.394 li
79.5889 211.394 li
79.5889 210.725 li
cp
0 0 0 rgb
f
77.2477 211.854 mo
74.9064 211.854 li
74.0567 211.854 73.3678 212.285 73.3678 212.816 cv
73.3678 213.067 li
78.7861 213.067 li
78.7861 212.816 li
78.7861 212.285 78.0973 211.854 77.2477 211.854 cv
cp
f
102.984 232.902 mo
102.984 236.513 li
102.984 236.807 102.965 237.102 102.922 237.39 cv
102.499 240.59 99.7529 243.06 96.4362 243.06 cv
66.1321 243.06 li
57.7024 243.06 54.9436 243.52 44.2884 241.172 cv
22.4999 237.39 li
19.4775 236.862 li
19.2507 236.826 li
20.0108 231.498 li
20.1395 230.597 li
48.3531 230.597 li
49.8184 230.597 51.1425 229.757 51.8229 228.457 cv
53.0492 226.115 54.7474 224.055 56.8011 222.412 cv
57.3162 221.996 57.8556 221.609 58.4197 221.254 cv
58.7017 221.07 58.9898 220.892 59.2841 220.726 cv
59.5722 220.561 59.8725 220.401 60.1731 220.248 cv
60.3202 220.175 60.4734 220.101 60.6267 220.027 cv
60.78 219.954 60.9333 219.886 61.0865 219.819 cv
61.1111 219.807 li
61.387 219.684 61.669 219.574 61.9509 219.464 cv
62.1348 219.396 62.3249 219.329 62.5149 219.261 cv
62.7908 219.169 63.0668 219.077 63.3487 218.998 cv
63.5571 218.93 63.7718 218.875 63.9863 218.82 cv
64.6362 218.654 65.2983 218.519 65.9789 218.427 cv
66.8678 218.299 67.7751 218.231 68.7009 218.231 cv
83.9786 218.231 li
86.9827 218.231 89.6189 219.255 92.0343 220.916 cv
96.0928 223.7 99.5077 228.279 102.898 232.785 cv
102.984 232.902 li
.976471 .713726 .34902 rgb
f
102.984 232.902 mo
102.984 234.361 li
88.5765 234.361 li
85.3641 234.361 82.7525 231.749 82.7525 228.537 cv
82.7525 218.231 li
83.9786 218.231 li
92.0772 218.231 100.015 225.683 102.984 232.902 cv
.768627 .27451 .270588 rgb
f
102.984 232.902 mo
102.984 233.135 li
88.5765 233.135 li
86.0384 233.135 83.9786 231.075 83.9786 228.537 cv
83.9786 218.231 li
88.313 218.231 li
96.4116 218.231 102.984 224.797 102.984 232.902 cv
.670588 .929412 .890196 rgb
f
85.4735 222.583 mo
83.6465 222.583 li
83.6465 223.749 li
85.4735 223.749 li
91.2609 223.749 96.0122 228.051 96.3739 233.467 cv
97.6 233.467 li
97.2383 227.404 91.9352 222.583 85.4735 222.583 cv
cp
.768627 .27451 .270588 rgb
f
19.3013 236.47 mo
19.2507 236.826 li
44.2884 241.172 li
54.9436 243.52 57.7024 243.06 66.1321 243.06 cv
96.4362 243.06 li
100.047 243.06 102.984 240.13 102.984 236.513 cv
102.984 236.47 li
19.3013 236.47 li
.854902 .819608 .819608 rgb
f
102.984 235.808 mo
102.984 236.513 li
102.984 236.807 102.965 237.102 102.922 237.39 cv
19.4775 237.39 li
19.4775 235.808 li
102.984 235.808 li
.768627 .27451 .270588 rgb
f
78.904 214.757 mo
73.2501 214.757 li
71.5663 214.757 70.2014 216.122 70.2014 217.806 cv
70.2014 218.231 li
81.9527 218.231 li
81.9527 217.806 li
81.9527 216.122 80.5877 214.757 78.904 214.757 cv
f
65.9789 218.427 mo
65.9789 232.356 li
65.9789 232.908 65.5313 233.356 64.9857 233.356 cv
64.4338 233.356 63.9863 232.908 63.9863 232.356 cv
63.9863 218.82 li
64.6362 218.654 65.2983 218.519 65.9789 218.427 cv
.839216 .6 .262745 rgb
f
78.8901 218.231 mo
78.8901 232.356 li
78.8901 232.908 78.4425 233.356 77.8908 233.356 cv
77.3451 233.356 76.8977 232.908 76.8977 232.356 cv
76.8977 218.231 li
78.8901 218.231 li
f
75.2771 222.119 mo
75.2771 222.316 75.1169 222.476 74.9194 222.476 cv
68.1756 222.476 li
67.9781 222.476 67.8181 222.316 67.8181 222.119 cv
67.8181 221.921 67.9781 221.761 68.1756 221.761 cv
74.9194 221.761 li
75.1169 221.761 75.2771 221.921 75.2771 222.119 cv
cp
.176471 .152941 .14902 rgb
f
75.2771 223.763 mo
75.2771 223.96 75.1169 224.12 74.9194 224.12 cv
68.1756 224.12 li
67.9781 224.12 67.8181 223.96 67.8181 223.763 cv
67.8181 223.565 67.9781 223.405 68.1756 223.405 cv
74.9194 223.405 li
75.1169 223.405 75.2771 223.565 75.2771 223.763 cv
cp
f
75.2771 225.407 mo
75.2771 225.604 75.1169 225.764 74.9194 225.764 cv
68.1756 225.764 li
67.9781 225.764 67.8181 225.604 67.8181 225.407 cv
67.8181 225.209 67.9781 225.049 68.1756 225.049 cv
74.9194 225.049 li
75.1169 225.049 75.2771 225.209 75.2771 225.407 cv
cp
f
75.2771 227.051 mo
75.2771 227.248 75.1169 227.408 74.9194 227.408 cv
68.1756 227.408 li
67.9781 227.408 67.8181 227.248 67.8181 227.051 cv
67.8181 226.853 67.9781 226.693 68.1756 226.693 cv
74.9194 226.693 li
75.1169 226.693 75.2771 226.853 75.2771 227.051 cv
cp
f
75.2771 228.695 mo
75.2771 228.892 75.1169 229.052 74.9194 229.052 cv
68.1756 229.052 li
67.9781 229.052 67.8181 228.892 67.8181 228.695 cv
67.8181 228.497 67.9781 228.337 68.1756 228.337 cv
74.9194 228.337 li
75.1169 228.337 75.2771 228.497 75.2771 228.695 cv
cp
f
75.2771 230.339 mo
75.2771 230.536 75.1169 230.696 74.9194 230.696 cv
68.1756 230.696 li
67.9781 230.696 67.8181 230.536 67.8181 230.339 cv
67.8181 230.141 67.9781 229.981 68.1756 229.981 cv
74.9194 229.981 li
75.1169 229.981 75.2771 230.141 75.2771 230.339 cv
cp
f
60.0597 243.097 mo
60.0597 243.097 li
60.0605 243.097 60.0614 243.097 60.0622 243.097 cv
60.0622 243.097 li
60.0614 243.097 60.0605 243.097 60.0597 243.097 cv
102.984 235.808 mo
26.8832 235.808 li
26.8833 235.796 26.8833 235.783 26.8833 235.771 cv
26.8833 234.373 li
26.8833 233.428 li
26.8833 232.792 li
26.8833 232.49 li
102.984 235.612 li
102.984 235.808 li
.894118 .654902 .329412 rgb
f
60.0597 243.097 mo
55.5244 243.097 51.9442 242.859 44.2884 241.172 cv
44.2884 241.172 li
26.3078 238.051 li
26.4222 237.84 26.5214 237.619 26.6037 237.39 cv
102.922 237.39 li
102.922 237.39 li
102.894 237.548 li
102.874 237.676 102.853 237.804 102.825 237.93 cv
102.76 238.186 li
102.73 238.298 102.703 238.41 102.668 238.519 cv
102.634 238.623 102.594 238.723 102.555 238.825 cv
102.456 239.087 li
102.377 239.272 102.291 239.453 102.195 239.629 cv
102.144 239.714 li
102.06 239.863 101.973 240.01 101.878 240.151 cv
101.767 240.304 li
101.686 240.418 101.604 240.531 101.516 240.64 cv
101.374 240.802 li
101.289 240.901 101.203 240.998 101.111 241.091 cv
100.945 241.251 li
100.854 241.338 100.763 241.422 100.668 241.503 cv
100.481 241.654 li
100.385 241.73 100.287 241.803 100.187 241.873 cv
99.9825 242.011 li
99.8812 242.076 99.7779 242.139 99.6728 242.199 cv
99.4534 242.319 li
99.3463 242.375 99.2371 242.427 99.1268 242.477 cv
98.8953 242.578 li
98.7817 242.624 98.6659 242.665 98.5492 242.705 cv
98.3121 242.784 li
98.1897 242.821 98.0647 242.85 97.9396 242.88 cv
97.7057 242.935 li
97.567 242.962 97.4255 242.981 97.2838 242.999 cv
97.0795 243.028 li
96.8677 243.049 96.6533 243.06 96.4362 243.06 cv
96.4362 243.06 li
66.1321 243.06 li
63.7602 243.06 61.8383 243.097 60.0622 243.097 cv
60.0614 243.097 60.0605 243.097 60.0597 243.097 cv
60.0597 243.097 li
.784314 .752941 .752941 rgb
f
102.922 237.39 mo
26.6037 237.39 li
26.7806 236.896 26.8791 236.365 26.8832 235.808 cv
102.984 235.808 li
102.984 236.513 li
102.984 236.513 li
102.984 236.706 102.972 236.899 102.955 237.09 cv
102.932 237.297 li
102.922 237.39 li
102.922 237.39 li
.709804 .262745 .258824 rgb
f
89.0853 218.251 mo
89.0848 218.251 li
89.0853 218.251 li
89.0391 218.249 mo
89.0381 218.249 89.0381 218.249 89.0372 218.249 cv
89.0377 218.249 89.0386 218.249 89.0391 218.249 cv
89.0159 218.248 mo
89.0149 218.248 89.0146 218.248 89.0136 218.248 cv
89.0141 218.248 89.0154 218.248 89.0159 218.248 cv
88.9925 218.247 mo
88.9915 218.247 88.9915 218.247 88.9906 218.247 cv
88.991 218.247 88.992 218.247 88.9925 218.247 cv
88.9691 218.246 mo
88.9687 218.246 88.9679 218.246 88.9675 218.246 cv
88.9679 218.246 88.9687 218.246 88.9691 218.246 cv
88.9461 218.245 mo
88.9452 218.245 88.9438 218.245 88.9428 218.244 cv
88.9438 218.245 88.9452 218.245 88.9461 218.245 cv
88.9229 218.244 mo
88.9219 218.244 88.9203 218.244 88.9193 218.243 cv
88.9203 218.244 88.9219 218.244 88.9229 218.244 cv
88.8996 218.243 mo
88.8986 218.243 88.8965 218.243 88.8956 218.243 cv
88.897 218.243 88.8982 218.243 88.8996 218.243 cv
88.8761 218.242 mo
88.8751 218.242 88.8738 218.242 88.8729 218.242 cv
88.8738 218.242 88.8751 218.242 88.8761 218.242 cv
88.8529 218.241 mo
88.8515 218.241 88.8497 218.241 88.8483 218.241 cv
88.8502 218.241 88.851 218.241 88.8529 218.241 cv
88.8298 218.24 mo
88.8279 218.24 88.8259 218.24 88.8239 218.24 cv
88.8259 218.24 88.8279 218.24 88.8298 218.24 cv
88.8064 218.239 mo
88.8045 218.239 88.8023 218.239 88.8004 218.239 cv
88.8028 218.239 88.804 218.239 88.8064 218.239 cv
88.7828 218.239 mo
88.7813 218.239 88.7802 218.238 88.7787 218.238 cv
88.7797 218.238 88.7818 218.239 88.7828 218.239 cv
88.7592 218.238 mo
88.7582 218.238 88.7567 218.238 88.7557 218.238 cv
88.7567 218.238 88.7582 218.238 88.7592 218.238 cv
88.736 218.237 mo
88.7345 218.237 88.7321 218.237 88.7306 218.237 cv
88.7321 218.237 88.7346 218.237 88.736 218.237 cv
88.713 218.237 mo
88.7101 218.236 88.7079 218.236 88.705 218.236 cv
88.7079 218.236 88.7101 218.236 88.713 218.237 cv
88.6893 218.236 mo
88.6869 218.236 88.6854 218.236 88.6829 218.236 cv
88.6849 218.236 88.6874 218.236 88.6893 218.236 cv
88.6661 218.235 mo
88.6631 218.235 88.6601 218.235 88.6571 218.235 cv
88.6605 218.235 88.6627 218.235 88.6661 218.235 cv
88.6428 218.235 mo
88.6393 218.235 88.6363 218.235 88.6329 218.235 cv
88.6363 218.235 88.6393 218.235 88.6428 218.235 cv
88.6193 218.234 mo
88.6159 218.234 88.6121 218.234 88.6087 218.234 cv
88.6126 218.234 88.6154 218.234 88.6193 218.234 cv
88.5958 218.234 mo
88.5928 218.234 88.5895 218.234 88.5866 218.234 cv
88.59 218.234 88.5923 218.234 88.5958 218.234 cv
88.5721 218.233 mo
88.5687 218.233 88.5652 218.233 88.5618 218.233 cv
88.5652 218.233 88.5687 218.233 88.5721 218.233 cv
88.5489 218.233 mo
88.545 218.233 88.5404 218.233 88.5364 218.233 cv
88.5408 218.233 88.5445 218.233 88.5489 218.233 cv
88.5253 218.233 mo
88.5214 218.233 88.5173 218.233 88.5133 218.233 cv
88.5177 218.233 88.521 218.233 88.5253 218.233 cv
88.5016 218.232 mo
88.4982 218.232 88.4948 218.232 88.4913 218.232 cv
88.4948 218.232 88.4982 218.232 88.5016 218.232 cv
88.4781 218.232 mo
88.4742 218.232 88.4714 218.232 88.4675 218.232 cv
88.4709 218.232 88.4747 218.232 88.4781 218.232 cv
88.4545 218.232 mo
88.4506 218.232 88.4472 218.232 88.4433 218.232 cv
88.4467 218.232 88.4511 218.232 88.4545 218.232 cv
88.431 218.232 mo
88.4276 218.232 88.4242 218.232 88.4207 218.232 cv
88.4241 218.232 88.4276 218.232 88.431 218.232 cv
88.4072 218.231 mo
88.4013 218.231 88.3958 218.231 88.3899 218.231 cv
88.3958 218.231 88.4013 218.231 88.4072 218.231 cv
88.3841 218.231 mo
88.3776 218.231 88.3707 218.231 88.3642 218.231 cv
88.3706 218.231 88.3777 218.231 88.3841 218.231 cv
88.3603 218.231 mo
88.3445 218.231 88.3288 218.231 88.313 218.231 cv
88.3287 218.231 88.3446 218.231 88.3603 218.231 cv
1 1 1 rgb
f
82.7525 220.359 mo
78.8901 220.359 li
78.8901 218.231 li
82.7525 218.231 li
82.7525 220.359 li
.980392 .772549 .478431 rgb
f
83.9786 220.359 mo
82.7525 220.359 li
82.7525 218.231 li
83.9786 218.231 li
83.9786 220.359 li
.815686 .419608 .415686 rgb
f
102.978 232.724 mo
102.046 227.047 97.7113 222.455 92.0343 220.916 cv
90.7039 220.555 89.2999 220.359 87.847 220.359 cv
83.9786 220.359 li
83.9786 218.231 li
88.313 218.231 li
88.313 218.231 li
88.3288 218.231 88.3445 218.231 88.3603 218.231 cv
88.3618 218.231 88.3628 218.231 88.3642 218.231 cv
88.3707 218.231 88.3776 218.231 88.3841 218.231 cv
88.386 218.231 88.388 218.231 88.3899 218.231 cv
88.3958 218.231 88.4013 218.231 88.4072 218.231 cv
88.4116 218.232 88.4163 218.232 88.4207 218.232 cv
88.4242 218.232 88.4276 218.232 88.431 218.232 cv
88.4354 218.232 88.4389 218.232 88.4433 218.232 cv
88.4472 218.232 88.4506 218.232 88.4545 218.232 cv
88.4589 218.232 88.4631 218.232 88.4675 218.232 cv
88.4714 218.232 88.4742 218.232 88.4781 218.232 cv
88.4825 218.232 88.4869 218.232 88.4913 218.232 cv
88.4948 218.232 88.4982 218.232 88.5016 218.232 cv
88.5056 218.232 88.5094 218.232 88.5133 218.233 cv
88.5173 218.233 88.5214 218.233 88.5253 218.233 cv
88.5288 218.233 88.533 218.233 88.5364 218.233 cv
88.5404 218.233 88.545 218.233 88.5489 218.233 cv
88.5528 218.233 88.5579 218.233 88.5618 218.233 cv
88.5652 218.233 88.5687 218.233 88.5721 218.233 cv
88.577 218.234 88.5817 218.234 88.5866 218.234 cv
88.5895 218.234 88.5928 218.234 88.5958 218.234 cv
88.5997 218.234 88.6048 218.234 88.6087 218.234 cv
88.6121 218.234 88.6159 218.234 88.6193 218.234 cv
88.6237 218.234 88.6285 218.235 88.6329 218.235 cv
88.6363 218.235 88.6393 218.235 88.6428 218.235 cv
88.6471 218.235 88.6527 218.235 88.6571 218.235 cv
88.6601 218.235 88.6631 218.235 88.6661 218.235 cv
88.6715 218.235 88.6776 218.236 88.6829 218.236 cv
88.6854 218.236 88.6869 218.236 88.6893 218.236 cv
88.6947 218.236 88.6996 218.236 88.705 218.236 cv
88.7079 218.236 88.7101 218.236 88.713 218.237 cv
88.7189 218.237 88.7248 218.237 88.7306 218.237 cv
88.7321 218.237 88.7345 218.237 88.736 218.237 cv
88.7428 218.237 88.7489 218.238 88.7557 218.238 cv
88.7567 218.238 88.7582 218.238 88.7592 218.238 cv
88.766 218.238 88.7719 218.238 88.7787 218.238 cv
88.7802 218.238 88.7813 218.239 88.7828 218.239 cv
88.7886 218.239 88.7945 218.239 88.8004 218.239 cv
88.8023 218.239 88.8045 218.239 88.8064 218.239 cv
88.8123 218.24 88.8181 218.24 88.8239 218.24 cv
88.8259 218.24 88.8279 218.24 88.8298 218.24 cv
88.8357 218.24 88.8424 218.241 88.8483 218.241 cv
88.8497 218.241 88.8515 218.241 88.8529 218.241 cv
88.8593 218.241 88.8665 218.241 88.8729 218.242 cv
88.8738 218.242 88.8751 218.242 88.8761 218.242 cv
88.8829 218.242 88.8888 218.242 88.8956 218.243 cv
88.8965 218.243 88.8986 218.243 88.8996 218.243 cv
88.9059 218.243 88.913 218.243 88.9193 218.243 cv
88.9203 218.244 88.9219 218.244 88.9229 218.244 cv
88.9297 218.244 88.936 218.244 88.9428 218.244 cv
88.9438 218.245 88.9452 218.245 88.9461 218.245 cv
88.9534 218.245 88.9602 218.245 88.9675 218.246 cv
88.9679 218.246 88.9687 218.246 88.9691 218.246 cv
88.9764 218.246 88.9833 218.246 88.9906 218.247 cv
88.9915 218.247 88.9915 218.247 88.9925 218.247 cv
88.9998 218.247 89.0063 218.247 89.0136 218.248 cv
89.0146 218.248 89.0149 218.248 89.0159 218.248 cv
89.0232 218.248 89.0299 218.248 89.0372 218.249 cv
89.0381 218.249 89.0381 218.249 89.0391 218.249 cv
89.0546 218.25 89.0693 218.25 89.0848 218.251 cv
89.0853 218.251 li
96.7649 218.65 102.889 224.958 102.978 232.724 cv
.737255 .945098 .913725 rgb
f
46.1582 232.203 mo
26.8833 231.683 li
26.8833 230.597 li
48.3531 230.597 li
49.8184 230.597 51.1425 229.757 51.8229 228.457 cv
53.0492 226.115 54.7474 224.055 56.8011 222.412 cv
56.795 222.431 li
57.3162 222.008 57.8618 221.615 58.4197 221.254 cv
58.7017 221.07 58.9898 220.892 59.2841 220.726 cv
59.5722 220.561 59.8725 220.401 60.1731 220.248 cv
60.3202 220.175 60.4734 220.101 60.6267 220.027 cv
60.78 219.954 60.9333 219.886 61.0865 219.819 cv
61.1111 219.807 li
61.387 219.684 61.669 219.574 61.9509 219.464 cv
62.1348 219.396 62.3249 219.329 62.5149 219.261 cv
62.7908 219.169 63.0668 219.077 63.3487 218.998 cv
63.5571 218.93 63.7718 218.875 63.9863 218.82 cv
63.9863 220.633 li
63.4629 220.717 62.9487 220.824 62.4414 220.947 cv
60.0749 221.523 58.6587 222.142 56.5498 224.092 cv
54.6493 225.864 52.7303 229.99 52.6813 230.07 cv
51.535 232.086 47.6847 232.203 46.1582 232.203 cv
65.9789 220.405 mo
65.9789 218.427 li
65.9789 218.427 li
66.8678 218.299 67.7751 218.231 68.7009 218.231 cv
76.8977 218.231 li
76.8977 220.359 li
67.3644 220.359 li
66.8992 220.359 66.4369 220.374 65.9789 220.405 cv
.980392 .772549 .478431 rgb
f
63.9863 220.633 mo
63.9863 218.82 li
63.9863 218.82 li
64.6362 218.654 65.2983 218.519 65.9789 218.427 cv
65.9789 220.405 li
65.4891 220.438 65.0042 220.488 64.5259 220.555 cv
64.3449 220.578 64.1651 220.604 63.9863 220.633 cv
.870588 .678431 .411765 rgb
f
78.8901 220.359 mo
76.8977 220.359 li
76.8977 218.231 li
78.8901 218.231 li
78.8901 220.359 li
f
6.81128 233.354 mo
6.81128 234.41 li
6.81128 236.813 8.59547 238.849 10.9864 239.155 cv
21.4822 240.522 li
24.3453 240.89 26.8833 238.659 26.8833 235.771 cv
26.8833 233.354 li
6.81128 233.354 li
.905882 .360784 .356863 rgb
f
21.4822 225.061 mo
10.9864 226.428 li
8.59547 226.734 6.81128 228.77 6.81128 231.173 cv
6.81128 233.354 li
26.8833 233.354 li
26.8833 229.812 li
26.8833 226.925 24.3453 224.693 21.4822 225.061 cv
.839216 .6 .262745 rgb
f
6.81128 234.41 mo
6.81128 236.813 8.59547 238.849 10.9864 239.155 cv
21.4822 240.522 li
24.3453 240.89 26.8833 238.659 26.8833 235.771 cv
26.8833 234.373 li
6.81128 234.373 li
6.81128 234.41 li
.854902 .819608 .819608 rgb
f
6.81128 234.373 mo
26.8833 234.373 li
26.8833 232.792 li
6.81128 232.792 li
6.81128 234.373 li
.768627 .27451 .270588 rgb
f
22.1008 240.562 mo
21.897 240.562 21.6903 240.549 21.4822 240.522 cv
10.9864 239.155 li
8.59547 238.849 6.81128 236.813 6.81128 234.41 cv
6.81128 234.373 li
26.8833 234.373 li
26.8833 235.771 li
26.8833 235.783 26.8833 235.796 26.8832 235.808 cv
26.8791 236.365 26.7806 236.896 26.6037 237.39 cv
26.5214 237.619 26.4222 237.84 26.3078 238.051 cv
26.3077 238.051 26.3078 238.051 26.3077 238.051 cv
25.4913 239.555 23.8957 240.562 22.1008 240.562 cv
.780392 .74902 .745098 rgb
f
22.7186 232.792 mo
6.81128 232.792 li
6.81128 231.173 li
6.81128 230.9 6.83739 230.632 6.88172 230.371 cv
22.7186 232.792 li
.764706 .54902 .247059 rgb
f
26.8833 234.373 mo
26.8833 234.373 li
6.81128 234.373 li
6.81128 233.354 li
6.81128 232.792 li
22.7186 232.792 li
26.8833 233.428 li
26.8833 234.373 li
.701961 .258824 .254902 rgb
f
10.9244 226.436 mo
10.9246 226.436 10.9245 226.436 10.9247 226.436 cv
10.9246 226.436 10.9246 226.436 10.9244 226.436 cv
10.9392 226.434 mo
10.9396 226.434 10.94 226.434 10.9404 226.434 cv
10.94 226.434 10.9396 226.434 10.9392 226.434 cv
10.9541 226.432 mo
10.9547 226.432 10.9553 226.432 10.956 226.432 cv
10.9554 226.432 10.9546 226.432 10.9541 226.432 cv
10.9688 226.43 mo
10.9696 226.43 10.9704 226.43 10.9713 226.43 cv
10.9704 226.43 10.9696 226.43 10.9688 226.43 cv
1 1 1 rgb
f
26.8012 228.959 mo
25.8618 227.637 24.2445 226.755 22.4128 226.755 cv
22.3304 226.755 22.2473 226.757 22.1641 226.76 cv
10.7188 227.276 li
9.60713 227.324 8.59334 227.696 7.77989 228.291 cv
8.52005 227.311 9.63017 226.619 10.9244 226.436 cv
10.9246 226.436 10.9246 226.436 10.9247 226.436 cv
10.9295 226.436 10.9344 226.435 10.9392 226.434 cv
10.9396 226.434 10.94 226.434 10.9404 226.434 cv
10.9449 226.433 10.9496 226.433 10.9541 226.432 cv
10.9546 226.432 10.9554 226.432 10.956 226.432 cv
10.9602 226.431 10.9645 226.431 10.9688 226.43 cv
10.9696 226.43 10.9704 226.43 10.9713 226.43 cv
10.9763 226.429 10.9814 226.429 10.9864 226.428 cv
21.4822 225.061 li
21.6903 225.034 21.8964 225.021 22.1001 225.021 cv
24.4155 225.021 26.3952 226.7 26.8012 228.959 cv
.870588 .678431 .411765 rgb
f
74.3363 211.377 mo
26.5541 211.213 li
26.5541 210.921 li
74.3363 210.776 li
74.3363 211.377 li
cp
.243137 .192157 .172549 rgb
f
77.8177 211.377 mo
125.6 211.213 li
125.6 210.921 li
77.8177 210.776 li
77.8177 211.377 li
cp
f
78.89 203.594 mo
73.0512 203.594 li
73.0512 204.986 li
78.89 204.986 li
78.89 203.594 li
cp
0 0 0 rgb
f
78.1842 202.925 mo
73.9699 202.925 li
73.9699 203.594 li
78.1842 203.594 li
78.1842 202.925 li
cp
.380392 .309804 .286275 rgb
f
76.6957 201.964 mo
75.4583 201.964 li
75.4583 200.918 li
76.6957 200.918 li
76.6957 201.964 li
cp
f
74.4615 202.554 mo
72.9231 201.007 li
73.3777 200.83 li
74.9163 202.377 li
74.4615 202.554 li
cp
f
77.7207 202.558 mo
77.276 202.372 li
78.9314 200.826 li
79.3761 201.011 li
77.7207 202.558 li
cp
f
79.5889 200.584 mo
72.5652 200.584 li
72.5652 201.253 li
79.5889 201.253 li
79.5889 200.584 li
cp
0 0 0 rgb
f
77.2477 201.713 mo
74.9064 201.713 li
74.0567 201.713 73.3678 202.143 73.3678 202.674 cv
73.3678 202.925 li
78.7861 202.925 li
78.7861 202.674 li
78.7861 202.143 78.0973 201.713 77.2477 201.713 cv
cp
f
74.3363 201.236 mo
26.5541 201.071 li
26.5541 200.78 li
74.3363 200.634 li
74.3363 201.236 li
cp
.243137 .192157 .172549 rgb
f
77.8177 201.236 mo
125.6 201.071 li
125.6 200.78 li
77.8177 200.634 li
77.8177 201.236 li
cp
f
51.3208 250.403 mo
51.1978 250.403 51.0731 250.378 50.9534 250.324 cv
50.5049 250.121 50.3064 249.593 50.5096 249.144 cv
56.4465 238.846 li
57.2426 237.236 61.9939 238.463 61.2306 240.98 cv
52.1332 249.88 li
51.9841 250.209 51.6604 250.403 51.3208 250.403 cv
cp
.854902 .819608 .819608 rgb
f
53.2784 249.844 mo
53.9277 251.37 53.2173 253.133 51.6915 253.783 cv
50.1658 254.432 48.4027 253.722 47.7532 252.196 cv
47.1039 250.67 47.8143 248.907 49.34 248.258 cv
50.8658 247.608 52.6289 248.319 53.2784 249.844 cv
cp
.243137 .192157 .172549 rgb
f
52.1554 250.322 mo
52.5409 251.228 52.1191 252.274 51.2136 252.66 cv
50.3082 253.045 49.2616 252.623 48.8762 251.718 cv
48.4907 250.812 48.9123 249.766 49.818 249.381 cv
50.7234 248.995 51.77 249.417 52.1554 250.322 cv
cp
.854902 .819608 .819608 rgb
f
51.4244 250.633 mo
51.6379 251.135 51.4043 251.715 50.9026 251.929 cv
50.4007 252.142 49.8208 251.909 49.6072 251.407 cv
49.3935 250.905 49.6273 250.325 50.129 250.111 cv
50.6309 249.898 51.2108 250.132 51.4244 250.633 cv
cp
.243137 .192157 .172549 rgb
f
366.303 211.648 mo
422.424 211.412 li
422.424 210.995 li
366.303 210.787 li
366.303 211.648 li
cp
.133333 .223529 .352941 rgb
f
362.215 211.648 mo
306.094 211.412 li
306.094 210.995 li
362.215 210.787 li
362.215 211.648 li
cp
f
363.786 214.286 mo
364.74 214.286 li
364.74 210.809 li
363.786 210.809 li
363.786 214.286 li
cp
f
366.034 214.307 mo
366.469 210.383 li
365.855 210.341 li
365.421 214.264 li
366.034 214.307 li
cp
.380392 .309804 .286275 rgb
f
362.492 214.307 mo
363.105 214.264 li
362.671 210.341 li
362.057 210.383 li
362.492 214.307 li
cp
f
366.034 214.307 mo
366.469 210.383 li
365.855 210.341 li
365.421 214.264 li
366.034 214.307 li
cp
.133333 .223529 .352941 rgb
f
362.492 214.307 mo
363.105 214.264 li
362.671 210.341 li
362.057 210.383 li
362.492 214.307 li
cp
f
362.218 211.777 mo
366.308 211.777 li
366.696 210.98 li
366.842 210.68 366.695 210.319 366.386 210.206 cv
364.971 209.689 363.545 209.636 362.124 210.192 cv
361.821 210.31 361.678 210.667 361.822 210.963 cv
362.218 211.777 li
cp
.290196 .635294 .717647 rgb
f
361.869 213.824 mo
366.649 213.824 li
367.24 213.824 367.72 214.303 367.72 214.894 cv
367.72 216.209 li
360.798 216.209 li
360.798 214.894 li
360.798 214.303 361.278 213.824 361.869 213.824 cv
.133333 .223529 .352941 rgb
f
349.406 220.346 mo
376.262 220.346 li
376.586 220.346 376.904 220.355 377.228 220.368 cv
377.145 220.145 li
377.101 220.029 377.051 219.916 377.002 219.802 cv
376.97 219.722 li
376.964 219.71 li
376.85 219.457 376.718 219.213 376.576 218.976 cv
376.57 218.966 li
376.441 218.754 376.306 218.547 376.158 218.351 cv
376.057 218.219 375.952 218.093 375.843 217.966 cv
375.738 217.84 375.625 217.722 375.507 217.604 cv
375.389 217.486 375.271 217.372 375.145 217.263 cv
375.105 217.228 li
375.005 217.141 374.9 217.058 374.795 216.975 cv
374.677 216.888 li
374.577 216.813 374.476 216.744 374.372 216.678 cv
373.987 216.425 373.581 216.211 373.149 216.036 cv
372.992 215.975 li
372.843 215.918 372.695 215.87 372.542 215.822 cv
372.42 215.787 372.293 215.752 372.171 215.722 cv
371.917 215.665 li
371.695 215.621 li
371.302 215.556 370.9 215.521 370.489 215.521 cv
356.136 215.521 li
354.904 215.521 353.743 215.835 352.734 216.39 cv
351.184 217.237 349.983 218.647 349.406 220.346 cv
.380392 .764706 .854902 rgb
f
377.146 220.145 mo
377.146 220.145 377.145 220.145 377.145 220.145 cv
377.145 220.145 li
377.118 220.073 377.088 220.002 377.058 219.931 cv
377.03 219.861 377 219.791 376.97 219.722 cv
376.97 219.722 li
376.964 219.709 li
376.859 219.478 376.74 219.254 376.612 219.037 cv
376.612 219.037 376.611 219.036 376.611 219.036 cv
376.613 219.036 li
376.82 219.388 377.001 219.758 377.146 220.145 cv
349.478 220.145 mo
349.478 220.145 li
349.512 220.056 349.547 219.967 349.584 219.879 cv
349.547 219.967 349.512 220.055 349.478 220.145 cv
349.586 219.874 mo
349.587 219.871 349.589 219.867 349.59 219.864 cv
349.589 219.868 349.587 219.871 349.586 219.874 cv
.898039 .898039 .898039 rgb
f
377.145 220.145 mo
377.145 220.145 li
377.14 220.145 li
377.114 220.073 377.086 220.002 377.058 219.931 cv
377.088 220.002 377.118 220.073 377.145 220.145 cv
377.145 220.145 li
375.029 220.145 mo
360.647 220.145 li
360.951 219.332 361.399 218.589 361.96 217.948 cv
373.868 218.832 li
374.306 219.22 374.696 219.661 375.029 220.145 cv
357.134 220.145 mo
355.526 220.145 li
355.888 219.177 356.454 218.308 357.172 217.592 cv
358.67 217.703 li
358.004 218.397 357.477 219.226 357.134 220.145 cv
352.013 220.145 mo
349.478 220.145 li
349.512 220.055 349.547 219.967 349.584 219.879 cv
349.584 219.877 349.585 219.876 349.586 219.874 cv
349.587 219.871 349.589 219.868 349.59 219.864 cv
350.034 218.816 350.721 217.897 351.581 217.177 cv
353.914 217.35 li
353.074 218.109 352.416 219.065 352.013 220.145 cv
376.964 219.709 mo
376.926 219.634 li
376.83 219.43 376.725 219.231 376.612 219.037 cv
376.74 219.254 376.859 219.478 376.964 219.709 cv
.341176 .686274 .768627 rgb
f
396.95 251.339 mo
396.742 251.08 396.393 250.986 396.17 251.129 cv
395.293 251.692 li
395.026 251.863 394.698 251.953 394.344 251.953 cv
390.882 251.953 li
390.052 245.638 li
388.958 245.506 li
389.805 251.953 li
363.139 251.953 li
364.173 245.78 li
363.082 245.364 li
361.979 251.953 li
354.651 251.953 li
354.356 251.953 354.178 252.193 354.253 252.488 cv
354.328 252.783 354.629 253.022 354.924 253.022 cv
394.617 253.022 li
395.151 253.022 395.646 252.886 396.048 252.628 cv
396.926 252.065 li
397.148 251.922 397.159 251.598 396.95 251.339 cv
.133333 .223529 .352941 rgb
f
363.009 246.023 mo
389.428 246.023 li
390.679 246.023 391.692 245.01 391.692 243.759 cv
391.692 242.748 li
360.745 242.748 li
360.745 243.759 li
360.745 245.01 361.759 246.023 363.009 246.023 cv
f
301.009 225.752 mo
301.009 230.844 li
353.594 235.215 li
352.865 224.154 li
343.813 224.434 li
322.201 225.097 li
320.297 225.158 li
301.009 225.752 li
.380392 .764706 .854902 rgb
f
358.67 215.52 mo
362.183 215.52 li
359.056 215.52 356.407 217.541 355.455 220.346 cv
351.941 220.346 li
352.893 217.541 355.543 215.52 358.67 215.52 cv
.976471 .713726 .34902 rgb
f
363.79 215.52 mo
367.304 215.52 li
364.177 215.52 361.527 217.541 360.575 220.346 cv
357.062 220.346 li
358.014 217.541 360.664 215.52 363.79 215.52 cv
1 1 1 rgb
f
343.734 223.779 mo
343.747 224.372 343.913 224.979 344.267 225.543 cv
344.546 225.997 li
346.21 228.678 li
347.184 230.246 li
348.315 232.062 li
348.507 232.372 li
349.136 233.39 li
349.206 233.503 li
350.459 235.517 li
351.454 237.124 li
351.498 237.193 li
354.354 241.8 359.389 244.604 364.813 244.604 cv
392.354 244.604 li
398.175 244.604 401.734 238.207 398.664 233.259 cv
398.594 233.145 li
397.612 231.56 li
393.394 224.761 386.097 220.516 378.153 220.171 cv
377.8 220.154 377.45 220.145 377.097 220.145 cv
347.267 220.145 li
345.162 220.145 343.681 221.901 343.734 223.779 cv
.290196 .635294 .717647 rgb
f
388.662 232.015 mo
396.415 232.611 li
396.957 232.653 397.446 232.95 397.732 233.411 cv
397.83 233.57 li
399.111 235.634 399.26 238.252 398.076 240.373 cv
396.902 242.476 394.763 243.731 392.354 243.731 cv
390.53 243.731 li
389.935 243.731 389.544 243.107 389.809 242.574 cv
391.305 239.563 390.421 235.385 388.214 232.911 cv
387.89 232.548 388.177 231.977 388.662 232.015 cv
.670588 .929412 .890196 rgb
f
379.853 221.191 mo
386.376 221.968 392.264 225.464 396.068 230.829 cv
396.32 231.184 396.043 231.673 395.61 231.64 cv
379.757 230.415 li
379.49 230.394 379.284 230.172 379.284 229.904 cv
379.284 221.702 li
379.284 221.397 379.55 221.155 379.853 221.191 cv
f
371.355 221.022 mo
372.84 221.03 376.137 221.047 377.615 221.056 cv
378.027 221.058 378.356 221.392 378.356 221.804 cv
378.356 229.499 li
378.356 229.935 377.985 230.278 377.551 230.245 cv
371.295 229.761 li
370.906 229.731 370.605 229.406 370.605 229.016 cv
370.605 221.77 li
370.605 221.355 370.941 221.02 371.355 221.022 cv
f
291.274 208.65 mo
298.264 208.65 li
299.389 208.65 300.427 209.253 300.985 210.23 cv
308.674 223.709 li
295.659 226.427 li
291.274 208.65 li
.290196 .635294 .717647 rgb
f
349.206 233.503 mo
350.459 235.517 li
351.454 237.124 li
357.324 237.748 362.455 240.556 365.773 244.604 cv
370.07 244.604 li
365.922 238.032 358.131 233.578 349.206 233.503 cv
.976471 .713726 .34902 rgb
f
346.21 228.678 mo
347.184 230.246 li
348.315 232.062 li
348.533 232.058 348.751 232.054 348.974 232.054 cv
359.07 232.054 367.856 237.15 372.254 244.604 cv
376.219 244.604 li
371.586 235.163 361.118 228.56 348.974 228.56 cv
348.044 228.56 347.123 228.599 346.21 228.678 cv
1 1 1 rgb
f
345.441 223.302 mo
345.441 224.236 346.199 224.994 347.134 224.994 cv
348.068 224.994 348.826 224.236 348.826 223.302 cv
348.826 222.367 348.068 221.609 347.134 221.609 cv
346.199 221.609 345.441 222.367 345.441 223.302 cv
cp
.133333 .223529 .352941 rgb
f
349.97 224.566 mo
349.97 224.701 350.079 224.81 350.213 224.81 cv
350.348 224.81 350.456 224.701 350.456 224.566 cv
350.456 222.037 li
350.456 221.902 350.348 221.793 350.213 221.793 cv
350.079 221.793 349.97 221.902 349.97 222.037 cv
349.97 224.566 li
cp
f
351.062 224.566 mo
351.062 224.701 351.171 224.81 351.305 224.81 cv
351.439 224.81 351.548 224.701 351.548 224.566 cv
351.548 222.037 li
351.548 221.902 351.439 221.793 351.305 221.793 cv
351.171 221.793 351.062 221.902 351.062 222.037 cv
351.062 224.566 li
cp
f
352.153 224.566 mo
352.153 224.701 352.262 224.81 352.397 224.81 cv
352.531 224.81 352.64 224.701 352.64 224.566 cv
352.64 222.037 li
352.64 221.902 352.531 221.793 352.397 221.793 cv
352.262 221.793 352.153 221.902 352.153 222.037 cv
352.153 224.566 li
cp
f
353.245 224.566 mo
353.245 224.701 353.354 224.81 353.488 224.81 cv
353.623 224.81 353.732 224.701 353.732 224.566 cv
353.732 222.037 li
353.732 221.902 353.623 221.793 353.488 221.793 cv
353.354 221.793 353.245 221.902 353.245 222.037 cv
353.245 224.566 li
cp
f
354.337 224.566 mo
354.337 224.701 354.446 224.81 354.58 224.81 cv
354.714 224.81 354.823 224.701 354.823 224.566 cv
354.823 222.037 li
354.823 221.902 354.714 221.793 354.58 221.793 cv
354.446 221.793 354.337 221.902 354.337 222.037 cv
354.337 224.566 li
cp
f
291.493 228.212 mo
291.493 233.282 295.603 237.392 300.674 237.392 cv
305.744 237.392 309.855 233.282 309.855 228.212 cv
309.855 223.141 305.744 219.031 300.674 219.031 cv
295.603 219.031 291.493 223.141 291.493 228.212 cv
.380392 .764706 .854902 rgb
f
294.694 228.211 mo
294.694 229.407 295.048 230.525 295.655 231.46 cv
295.852 231.761 296.074 232.049 296.323 232.311 cv
297.14 233.176 298.21 233.8 299.419 234.058 cv
299.769 234.132 300.127 234.176 300.494 234.185 cv
300.673 234.189 li
301.869 234.189 302.987 233.835 303.921 233.233 cv
304.227 233.032 304.511 232.809 304.773 232.56 cv
305.638 231.744 306.258 230.669 306.515 229.464 cv
306.594 229.115 306.638 228.757 306.646 228.39 cv
306.651 228.211 li
306.651 227.019 306.297 225.901 305.69 224.966 cv
305.498 224.661 305.275 224.377 305.022 224.115 cv
304.21 223.25 303.14 222.626 301.93 222.368 cv
301.581 222.289 301.223 222.246 300.852 222.237 cv
300.673 222.233 li
299.476 222.233 298.358 222.586 297.424 223.189 cv
297.122 223.386 296.839 223.613 296.576 223.857 cv
295.712 224.678 295.087 225.748 294.83 226.958 cv
294.751 227.307 294.707 227.665 294.699 228.032 cv
294.694 228.211 li
1 1 1 rgb
f
294.637 214.96 mo
294.637 216.551 295.927 217.841 297.518 217.841 cv
299.108 217.841 300.398 216.551 300.398 214.96 cv
300.398 213.369 299.108 212.08 297.518 212.08 cv
295.927 212.08 294.637 213.369 294.637 214.96 cv
.976471 .713726 .34902 rgb
f
377.621 238.131 mo
377.621 240.686 379.692 242.758 382.248 242.758 cv
384.804 242.758 386.875 240.686 386.875 238.131 cv
386.875 235.575 384.804 233.503 382.248 233.503 cv
379.692 233.503 377.621 235.575 377.621 238.131 cv
f
294.958 226.457 mo
298.671 228.191 li
298.733 228.221 li
299.301 228.485 li
299.703 228.407 li
299.707 228.404 li
300.673 228.211 li
300.12 227.4 li
300.118 227.396 li
299.886 227.051 li
299.29 226.843 li
299.232 226.821 li
299.229 226.817 li
295.363 225.457 li
295.198 225.777 295.064 226.115 294.958 226.457 cv
.133333 .223529 .352941 rgb
f
297.923 233.518 mo
298.243 233.683 298.579 233.823 298.925 233.927 cv
300.651 230.219 li
300.659 230.214 li
300.685 230.154 li
300.949 229.586 li
300.868 229.18 li
300.673 228.211 li
299.862 228.764 li
299.858 228.766 li
299.515 229.002 li
299.309 229.592 li
299.285 229.656 li
299.281 229.658 li
297.923 233.518 li
f
300.673 228.211 mo
301.227 229.025 li
301.463 229.369 li
302.053 229.575 li
302.056 229.579 li
302.12 229.603 li
302.123 229.6 li
305.982 230.964 li
306.148 230.638 306.285 230.304 306.389 229.958 cv
302.68 228.232 li
302.678 228.228 li
302.616 228.199 li
302.048 227.934 li
301.642 228.015 li
300.673 228.211 li
f
300.673 228.211 mo
301.487 227.656 li
301.832 227.424 li
302.04 226.828 li
302.044 226.826 li
302.064 226.764 li
303.424 222.907 li
303.106 222.737 302.772 222.6 302.422 222.498 cv
300.696 226.207 li
300.692 226.209 li
300.664 226.265 li
300.398 226.839 li
300.477 227.242 li
300.479 227.245 li
300.673 228.211 li
f
298.816 227.452 mo
298.396 228.478 298.888 229.65 299.915 230.069 cv
300.941 230.488 302.113 229.996 302.532 228.97 cv
302.951 227.944 302.459 226.772 301.433 226.353 cv
300.407 225.933 299.235 226.425 298.816 227.452 cv
.243137 .192157 .172549 rgb
f
299.76 227.838 mo
299.554 228.342 299.796 228.918 300.301 229.124 cv
300.805 229.331 301.381 229.089 301.587 228.584 cv
301.794 228.08 301.552 227.503 301.047 227.297 cv
300.543 227.091 299.966 227.333 299.76 227.838 cv
.854902 .819608 .819608 rgb
f
295.394 231.014 mo
299.241 229.615 li
299.309 229.592 li
299.895 229.378 li
300.125 229.031 li
300.129 229.029 li
300.673 228.211 li
299.704 228.029 li
299.297 227.95 li
298.733 228.221 li
298.67 228.252 li
294.976 230.016 li
295.081 230.358 295.22 230.691 295.394 231.014 cv
.133333 .223529 .352941 rgb
f
302.48 233.911 mo
302.82 233.803 303.153 233.663 303.476 233.489 cv
302.079 229.646 li
302.077 229.642 li
302.053 229.575 li
301.84 228.988 li
301.493 228.759 li
300.673 228.211 li
300.491 229.179 li
300.487 229.181 li
300.411 229.586 li
300.685 230.154 li
300.713 230.213 li
300.716 230.217 li
302.48 233.911 li
f
300.673 228.211 mo
301.643 228.397 li
302.048 228.472 li
302.616 228.199 li
302.681 228.172 li
306.369 226.406 li
306.264 226.063 306.125 225.73 305.951 225.408 cv
302.108 226.804 li
302.104 226.807 li
302.04 226.828 li
301.45 227.044 li
301.22 227.391 li
300.673 228.211 li
f
299.506 227.434 mo
299.855 227.667 li
300.673 228.211 li
300.86 227.244 li
300.938 226.833 li
300.635 226.206 li
298.871 222.512 li
298.529 222.617 298.196 222.756 297.869 222.933 cv
299.268 226.78 li
299.506 227.434 li
f
298.823 228.988 mo
299.252 230.01 300.429 230.491 301.451 230.062 cv
302.473 229.633 302.954 228.456 302.525 227.434 cv
302.095 226.412 300.919 225.931 299.897 226.36 cv
298.875 226.789 298.394 227.966 298.823 228.988 cv
.976471 .713726 .34902 rgb
f
299.764 228.593 mo
299.975 229.095 300.553 229.332 301.056 229.121 cv
301.559 228.91 301.795 228.331 301.584 227.829 cv
301.373 227.326 300.794 227.09 300.292 227.301 cv
299.789 227.512 299.553 228.09 299.764 228.593 cv
1 1 1 rgb
f
293.286 229.265 mo
308.061 229.265 li
308.061 227.158 li
293.286 227.158 li
293.286 229.265 li
.380392 .764706 .854902 rgb
f
300.089 228.456 mo
300.225 228.779 300.596 228.931 300.919 228.795 cv
301.242 228.66 301.394 228.288 301.258 227.965 cv
301.123 227.643 300.751 227.491 300.428 227.626 cv
300.106 227.762 299.954 228.133 300.089 228.456 cv
.133333 .223529 .352941 rgb
f
392.372 244.604 mo
392.374 244.604 392.376 244.604 392.378 244.604 cv
392.376 244.604 392.374 244.604 392.372 244.604 cv
392.39 244.604 mo
392.392 244.604 392.394 244.604 392.397 244.604 cv
392.394 244.604 392.392 244.604 392.39 244.604 cv
392.408 244.604 mo
392.41 244.604 392.412 244.604 392.414 244.604 cv
392.413 244.604 392.41 244.604 392.408 244.604 cv
392.426 244.604 mo
392.428 244.604 392.431 244.604 392.433 244.604 cv
392.431 244.604 392.428 244.604 392.426 244.604 cv
392.444 244.603 mo
392.446 244.603 392.449 244.603 392.451 244.603 cv
392.449 244.603 392.447 244.603 392.444 244.603 cv
392.462 244.603 mo
392.465 244.603 392.467 244.603 392.469 244.603 cv
392.467 244.603 392.465 244.603 392.462 244.603 cv
392.482 244.603 mo
392.483 244.603 392.485 244.603 392.486 244.603 cv
392.485 244.603 392.483 244.603 392.482 244.603 cv
392.5 244.603 mo
392.501 244.603 392.503 244.603 392.504 244.603 cv
392.503 244.603 392.502 244.603 392.5 244.603 cv
360.767 244.073 mo
356.961 243.056 353.625 240.625 351.498 237.193 cv
351.454 237.124 li
350.459 235.517 li
350.09 234.924 li
323.593 232.723 li
323.843 234.099 li
323.86 234.196 323.869 234.292 323.869 234.387 cv
323.869 234.292 323.86 234.196 323.843 234.099 cv
323.843 234.099 li
323.592 232.721 li
350.09 234.924 li
350.459 235.517 li
351.454 237.124 li
351.454 237.124 li
351.498 237.193 li
353.625 240.625 356.961 243.056 360.767 244.073 cv
360.767 244.073 li
.898039 .898039 .898039 rgb
f
350.09 234.924 mo
323.592 232.721 li
323.507 232.249 li
322.981 229.356 li
347.572 230.869 li
348.315 232.062 li
348.315 232.062 li
348.507 232.372 li
349.136 233.39 li
349.206 233.503 li
349.206 233.503 li
350.09 234.924 li
.341176 .686274 .768627 rgb
f
392.354 244.604 mo
391.529 244.604 li
376.219 244.604 li
375.445 243.027 374.508 241.529 373.428 240.128 cv
378.073 240.128 li
378.818 241.684 380.408 242.758 382.248 242.758 cv
384.089 242.758 385.678 241.684 386.423 240.128 cv
390.503 240.128 li
390.411 240.987 390.185 241.817 389.809 242.574 cv
389.544 243.107 389.935 243.731 390.53 243.731 cv
392.354 243.731 li
394.763 243.731 396.902 242.476 398.076 240.373 cv
398.121 240.292 398.164 240.21 398.206 240.128 cv
398.338 240.128 li
398.198 240.83 397.958 241.506 397.629 242.137 cv
397.52 242.351 397.389 242.556 397.258 242.757 cv
397.948 242.145 398.516 241.412 398.939 240.599 cv
399.02 240.445 399.095 240.288 399.165 240.128 cv
399.165 240.128 li
398.07 242.64 395.624 244.543 392.504 244.603 cv
392.503 244.603 392.501 244.603 392.5 244.603 cv
392.496 244.603 392.491 244.603 392.486 244.603 cv
392.485 244.603 392.483 244.603 392.482 244.603 cv
392.477 244.603 392.473 244.603 392.469 244.603 cv
392.467 244.603 392.465 244.603 392.462 244.603 cv
392.459 244.603 392.455 244.603 392.451 244.603 cv
392.449 244.603 392.446 244.603 392.444 244.603 cv
392.441 244.603 392.437 244.604 392.433 244.604 cv
392.431 244.604 392.428 244.604 392.426 244.604 cv
392.422 244.604 392.418 244.604 392.414 244.604 cv
392.412 244.604 392.41 244.604 392.408 244.604 cv
392.404 244.604 392.4 244.604 392.397 244.604 cv
392.394 244.604 392.392 244.604 392.39 244.604 cv
392.386 244.604 392.382 244.604 392.378 244.604 cv
392.376 244.604 392.374 244.604 392.372 244.604 cv
392.366 244.604 392.36 244.604 392.354 244.604 cv
392.354 244.604 li
372.254 244.604 mo
370.07 244.604 li
369.038 242.969 367.78 241.465 366.336 240.127 cv
366.395 240.127 366.454 240.128 366.514 240.128 cv
368.818 240.128 li
370.147 241.491 371.303 242.992 372.254 244.604 cv
365.773 244.604 mo
364.813 244.604 li
363.429 244.604 362.07 244.421 360.767 244.073 cv
356.961 243.056 353.625 240.625 351.498 237.193 cv
351.454 237.124 li
357.324 237.748 362.455 240.556 365.773 244.604 cv
355.978 234.433 mo
353.83 233.847 351.557 233.523 349.206 233.503 cv
349.206 233.503 li
349.136 233.39 li
348.507 232.372 li
348.315 232.062 li
348.533 232.058 348.751 232.054 348.974 232.054 cv
350.369 232.054 351.739 232.151 353.076 232.338 cv
354.131 232.894 355.11 233.598 355.978 234.433 cv
.258824 .568627 .643137 rgb
f
392.354 243.731 mo
390.53 243.731 li
389.935 243.731 389.544 243.107 389.809 242.574 cv
390.185 241.817 390.411 240.987 390.503 240.128 cv
398.206 240.128 li
398.164 240.21 398.121 240.292 398.076 240.373 cv
396.902 242.476 394.763 243.731 392.354 243.731 cv
.603922 .835294 .8 rgb
f
370.07 244.604 mo
365.773 244.604 li
365.773 244.604 li
362.455 240.556 357.324 237.748 351.454 237.124 cv
351.454 237.124 li
350.459 235.517 li
350.09 234.924 li
349.206 233.503 li
349.206 233.503 li
351.557 233.523 353.83 233.847 355.978 234.433 cv
356.348 234.788 356.698 235.168 357.026 235.57 cv
357.099 235.658 li
359.369 238.441 362.751 240.074 366.336 240.127 cv
367.78 241.465 369.038 242.969 370.07 244.604 cv
370.07 244.604 li
.878431 .639216 .313725 rgb
f
376.219 244.604 mo
372.254 244.604 li
372.254 244.604 li
371.303 242.992 370.147 241.491 368.818 240.128 cv
373.428 240.128 li
374.508 241.529 375.445 243.027 376.219 244.604 cv
376.219 244.604 li
353.076 232.338 mo
351.739 232.151 350.369 232.054 348.974 232.054 cv
348.751 232.054 348.533 232.058 348.315 232.062 cv
348.315 232.062 li
347.572 230.869 li
347.902 230.889 li
349.73 231.002 351.49 231.503 353.076 232.338 cv
.898039 .898039 .898039 rgb
f
382.248 242.758 mo
380.408 242.758 378.818 241.684 378.073 240.128 cv
386.423 240.128 li
385.678 241.684 384.089 242.758 382.248 242.758 cv
.878431 .639216 .313725 rgb
f
300.674 237.392 mo
295.603 237.392 291.493 233.282 291.493 228.212 cv
291.493 228.183 291.493 228.154 291.493 228.126 cv
291.493 228.154 291.493 228.183 291.493 228.212 cv
291.493 233.282 295.603 237.392 300.674 237.392 cv
300.683 237.392 300.691 237.392 300.7 237.392 cv
300.691 237.392 300.683 237.392 300.674 237.392 cv
300.709 237.392 mo
300.715 237.392 300.721 237.392 300.727 237.392 cv
300.721 237.392 300.715 237.392 300.709 237.392 cv
300.737 237.392 mo
300.744 237.392 300.751 237.392 300.758 237.392 cv
300.751 237.392 300.744 237.392 300.737 237.392 cv
300.764 237.392 mo
300.772 237.392 300.781 237.392 300.79 237.392 cv
300.781 237.392 300.773 237.392 300.764 237.392 cv
300.799 237.392 mo
300.805 237.392 300.811 237.391 300.817 237.391 cv
300.811 237.391 300.805 237.392 300.799 237.392 cv
300.827 237.391 mo
300.833 237.391 300.838 237.391 300.843 237.391 cv
300.838 237.391 300.833 237.391 300.827 237.391 cv
300.855 237.391 mo
300.862 237.391 300.869 237.39 300.876 237.39 cv
300.869 237.39 300.862 237.391 300.855 237.391 cv
300.893 237.39 mo
300.897 237.39 300.9 237.39 300.904 237.39 cv
300.9 237.39 300.897 237.39 300.893 237.39 cv
300.92 237.389 mo
300.923 237.389 300.926 237.389 300.929 237.389 cv
300.926 237.389 300.923 237.389 300.92 237.389 cv
300.946 237.389 mo
300.948 237.388 300.949 237.388 300.951 237.388 cv
300.949 237.388 300.948 237.388 300.946 237.389 cv
301.014 237.386 mo
301.015 237.386 301.015 237.386 301.015 237.386 cv
301.015 237.386 301.015 237.386 301.014 237.386 cv
317.949 232.254 mo
309.237 231.53 li
309.237 231.529 309.237 231.529 309.237 231.528 cv
317.949 232.252 li
317.949 232.254 li
.898039 .898039 .898039 rgb
f
317.949 232.252 mo
309.237 231.528 li
309.598 230.598 309.811 229.596 309.849 228.548 cv
317.933 229.045 li
317.945 231.481 li
317.945 231.481 li
317.949 232.252 li
.341176 .686274 .768627 rgb
f
300.674 237.392 mo
295.603 237.392 291.493 233.282 291.493 228.212 cv
291.493 228.183 291.493 228.154 291.493 228.126 cv
291.496 227.888 291.51 227.654 291.53 227.421 cv
293.286 227.529 li
293.286 229.265 li
294.787 229.265 li
294.93 230.063 295.23 230.806 295.655 231.46 cv
295.852 231.761 296.074 232.049 296.323 232.311 cv
297.14 233.176 298.21 233.8 299.419 234.058 cv
299.769 234.132 300.127 234.176 300.494 234.185 cv
300.673 234.189 li
301.302 234.189 301.909 234.091 302.48 233.911 cv
302.48 233.911 li
302.529 233.895 302.579 233.879 302.628 233.862 cv
303.087 233.703 303.521 233.491 303.921 233.233 cv
304.227 233.032 304.511 232.809 304.773 232.56 cv
305.259 232.101 305.667 231.561 305.978 230.963 cv
305.982 230.964 li
306.148 230.638 306.285 230.304 306.389 229.958 cv
306.388 229.958 li
306.437 229.796 306.48 229.631 306.515 229.464 cv
306.53 229.398 306.544 229.332 306.556 229.265 cv
308.061 229.265 li
308.061 228.438 li
309.849 228.548 li
309.811 229.596 309.598 230.598 309.237 231.528 cv
309.237 231.529 309.237 231.529 309.237 231.53 cv
309.227 231.529 li
307.935 234.857 304.766 237.249 301.015 237.386 cv
301.015 237.386 301.015 237.386 301.014 237.386 cv
300.993 237.387 300.972 237.388 300.951 237.388 cv
300.949 237.388 300.948 237.388 300.946 237.389 cv
300.94 237.389 300.935 237.389 300.929 237.389 cv
300.926 237.389 300.923 237.389 300.92 237.389 cv
300.915 237.389 300.91 237.389 300.904 237.39 cv
300.9 237.39 300.897 237.39 300.893 237.39 cv
300.887 237.39 300.881 237.39 300.876 237.39 cv
300.869 237.39 300.862 237.391 300.855 237.391 cv
300.851 237.391 300.847 237.391 300.843 237.391 cv
300.838 237.391 300.833 237.391 300.827 237.391 cv
300.824 237.391 300.82 237.391 300.817 237.391 cv
300.811 237.391 300.805 237.392 300.799 237.392 cv
300.796 237.392 300.793 237.392 300.79 237.392 cv
300.781 237.392 300.772 237.392 300.764 237.392 cv
300.762 237.392 300.759 237.392 300.758 237.392 cv
300.751 237.392 300.744 237.392 300.737 237.392 cv
300.734 237.392 300.731 237.392 300.727 237.392 cv
300.721 237.392 300.715 237.392 300.709 237.392 cv
300.706 237.392 300.703 237.392 300.7 237.392 cv
300.691 237.392 300.683 237.392 300.674 237.392 cv
f
300.673 234.189 mo
300.494 234.185 li
300.127 234.176 299.769 234.132 299.419 234.058 cv
298.21 233.8 297.14 233.176 296.323 232.311 cv
296.074 232.049 295.852 231.761 295.655 231.46 cv
295.23 230.806 294.93 230.063 294.787 229.265 cv
296.548 229.265 li
294.976 230.016 li
295.081 230.358 295.22 230.691 295.394 231.014 cv
299.239 229.616 li
299.253 229.63 299.267 229.644 299.281 229.657 cv
299.281 229.658 li
297.923 233.518 li
298.243 233.683 298.579 233.823 298.925 233.927 cv
300.651 230.219 li
300.651 230.219 li
300.659 230.219 300.667 230.219 300.675 230.219 cv
300.689 230.219 300.702 230.219 300.716 230.218 cv
302.48 233.911 li
301.909 234.091 301.302 234.189 300.673 234.189 cv
302.628 233.862 mo
302.917 233.761 303.2 233.638 303.476 233.489 cv
302.079 229.646 li
302.079 229.645 li
302.079 229.645 302.079 229.645 302.079 229.645 cv
302.08 229.644 302.081 229.643 302.082 229.642 cv
302.083 229.641 302.084 229.64 302.085 229.639 cv
302.098 229.626 302.111 229.614 302.123 229.601 cv
302.123 229.6 li
305.978 230.963 li
305.667 231.561 305.259 232.101 304.773 232.56 cv
304.511 232.809 304.227 233.032 303.921 233.233 cv
303.521 233.491 303.087 233.703 302.628 233.862 cv
306.388 229.958 mo
304.9 229.265 li
306.556 229.265 li
306.544 229.332 306.53 229.398 306.515 229.464 cv
306.48 229.631 306.437 229.796 306.388 229.958 cv
.898039 .898039 .898039 rgb
f
298.925 233.927 mo
298.579 233.823 298.243 233.683 297.923 233.518 cv
299.281 229.658 li
299.281 229.657 li
299.3 229.676 299.32 229.693 299.339 229.711 cv
299.34 229.712 299.341 229.712 299.341 229.713 cv
299.343 229.714 299.345 229.716 299.346 229.717 cv
299.451 229.809 299.566 229.891 299.692 229.962 cv
299.692 229.962 299.692 229.962 299.692 229.962 cv
299.694 229.963 299.696 229.964 299.698 229.965 cv
299.701 229.966 299.703 229.968 299.706 229.97 cv
299.706 229.97 299.706 229.97 299.706 229.97 cv
299.853 230.05 300.01 230.113 300.172 230.155 cv
300.173 230.155 300.175 230.155 300.176 230.156 cv
300.178 230.156 300.179 230.156 300.181 230.157 cv
300.294 230.186 300.408 230.204 300.522 230.213 cv
300.525 230.213 300.527 230.213 300.53 230.213 cv
300.531 230.213 300.531 230.214 300.532 230.214 cv
300.571 230.216 300.611 230.218 300.651 230.219 cv
300.651 230.219 li
298.925 233.927 li
.121569 .2 .317647 rgb
f
305.982 230.964 mo
305.978 230.963 li
302.123 229.6 li
302.123 229.601 li
302.22 229.5 302.307 229.388 302.382 229.265 cv
304.9 229.265 li
306.388 229.958 li
306.389 229.958 li
306.285 230.304 306.148 230.638 305.982 230.964 cv
f
300.532 230.214 mo
300.531 230.214 300.531 230.213 300.53 230.213 cv
300.531 230.213 300.531 230.214 300.532 230.214 cv
300.522 230.213 mo
300.408 230.204 300.294 230.186 300.181 230.157 cv
300.293 230.185 300.407 230.204 300.522 230.213 cv
300.176 230.156 mo
300.175 230.155 300.173 230.155 300.172 230.155 cv
300.173 230.155 300.175 230.155 300.176 230.156 cv
299.706 229.97 mo
299.706 229.97 299.706 229.97 299.706 229.97 cv
299.706 229.97 299.706 229.97 299.706 229.97 cv
299.698 229.965 mo
299.696 229.964 299.694 229.963 299.692 229.962 cv
299.694 229.963 299.696 229.964 299.698 229.965 cv
299.692 229.962 mo
299.566 229.891 299.451 229.809 299.346 229.717 cv
299.453 229.811 299.569 229.893 299.692 229.962 cv
299.341 229.713 mo
299.341 229.712 299.34 229.712 299.339 229.711 cv
299.34 229.712 299.341 229.712 299.341 229.713 cv
302.079 229.645 mo
302.08 229.644 302.081 229.643 302.082 229.642 cv
302.081 229.643 302.08 229.644 302.079 229.645 cv
302.085 229.639 mo
302.2 229.526 302.299 229.4 302.382 229.265 cv
302.382 229.265 li
302.307 229.388 302.22 229.5 302.123 229.601 cv
302.111 229.614 302.098 229.626 302.085 229.639 cv
.219608 .172549 .156863 rgb
f
295.394 231.014 mo
295.22 230.691 295.081 230.358 294.976 230.016 cv
296.548 229.265 li
298.965 229.265 li
299.045 229.394 299.137 229.511 299.239 229.616 cv
295.394 231.014 li
.121569 .2 .317647 rgb
f
302.48 233.911 mo
302.48 233.911 li
300.716 230.218 li
300.962 230.213 301.211 230.163 301.451 230.062 cv
301.692 229.961 301.903 229.818 302.079 229.645 cv
302.079 229.646 li
303.476 233.489 li
303.2 233.638 302.917 233.761 302.628 233.862 cv
302.579 233.879 302.529 233.895 302.48 233.911 cv
f
300.675 230.219 mo
300.667 230.219 300.659 230.219 300.651 230.219 cv
300.611 230.218 300.571 230.216 300.532 230.214 cv
300.531 230.214 300.531 230.213 300.53 230.213 cv
300.527 230.213 300.525 230.213 300.522 230.213 cv
300.407 230.204 300.293 230.185 300.181 230.157 cv
300.179 230.156 300.178 230.156 300.176 230.156 cv
300.175 230.155 300.173 230.155 300.172 230.155 cv
300.01 230.113 299.853 230.05 299.706 229.97 cv
299.706 229.97 299.706 229.97 299.706 229.97 cv
299.703 229.968 299.701 229.966 299.698 229.965 cv
299.696 229.964 299.694 229.963 299.692 229.962 cv
299.692 229.962 299.692 229.962 299.692 229.962 cv
299.569 229.893 299.453 229.811 299.346 229.717 cv
299.345 229.716 299.343 229.714 299.341 229.713 cv
299.341 229.712 299.34 229.712 299.339 229.711 cv
299.32 229.693 299.3 229.676 299.281 229.657 cv
299.267 229.644 299.253 229.63 299.239 229.616 cv
299.137 229.511 299.045 229.394 298.965 229.265 cv
302.382 229.265 li
302.299 229.4 302.2 229.526 302.085 229.639 cv
302.084 229.64 302.083 229.641 302.082 229.642 cv
302.081 229.643 302.08 229.644 302.079 229.645 cv
302.079 229.645 302.079 229.645 302.079 229.645 cv
301.903 229.818 301.692 229.961 301.451 230.062 cv
301.211 230.163 300.962 230.213 300.716 230.218 cv
300.702 230.219 300.689 230.219 300.675 230.219 cv
.878431 .639216 .313725 rgb
f
308.061 229.265 mo
306.556 229.265 li
304.9 229.265 li
302.382 229.265 li
302.382 229.265 li
298.965 229.265 li
296.548 229.265 li
294.787 229.265 li
293.286 229.265 li
293.286 227.529 li
300.097 227.948 li
300.026 228.103 300.018 228.287 300.089 228.456 cv
300.191 228.699 300.426 228.845 300.674 228.845 cv
300.756 228.845 300.839 228.829 300.919 228.795 cv
301.224 228.668 301.376 228.33 301.279 228.021 cv
308.061 228.438 li
308.061 229.265 li
.341176 .686274 .768627 rgb
f
300.674 228.845 mo
300.426 228.845 300.191 228.699 300.089 228.456 cv
300.018 228.287 300.026 228.103 300.097 227.948 cv
301.279 228.021 li
301.376 228.33 301.224 228.668 300.919 228.795 cv
300.839 228.829 300.756 228.845 300.674 228.845 cv
.121569 .2 .317647 rgb
f
360.747 253.022 mo
354.924 253.022 li
354.856 253.022 354.788 253.01 354.722 252.986 cv
354.788 253.01 354.856 253.022 354.924 253.022 cv
360.747 253.022 li
354.236 252.354 mo
354.236 252.145 354.373 251.985 354.584 251.958 cv
354.373 251.985 354.236 252.145 354.236 252.354 cv
1 1 1 rgb
f
360.747 253.022 mo
354.924 253.022 li
354.856 253.022 354.788 253.01 354.722 252.986 cv
354.502 252.909 354.311 252.715 354.253 252.488 cv
354.241 252.442 354.236 252.397 354.236 252.354 cv
354.236 252.145 354.373 251.985 354.584 251.958 cv
354.606 251.955 354.628 251.953 354.651 251.953 cv
360.926 251.953 li
360.747 253.022 li
.396078 .458824 .54902 rgb
f
293.099 223.054 mo
293.128 223.013 li
293.13 223.023 li
293.099 223.054 li
.568627 .835294 .898039 rgb
f
310.256 225.468 mo
317.913 225.225 li
317.913 225.232 li
310.256 225.468 li
291.653 210.189 mo
291.653 210.189 li
291.274 208.65 li
291.653 210.189 li
1 1 1 rgb
f
309.773 226.98 mo
309.704 226.47 309.594 225.973 309.446 225.493 cv
310.256 225.468 li
317.913 225.232 li
317.92 226.723 li
309.773 226.98 li
.568627 .835294 .898039 rgb
f
308.546 223.485 mo
307.545 221.821 306.031 220.5 304.223 219.742 cv
299.675 211.769 li
299.117 210.792 298.079 210.189 296.954 210.189 cv
291.653 210.189 li
291.274 208.65 li
298.264 208.65 li
299.389 208.65 300.427 209.253 300.985 210.23 cv
308.546 223.485 li
.505882 .745098 .803922 rgb
f
308.135 227.032 mo
307.941 226.404 307.677 225.809 307.36 225.247 cv
307.364 225.247 li
304.223 219.742 li
306.031 220.5 307.545 221.821 308.546 223.485 cv
308.674 223.709 li
308.67 223.709 li
308.987 224.271 309.251 224.866 309.445 225.493 cv
309.446 225.493 li
309.594 225.973 309.704 226.47 309.773 226.98 cv
308.135 227.032 li
.568627 .835294 .898039 rgb
f
388.433 253.022 mo
361.908 253.022 li
362.822 247.561 li
363.874 247.561 li
363.139 251.953 li
388.293 251.953 li
388.433 253.022 li
.396078 .458824 .54902 rgb
f
396.042 252.632 mo
396.044 252.631 396.046 252.629 396.048 252.628 cv
396.926 252.065 li
397.042 251.99 397.1 251.866 397.1 251.727 cv
397.1 251.866 397.042 251.99 396.926 252.065 cv
396.048 252.628 li
396.046 252.629 396.044 252.631 396.042 252.632 cv
390.882 251.953 mo
390.882 251.953 li
390.14 246.303 li
390.14 246.303 390.14 246.303 390.14 246.303 cv
390.882 251.953 li
389.805 251.953 mo
389.805 251.953 li
389.191 247.278 li
389.191 247.278 li
389.805 251.953 li
396.935 251.321 mo
396.932 251.318 396.93 251.315 396.927 251.312 cv
396.93 251.315 396.932 251.318 396.935 251.321 cv
396.924 251.308 mo
396.923 251.307 396.922 251.306 396.921 251.305 cv
396.922 251.306 396.923 251.307 396.924 251.308 cv
396.914 251.297 mo
396.775 251.148 396.588 251.064 396.416 251.062 cv
396.588 251.064 396.775 251.148 396.914 251.297 cv
396.17 251.129 mo
396.173 251.127 396.176 251.126 396.178 251.124 cv
396.176 251.126 396.173 251.127 396.17 251.129 cv
396.407 251.062 mo
396.409 251.062 396.41 251.062 396.411 251.062 cv
396.411 251.062 li
396.41 251.062 396.409 251.062 396.407 251.062 cv
1 1 1 rgb
f
394.307 253.022 mo
389.51 253.022 li
389.37 251.953 li
389.805 251.953 li
389.191 247.278 li
389.6 247.058 389.932 246.719 390.14 246.303 cv
390.882 251.953 li
390.882 251.953 li
394.344 251.953 li
394.698 251.953 395.026 251.863 395.293 251.692 cv
396.17 251.129 li
396.17 251.129 li
396.173 251.127 396.176 251.126 396.178 251.124 cv
396.246 251.083 396.325 251.063 396.407 251.062 cv
396.409 251.062 396.41 251.062 396.411 251.062 cv
396.413 251.062 396.414 251.062 396.416 251.062 cv
396.588 251.064 396.775 251.148 396.914 251.297 cv
396.916 251.3 396.919 251.302 396.921 251.305 cv
396.922 251.306 396.923 251.307 396.924 251.308 cv
396.925 251.309 396.926 251.311 396.927 251.312 cv
396.93 251.315 396.932 251.318 396.935 251.321 cv
396.94 251.327 396.945 251.333 396.95 251.339 cv
397.05 251.462 397.099 251.6 397.1 251.727 cv
397.1 251.866 397.042 251.99 396.926 252.065 cv
396.048 252.628 li
396.046 252.629 396.044 252.631 396.042 252.632 cv
395.906 252.718 395.757 252.785 395.603 252.844 cv
395.461 252.69 395.27 252.602 395.096 252.602 cv
395.011 252.602 394.93 252.623 394.86 252.667 cv
394.307 253.022 li
.396078 .458824 .54902 rgb
f
322.479 226.596 mo
322.241 225.285 li
322.231 225.221 322.219 225.159 322.206 225.097 cv
343.812 224.434 li
343.894 224.811 344.042 225.186 344.267 225.543 cv
344.267 225.543 li
344.546 225.997 li
322.479 226.596 li
.568627 .835294 .898039 rgb
f
344.267 225.543 mo
344.042 225.186 343.894 224.811 343.812 224.434 cv
343.813 224.434 li
343.895 224.809 344.044 225.185 344.267 225.543 cv
.505882 .745098 .803922 rgb
f
399.342 234.643 mo
399.342 234.642 399.342 234.642 399.342 234.642 cv
399.342 234.642 399.342 234.642 399.342 234.643 cv
399.338 234.631 mo
399.337 234.629 399.336 234.627 399.336 234.625 cv
399.336 234.627 399.337 234.629 399.338 234.631 cv
399.333 234.618 mo
399.332 234.615 399.33 234.611 399.329 234.607 cv
399.33 234.611 399.332 234.615 399.333 234.618 cv
399.328 234.606 mo
399.157 234.149 398.937 233.698 398.664 233.259 cv
398.937 233.698 399.157 234.149 399.328 234.606 cv
378.153 220.171 mo
377.816 220.155 377.483 220.146 377.146 220.145 cv
377.146 220.145 377.146 220.145 377.146 220.145 cv
377.486 220.145 377.813 220.154 378.153 220.171 cv
376.611 219.036 mo
376.611 219.036 li
376.599 219.016 376.588 218.996 376.576 218.976 cv
376.57 218.966 li
376.512 218.871 376.454 218.778 376.393 218.685 cv
376.469 218.8 376.542 218.917 376.611 219.036 cv
1 1 1 rgb
f
376.611 219.036 mo
373.868 218.832 li
372.619 217.728 370.981 217.058 369.18 217.058 cv
363.215 216.816 li
364.345 216.018 365.717 215.542 367.2 215.521 cv
370.489 215.521 li
370.9 215.521 371.302 215.556 371.695 215.621 cv
371.917 215.665 li
372.171 215.722 li
372.293 215.752 372.42 215.787 372.542 215.822 cv
372.695 215.87 372.843 215.918 372.992 215.975 cv
373.149 216.036 li
373.581 216.211 373.987 216.425 374.372 216.678 cv
374.476 216.744 374.577 216.813 374.677 216.888 cv
374.795 216.975 li
374.9 217.058 375.005 217.141 375.105 217.228 cv
375.145 217.263 li
375.271 217.372 375.389 217.486 375.507 217.604 cv
375.625 217.722 375.738 217.84 375.843 217.966 cv
375.952 218.093 376.057 218.219 376.158 218.351 cv
376.239 218.46 376.318 218.571 376.393 218.685 cv
376.454 218.778 376.512 218.871 376.57 218.966 cv
376.576 218.976 li
376.588 218.996 376.599 219.016 376.611 219.036 cv
359.9 216.681 mo
358.387 216.62 li
359.458 215.941 360.722 215.54 362.079 215.521 cv
363.687 215.521 li
362.289 215.541 360.99 215.965 359.9 216.681 cv
355.094 216.486 mo
352.734 216.39 li
353.743 215.835 354.904 215.521 356.136 215.521 cv
358.566 215.521 li
357.3 215.539 356.116 215.888 355.094 216.486 cv
.568627 .835294 .898039 rgb
f
377.146 220.145 mo
377.146 220.145 377.145 220.145 377.145 220.145 cv
377.145 220.145 li
377.145 220.145 377.146 220.145 377.146 220.145 cv
377.146 220.145 377.146 220.145 377.146 220.145 cv
377.058 219.931 mo
377.04 219.888 377.021 219.845 377.002 219.802 cv
376.97 219.722 li
377 219.791 377.03 219.861 377.058 219.931 cv
376.97 219.722 mo
376.964 219.71 li
376.964 219.71 376.964 219.709 376.964 219.709 cv
376.97 219.722 li
376.612 219.037 mo
376.612 219.037 376.611 219.036 376.611 219.036 cv
376.611 219.036 li
376.611 219.036 376.612 219.037 376.612 219.037 cv
.929873 .929873 .929873 rgb
f
377.145 220.145 mo
377.129 220.145 377.113 220.145 377.097 220.145 cv
375.029 220.145 li
374.696 219.661 374.306 219.22 373.868 218.832 cv
376.611 219.036 li
376.611 219.036 376.612 219.037 376.612 219.037 cv
376.725 219.231 376.83 219.43 376.926 219.634 cv
376.964 219.709 li
376.964 219.709 376.964 219.71 376.964 219.71 cv
376.97 219.722 li
376.97 219.722 li
377.002 219.802 li
377.021 219.845 377.04 219.888 377.058 219.931 cv
377.086 220.002 377.114 220.073 377.14 220.145 cv
377.145 220.145 li
377.145 220.145 li
377.145 220.145 li
.541176 .780392 .839216 rgb
f
358.387 216.62 mo
355.094 216.486 li
356.116 215.888 357.3 215.539 358.566 215.521 cv
362.079 215.521 li
360.722 215.54 359.458 215.941 358.387 216.62 cv
.984314 .8 .545098 rgb
f
363.215 216.816 mo
359.9 216.681 li
360.99 215.965 362.289 215.541 363.687 215.521 cv
367.2 215.521 li
365.717 215.542 364.345 216.018 363.215 216.816 cv
1 1 1 rgb
f
399.165 240.128 mo
398.338 240.128 li
398.369 239.975 398.394 239.82 398.415 239.665 cv
399.215 237.69 398.972 235.41 397.83 233.57 cv
397.732 233.411 li
397.446 232.95 396.957 232.653 396.415 232.611 cv
395.97 232.577 li
395.756 232.251 395.534 231.93 395.306 231.616 cv
395.61 231.64 li
395.624 231.641 395.638 231.641 395.652 231.641 cv
396.061 231.641 396.312 231.173 396.068 230.829 cv
392.264 225.464 386.376 221.968 379.853 221.191 cv
379.833 221.189 379.813 221.187 379.794 221.187 cv
379.516 221.187 379.284 221.418 379.284 221.702 cv
379.284 221.939 li
378.976 221.894 378.667 221.855 378.356 221.822 cv
378.356 221.804 li
378.356 221.392 378.027 221.058 377.615 221.056 cv
377.099 221.053 376.361 221.049 375.555 221.044 cv
375.436 220.802 375.307 220.569 375.162 220.346 cv
375.119 220.278 375.074 220.211 375.029 220.145 cv
377.097 220.145 li
377.113 220.145 377.129 220.145 377.145 220.145 cv
377.145 220.145 377.146 220.145 377.146 220.145 cv
377.483 220.146 377.816 220.155 378.153 220.171 cv
378.153 220.171 li
386.097 220.516 393.394 224.761 397.612 231.56 cv
398.594 233.145 li
398.664 233.259 li
398.664 233.259 li
398.937 233.698 399.157 234.149 399.328 234.606 cv
399.329 234.607 399.329 234.607 399.329 234.607 cv
399.33 234.611 399.332 234.615 399.333 234.618 cv
399.334 234.621 399.335 234.623 399.336 234.625 cv
399.336 234.627 399.337 234.629 399.338 234.631 cv
399.339 234.634 399.34 234.638 399.342 234.642 cv
399.342 234.642 399.342 234.642 399.342 234.643 cv
400.026 236.499 399.897 238.45 399.165 240.128 cv
.505882 .745098 .803922 rgb
f
398.415 239.665 mo
398.631 238.062 398.323 236.357 397.354 234.796 cv
397.284 234.683 li
396.302 233.097 li
396.193 232.922 396.082 232.749 395.97 232.577 cv
396.415 232.611 li
396.957 232.653 397.446 232.95 397.732 233.411 cv
397.83 233.57 li
398.972 235.41 399.215 237.69 398.415 239.665 cv
.768627 .94902 .921569 rgb
f
395.652 231.641 mo
395.638 231.641 395.624 231.641 395.61 231.64 cv
395.306 231.616 li
391.472 226.348 385.682 222.874 379.284 221.939 cv
379.284 221.702 li
379.284 221.418 379.516 221.187 379.794 221.187 cv
379.813 221.187 379.833 221.189 379.853 221.191 cv
386.376 221.968 392.264 225.464 396.068 230.829 cv
396.312 231.173 396.061 231.641 395.652 231.641 cv
f
378.356 221.822 mo
377.855 221.769 377.35 221.731 376.843 221.709 cv
376.503 221.691 376.171 221.687 375.83 221.687 cv
375.778 221.543 375.721 221.399 375.66 221.259 cv
375.616 221.172 li
375.596 221.129 375.576 221.086 375.555 221.044 cv
376.361 221.049 377.099 221.053 377.615 221.056 cv
378.027 221.058 378.356 221.392 378.356 221.804 cv
378.356 221.822 li
f
397.258 242.757 mo
397.389 242.556 397.52 242.351 397.629 242.137 cv
397.958 241.506 398.198 240.83 398.338 240.128 cv
399.165 240.128 li
399.095 240.288 399.02 240.445 398.939 240.599 cv
398.516 241.412 397.948 242.145 397.258 242.757 cv
.482353 .698039 .74902 rgb
f
317.9 222.75 mo
317.896 222.152 318.458 221.707 319.037 221.857 cv
320.192 222.157 321.859 222.988 322.241 225.285 cv
323.843 234.099 li
324.023 235.092 323.26 236.007 322.251 236.007 cv
319.579 236.007 li
318.688 236.007 317.965 235.287 317.961 234.397 cv
317.9 222.75 li
.290196 .635294 .717647 rgb
f
318.808 229.333 mo
318.821 231.936 li
320.345 232.473 321.747 233.233 322.97 234.172 cv
322.363 230.831 li
321.254 230.215 320.061 229.709 318.808 229.333 cv
.976471 .713726 .34902 rgb
f
318.791 225.682 mo
318.804 228.241 li
319.957 228.551 321.066 228.958 322.109 229.455 cv
321.581 226.547 li
320.681 226.202 319.751 225.914 318.791 225.682 cv
1 1 1 rgb
f
322.251 236.007 mo
319.579 236.007 li
318.688 236.007 317.965 235.287 317.961 234.397 cv
317.949 232.254 li
317.961 234.397 li
317.965 235.179 318.524 235.83 319.264 235.976 cv
319.365 235.996 319.471 236.007 319.579 236.007 cv
322.251 236.007 li
323.162 236.007 323.872 235.262 323.869 234.387 cv
323.872 235.262 323.162 236.007 322.251 236.007 cv
.898039 .898039 .898039 rgb
f
319.264 235.976 mo
318.524 235.83 317.965 235.179 317.961 234.397 cv
317.949 232.254 li
317.949 232.252 li
317.949 232.252 li
317.961 234.397 li
317.965 235.179 318.524 235.83 319.264 235.976 cv
.807843 .807843 .807843 rgb
f
317.949 232.252 mo
317.949 232.252 li
317.945 231.481 li
317.949 232.252 li
.305882 .615686 .690196 rgb
f
323.843 234.099 mo
323.592 232.721 li
323.592 232.721 li
323.843 234.099 li
.807843 .807843 .807843 rgb
f
323.592 232.721 mo
323.592 232.721 li
323.507 232.249 li
323.592 232.721 li
.305882 .615686 .690196 rgb
f
322.251 236.007 mo
319.579 236.007 li
319.471 236.007 319.365 235.996 319.264 235.976 cv
318.524 235.83 317.965 235.179 317.961 234.397 cv
317.949 232.252 li
317.945 231.481 li
318.819 231.601 li
318.821 231.936 li
320.345 232.473 321.747 233.233 322.97 234.172 cv
322.598 232.124 li
323.507 232.249 li
323.592 232.721 li
323.843 234.099 li
323.86 234.196 323.869 234.292 323.869 234.387 cv
323.872 235.262 323.162 236.007 322.251 236.007 cv
.258824 .568627 .643137 rgb
f
322.97 234.172 mo
321.747 233.233 320.345 232.473 318.821 231.936 cv
318.819 231.601 li
322.598 232.124 li
322.97 234.172 li
.878431 .639216 .313725 rgb
f
321.113 222.994 mo
320.5 222.383 319.757 222.058 319.14 221.885 cv
319.757 222.058 320.5 222.383 321.113 222.994 cv
1 1 1 rgb
f
322.726 227.953 mo
321.573 225.623 320.219 223.321 317.901 223.113 cv
317.9 222.75 li
317.9 222.748 317.9 222.746 317.9 222.744 cv
317.9 222.229 318.321 221.828 318.809 221.828 cv
318.883 221.828 318.96 221.837 319.037 221.857 cv
319.071 221.866 319.105 221.875 319.14 221.885 cv
319.757 222.058 320.5 222.383 321.113 222.994 cv
321.639 223.518 322.07 224.254 322.241 225.285 cv
322.726 227.953 li
.505882 .745098 .803922 rgb
f
112.068 304.539 mo
121.063 291.321 li
112.068 278.103 li
307.89 278.103 li
298.896 291.321 li
307.89 304.539 li
112.068 304.539 li
cp
.290196 .635294 .717647 rgb
f
144.35 290.487 mo
147.385 290.487 li
147.385 292.625 li
144.35 292.625 li
144.35 298.802 li
141.999 298.802 li
141.999 283.84 li
148.219 283.84 li
148.219 285.977 li
144.35 285.977 li
144.35 290.487 li
cp
1 1 1 rgb
f
149.353 283.84 mo
151.704 283.84 li
151.704 296.664 li
155.573 296.664 li
155.573 298.802 li
149.353 298.802 li
149.353 283.84 li
cp
f
157.476 293.844 mo
154.505 283.84 li
156.963 283.84 li
158.758 290.659 li
160.554 283.84 li
162.798 283.84 li
159.827 293.844 li
159.827 298.802 li
157.476 298.802 li
157.476 293.844 li
cp
f
169.404 298.802 mo
167.053 298.802 li
167.053 283.84 li
169.404 283.84 li
169.404 290.252 li
172.076 290.252 li
172.076 283.84 li
174.47 283.84 li
174.47 298.802 li
172.076 298.802 li
172.076 292.39 li
169.404 292.39 li
169.404 298.802 li
cp
f
178.533 290.145 mo
181.761 290.145 li
181.761 292.283 li
178.533 292.283 li
178.533 296.664 li
182.594 296.664 li
182.594 298.802 li
176.182 298.802 li
176.182 283.84 li
182.594 283.84 li
182.594 285.977 li
178.533 285.977 li
178.533 290.145 li
cp
f
184.049 283.84 mo
186.4 283.84 li
186.4 296.664 li
190.268 296.664 li
190.268 298.802 li
184.049 298.802 li
184.049 283.84 li
cp
f
191.296 283.84 mo
193.647 283.84 li
193.647 298.802 li
191.296 298.802 li
191.296 283.84 li
cp
f
202.176 293.223 mo
202.176 295.212 li
202.176 297.605 200.979 298.973 198.67 298.973 cv
196.362 298.973 195.165 297.605 195.165 295.212 cv
195.165 287.431 li
195.165 285.037 196.362 283.669 198.67 283.669 cv
200.979 283.669 202.176 285.037 202.176 287.431 cv
202.176 288.884 li
199.953 288.884 li
199.953 287.281 li
199.953 286.213 199.482 285.806 198.734 285.806 cv
197.986 285.806 197.516 286.213 197.516 287.281 cv
197.516 295.361 li
197.516 296.429 197.986 296.815 198.734 296.815 cv
199.482 296.815 199.953 296.429 199.953 295.361 cv
199.953 293.223 li
202.176 293.223 li
cp
f
205.768 295.361 mo
205.768 296.429 206.238 296.836 206.986 296.836 cv
207.734 296.836 208.204 296.429 208.204 295.361 cv
208.204 287.281 li
208.204 286.213 207.734 285.806 206.986 285.806 cv
206.238 285.806 205.768 286.213 205.768 287.281 cv
205.768 295.361 li
cp
203.416 287.431 mo
203.416 285.037 204.678 283.669 206.986 283.669 cv
209.294 283.669 210.555 285.037 210.555 287.431 cv
210.555 295.212 li
210.555 297.605 209.294 298.973 206.986 298.973 cv
204.678 298.973 203.416 297.605 203.416 295.212 cv
203.416 287.431 li
cp
f
214.426 285.977 mo
214.426 291.043 li
215.537 291.043 li
216.285 291.043 216.691 290.701 216.691 289.633 cv
216.691 287.388 li
216.691 286.32 216.285 285.977 215.537 285.977 cv
214.426 285.977 li
cp
219.043 287.537 mo
219.043 289.483 li
219.043 291.876 217.889 293.181 215.537 293.181 cv
214.426 293.181 li
214.426 298.802 li
212.074 298.802 li
212.074 283.84 li
215.537 283.84 li
217.889 283.84 219.043 285.144 219.043 287.537 cv
cp
f
219.45 283.84 mo
226.717 283.84 li
226.717 285.977 li
224.259 285.977 li
224.259 298.802 li
221.908 298.802 li
221.908 285.977 li
219.45 285.977 li
219.45 283.84 li
cp
f
230.095 290.145 mo
233.323 290.145 li
233.323 292.283 li
230.095 292.283 li
230.095 296.664 li
234.157 296.664 li
234.157 298.802 li
227.745 298.802 li
227.745 283.84 li
234.157 283.84 li
234.157 285.977 li
230.095 285.977 li
230.095 290.145 li
cp
f
237.963 285.977 mo
237.963 290.573 li
238.882 290.573 li
239.758 290.573 240.293 290.188 240.293 288.991 cv
240.293 287.516 li
240.293 286.448 239.929 285.977 239.096 285.977 cv
237.963 285.977 li
cp
240.528 298.802 mo
240.399 298.418 240.314 298.182 240.314 296.964 cv
240.314 294.612 li
240.314 293.223 239.844 292.711 238.775 292.711 cv
237.963 292.711 li
237.963 298.802 li
235.611 298.802 li
235.611 283.84 li
239.16 283.84 li
241.597 283.84 242.644 284.973 242.644 287.281 cv
242.644 288.457 li
242.644 289.996 242.152 291.001 241.105 291.492 cv
242.281 291.983 242.665 293.116 242.665 294.677 cv
242.665 296.985 li
242.665 297.712 242.687 298.246 242.922 298.802 cv
240.528 298.802 li
cp
f
247.369 283.669 mo
249.656 283.669 250.832 285.037 250.832 287.431 cv
250.832 287.901 li
248.609 287.901 li
248.609 287.281 li
248.609 286.213 248.181 285.806 247.433 285.806 cv
246.685 285.806 246.258 286.213 246.258 287.281 cv
246.258 290.359 250.853 290.936 250.853 295.212 cv
250.853 297.605 249.656 298.973 247.348 298.973 cv
245.039 298.973 243.842 297.605 243.842 295.212 cv
243.842 294.292 li
246.065 294.292 li
246.065 295.361 li
246.065 296.429 246.535 296.815 247.283 296.815 cv
248.032 296.815 248.502 296.429 248.502 295.361 cv
248.502 292.283 243.906 291.706 243.906 287.431 cv
243.906 285.037 245.082 283.669 247.369 283.669 cv
cp
f
258.677 283.669 mo
260.964 283.669 262.141 285.037 262.141 287.431 cv
262.141 287.901 li
259.917 287.901 li
259.917 287.281 li
259.917 286.213 259.49 285.806 258.742 285.806 cv
257.993 285.806 257.567 286.213 257.567 287.281 cv
257.567 290.359 262.162 290.936 262.162 295.212 cv
262.162 297.605 260.964 298.973 258.656 298.973 cv
256.348 298.973 255.151 297.605 255.151 295.212 cv
255.151 294.292 li
257.374 294.292 li
257.374 295.361 li
257.374 296.429 257.844 296.815 258.592 296.815 cv
259.34 296.815 259.81 296.429 259.81 295.361 cv
259.81 292.283 255.215 291.706 255.215 287.431 cv
255.215 285.037 256.39 283.669 258.677 283.669 cv
cp
f
265.86 290.145 mo
269.087 290.145 li
269.087 292.283 li
265.86 292.283 li
265.86 296.664 li
269.922 296.664 li
269.922 298.802 li
263.509 298.802 li
263.509 283.84 li
269.922 283.84 li
269.922 285.977 li
265.86 285.977 li
265.86 290.145 li
cp
f
270.693 283.84 mo
277.96 283.84 li
277.96 285.977 li
275.502 285.977 li
275.502 298.802 li
273.151 298.802 li
273.151 285.977 li
270.693 285.977 li
270.693 283.84 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.1.0
%%For: (Agor) ()
%%Title: (1608.i105.022.S.m005.c11.fly helicopters set.eps)
%%CreationDate: 8/27/2016 7:40 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj2Oede<S6>hAlYB86I^mgG3[0/t+p!W`q>9L=[SE:=Vr1R%Fhq<`+V-$?]N$T&/M[M_=$S/Ea);H9\qRnD,BHeJ+c<N3H&
%ZgE7n;nAN'1E7cR=aJ6_s7jpRHdD$Te_X,lZt<tm)VSo_dsYu5V-QHp;l5niD9'V>q0%&1XL@tPh0-?_lfHi[G.4rPb5E`r;Qi]j
%oTrJ@6ab<Ts..:j9'(-j-F72(([?upU"sROqC*eo1!i&FO5KZp/*[+!1Yb.MBbKX&g@#\ie2NiRgOGMhLEn;JZh.tHH<Te1];9ti
%h>4dCVO8GpFF@!QPf+ZB1Eqq[=e\-Xo$poXd--BB;c,(AZ+leq(FuK@%Nmq6b+XB.r^W1PLu3;-"9eb+l1k:Wg#u6,fgqM[98p3d
%QcBqtB]*PQbGIKCncO;N!'lhe8T=1'g?^Xgr@1U9@G#:_B3f`0]&U<<^B^CX9Q9S\h5>OA;JVS9VG2\,E%D4WSt>Y(e!(qB1LC$\
%?N#46ot4J.<4d0[1Yr$rrP(1?QE?uWgQCFm6)3.^gT(")K*(1n3I0/X<#\5FoQd--i`T:fk'tPiLSaEQ[84ZnD@A3FlR>U;rq:Zb
%/=(`a+b7-DA@GKS*Oai[U2,L$V+pg$PjXuS#<^Cj,J%;$.F04C3BS3N2V!'^\jp,k.2[[R^`LV[DRY'uDlp3g1u"%a9<iorX]H^G
%[AZ#YrgW.D]=-\IqA]0]k;nnjjp+HlZ)HQ`[K7q$j#Hd*=W^iDeH&M$DH1`E-K_=`?aI*p>-qr]m8Ni4kSO4;FYW)N=rD;W\kO9r
%>NkjCs1B+so8`P`"8_&aDL9a`C":per+@HWBqJ@'n#GJu]1]J;8aW*sUL0<c9>#FHLYYjrqOl``2X+,QZ[>?"6t`ut&q?`rq,dE2
%%KB/n4Y:Ku0i8/W]&!4`g1Y\pN^H@:<Cn3r\t(+;mkm_>;E)RE#l?7*s.[8mLh0HP&M-eg,[)3t&q@i:L5*42Jb#^,6^@L\Um8!_
%8h]O:r&TMD!%-t$i(*C7h5L(:@>?<Xr&GpDrG&gLgCe1C#JIIn@Ct?O(a0g=5=Ldkm>GmpArs7e\,kfSZeKc.e7d?-];<eU]f`It
%0n0]=Rdb/<.4R.*a,Lr9;`NFn(UGqn+@OtL3[qfMbPK(6#Ci*:jYKdf-f%\0?G0l$@X;h_(0TbK_4]Yg7e>/JG2VDW%aIZeJC1Zq
%[#FjhO3'Yc#%2<8;U_:Sif=?5SrnZWLK![jr&M/[^V,+sHqbBKJ'QZh0]8eqO%]JZO]qUZfkAbTf8*#SqT5C;-&o<)%5ZgXBt-n5
%XPTmtX"A3tU`Sob1(O>?J+\;AG5C6^Y%dWr;i_Eee(/6Gd9i`i5di_SekaWg'ABid:!nnR#TBkk1c^';/,cdWeAug^+smUFs!/`I
%T@kRM7fj<P9TOib4*!r$GWA2M?LI1H-_N'BH<O9[G)eA<c<9C6^RVr_,lq"Z[$hE`=jr6+62-&,[8sha3A8<PQZ=>;Hoe;^XkB&)
%E`21&$f1+B!E#G!9b+S'(3.@UPdL_?h/^:&=#J*?<#\VkVH3Se?RL'\Emf9h%Om>^[)H3EM`<8kb6dK8H\4d#QQp12:t\OZ=hb7*
%b;FbAn1pi6i-[9BB6[>>X\#QFVY\\T>1/*IjYAUFSSGW%0h)4JU8HB`kb(*&QE/>"(n"ol'$\eQf*_gm4V#^L/=57I"aaRB,Od*g
%XedokU"g'>ZO#Z)M1e;G2bTj7[0Yl/h%KPSNS!QDn)aao#t"8ENTCdDllqa"`,^c<D@t&D@_"oYGCsBclXn+VM9)*K=DlBn!RY.-
%,%`s/UIZb:rN"X33%J"_IkS75&in=PIO/A"X3UC/M;1e4q6Xc1UbS74gOIVsS>%+@;>SQ-!hPY]]jAD%b"eP/g%LmK/=oHHNEDV9
%#eH2;1f^DdS(b8RYM-`VN95-%-duJpZIX5FMWSrE2rG%<R]jrU-N62u*4Nkfk)Vupgn8IB/La=hk0Y,iCSc(ETNk)Y:osK"kX&/@
%mU23n/bHmO,!.B-`6mWT)Pulq5Fltug.F+^URt5>^uY.Lg9"\rF=$dX:ZaLl=L0k:JI'JG1otJLaI)LBR"G0&AGe@e)?68=O0R<>
%\,+'S)6VNILW4mMW^Z/2bb`d0`IN$71U(h;rauqi9?_Ib?&i(:!"$ldq'9<;SHq'@Q:N<q@8[.P7Y<SIroCVXKEcM+Bh2]"cDP>A
%Y+V@uhAV]kp&8+#g/##P4BGRg;=F+]nJc!S(F9'rcM:VLX]J(rcc_!UWch1=i8e-h4385Xc('jPMT)=4B2RbHQ5oiM<Vb8RBUSP#
%Ag7&>nYG<^k0QT#h/6c8e`qVtCe*@S3i5LiQakkUBI6%1Fj@jkhb_-GX#"g^'fR0!Rndo96FTpn&!A?[T]*8khKHALL+E*5(o\A]
%6Z/\<qb7<EAp3.Z](/I6en:\h(<YsCF0]s&l=!I$lrD8h[RtYADq;>H'M`B?Xp%#0<NnFQ@!i"p18bB;'@c\-%`V/qB&[4r8J6Mb
%DX:+2SNZS!-c(bcMrC)q$OS62\#;q`l1'GkSkDU"<3opsEfsg"(><NSAn:&!qFlLcVqbFSeZ(M;WXXCn,KX9Aa=#H2Da2&JiRR03
%rFF(%-=?4a)PqHhn#3lKFlq-51eZ>(JuurdLigMSO&@2elEMEa-^]BWi`69nVkt%>Und(m7O:q#1N0%cE5CK$dW+7qY)AO_D!SPU
%`t[_-if=51O82rO8J]OoYPJAXEmr31C'i(*C@t%@=Tq]5MVc8sl`[0[X/CdW;mr/2.1&tD6<#r>CSp#fieH/_Mo\r2PsFt6jmo')
%\=iaB7[_\L>%H:m`3>EcAg,Q:>%D`U*%N>&TLu&@G7'O-:Y9bm<$cK:C>F%hM6>lN;\QG>&R[[lr7@M]%Ah)%V&p!Z$[Fi4;E(:V
%,[*s$Udi$t/L<A=;_BrMGV:uV9i9B=7M_h$]pVCrYPp-_DSX5-CYfN!6n'c=;._>?8MVI\P.k$tU<HScp*RP`QfQ/i74jCmD'j!p
%au?:8-'?cMH.0*u7@=n^PJFSrP?O2=68eYJ.-6ptMfLV\eY3gj&k.^^PlJ"r=k'1i>-)db!QrZg74I,i>*MG?IHGCrU)%<Po\3*B
%74I,i>*MD_B'*1n'P^M-@@(RICMFL,jV7o=RWCLHQffZpn64&Sr*<)Q583QkZ'ZjB2sUCZbg(4"Dn%gAjp]X"g92H@f?\BJXa!lB
%T&/s@Aeo^[.XK?Bkd?+NRfg?i5Y`,AD5#R)NjlV'=h&8I=fR&c$`u>9>&E6#/[X4H[+`B">A1E)ctWqqD5#JmBf1$'k]dI3gU"n_
%">'>uIHA#n!*h(MX"P]AZ&B="@'PY+b:"\n[[+34'^uF'pCl*H.;c!EM>_4](>>hh;f1kY8jA?6E9;/kA@Yo][O5CnYdh>WC8>+3
%4;KlbN2(1nDJmjc#iXe.Q75[R"0W*sF`:d1jWsfkFWj[,WnsaTC\?9>-^8+^eZ"l2q*[kJBfe0UOjZ/s/Z%4oD_4EXgRt2'^Dlg#
%eF,C51;*tS.Q>)cRVVO[#S!\1d@095m^]=Q^KHUN-C^NT@i>;oCq%XdM=QKR?s\&qb3`f=h'5^(GECa:qmfR>#o1:H'YNU\8X`:(
%O<E5#4t2ho:';J0/N8iCL.Q_a0cI,B]$:UqQrGCGUVWI;)Nkr"o-rCT/%StAD\Ge"HN1'Lm3aXYF))_5dZ'/dZhaV^,<:f(&Q][s
%H(!.#8\`fprpO=rG;f2FVf;1aXNC$Bs*"MjMuDPPrpNY%GDlFWan)jks1NlEIeRmqMuDPji&tNSf[)MhHBO1Lho22U@aB8'kI]C<
%SWO>/V-^23HIZ947E3*-AAsLT0eHi2;/J/DIpYr[UOIO?VZppJ>elbX_Vl$&AmZ4Mn3ONQ^?n57X6a?@V\WA[e_`s?MRB#k<H;C#
%+PV#:)u$[%0oHHCR'Be)aSr)WDZU$K8<_;5RV_N2m35958<YXRA/E98)lMM,[C&:a<HWqMXe3$\ri3FHec&%I>1mS59<F'Jg5Gm^
%1p1mkONjjbkdQ5u1SsKg/<uQPVUBt[bs?j-Mhs1M*jhGXRO2D)6pqVne5U3^nflF/8p>/*`L`=A%F1p92`7G[lVu'g#Bpt3#A,Xj
%O\"cu"E+7gTeIom,'NUBW=bN5Xp!B`+k&RMaWg8\8A$Jd039H@Oa("S?N0+e/J9^p`64AY0/Ccr&hc!J_tfWfiamihcpcsU.Z'MV
%q+WfGc=^`%8-^p.RHk:09fl7"j0"f[RCT%B;)L">0'E,;M'Nl?/2!EZ%2rjWZABh`bkblaaU?L.h^[L8M^BA8ra)Qf0g@g^VXZUZ
%['DBG^JggXN8n_6.C3n3Do,4B=7kAd#'/E%ng<20PhbL&l\sjdm^HOh7-A,F(Ul'"rc-D)?i&C0;fltZWjMe44AtdCV$-NL/PbD'
%h]MW1Vt-a"6K\8,H\."s.g]N3j[R^^X<]VrZ3)g"rg=f:m96Vnm6ciDeOm\I1,hl+B&-M%b>\(PMueAs8EXPbY8.Pjg<A@!FS$bD
%]6P!WDJJnuQdE'RZHAlFiO!EjDC$Ihms69W)4GA#/Rm:Q3rq'-I&SR+;TX_cim^`NVu=*d0c$*-00+qQ`]OA[M`f!13l'S]aC?Kh
%@?JT4j=qEqN("dtOiOuBPHr8>bX3H3h\2^V98P.$DL-\2l^#]l;WDo3Stt4JI!7#(_X==#Cmn+<NQOhl="SNphZq\43Je,,e:(T.
%-+Q:;2/)F+SGnf;'XHG;>"#dP#Q8t`4=QO49,4,U@D.eZ[TMj0&Q__h"Ibf^TmY+=E\fd%2dPh.W/HCnkjl^S4Q@iZJ]i<SGOnM"
%SuLVlPK9#hFkb.d3eEhqO-0Y7*;/&XSD3c0W*%i?P[rVJ>OG+P?Lm8/f*;2V`6[D8HST8rae.ali8XHo$+*D+pfaCG@89_.=$,KN
%8<dF5*P-F#$GI.81FE?58P#9>Ej$`6/;h,Q@k/^C7#iXcs8NmHQMQrYAb3C%T\\E%KETgcMsUX=gIuE2@!V^B%>ANmVi+Yp_u_K!
%\c;K*=[[=hBPnF,/Y]dE1cJ%D^G20Mi:c(#B^S?ULF'H6@8=_N"I(LT\OAKe#j2u^g^k?]E,H95h4/H0^00E",')fkS6OH\5X:Zp
%Ldain)^4$7]3RGaQBIWORi]m%#S7d'0hhV;`G[jn3lBE&0@.GYrOii%q_8o]9$GGHT68]7^?@n?3E0>:F$[ffP0j_ZjMV_ulR.Zi
%q0XD55j_=G>jq\p:R'T#om\f]A>s.PBusYtQfdI#*@.Fn?C"FhJiB$ski_Aj=X6#j@@hA,2OJXUTZ7j3k&-K&S+$+B&mS9Vhq-)[
%>Pt(:Osjc6MeNLQhe.cU'fP-ji+j,\1mPl8&#Md&JsqVSTN`q3Ws@`a1-[DBHs1V<IKV5O=g?Q,U+5\#[<#iFDFi9Gquu$uT($n9
%>aSK-cu06>h+HG$W=h"<Ot?R@hAdfp%h)Z;M]Oc>;n/%SGI^NF3r93%A@p$c^Cq2[!_$hWkL,i(pcJ*3mp,+BhM$/-Haa7b'=e!:
%Vqn@"$BdkCR:1"q5kYONi92NrVeG$'rC3\ui=fKY+pW,tca?]Y-r?N*h#5LiI]c)hc)eXN2,01Jd5diK7\'fAR[.&%E(8,#mH_f+
%Y\'AZ8XI?5BJ=(gL*WYWI#=48H/<W9X^\86n"2J<M4Q/`/*kidp\.;QM':J5R`6<C`63NIa!;"/@2rpt8XX_]R"U2s2i^u3h\QK;
%@3DI5d_F'cc=7'(n^ud$3^#E?U!;=RK<lm:2t.<LRsZOJieb-i]>Wm\lYbk4@CqXT_U&%s7*Q?eQf+<e\^9;]8sB:6q^I2':+cL5
%6s0X%Va^,3qRUl:("YRJM6#jSH-m7PSEJEkCMgN1`(dr+j+a.Z]9/D&mdJ5!9+YOUr$<4r2rU']h4&d'p1C2Kk4k*rT96QBfIOLP
%-$DhoA!RUSgC:a#*[Ame177MS!^4X=aE-T@X",U7n[l>76<DVEo<O89hP%rr]WY>IKmNJ?,s\?+Y\.g-qk]K%Cm^.IUle9R%Dr=`
%9:C<g[@XZ^.1BDArOGlP2bD*=DG!RXF>8-N&@6)/R==am=a$ga+WTM"aR`iLeEYSI]VI6614SC0p-mPB)G[Z,VAnYe?S+=+Q_830
%;]f98Q>&1)O-n1%KQG]*2_T24D^C^a$%j`lJoiZPUMIp)X\/@*'#SO9NaK8"HdiG\0si:dg$3:bV>fS;s1IdtoJaMZ>Gg.>^fAoJ
%&sS`bp>7J$%FVQSM%D8dHM^Am]dEY[Qk&E+:88^cdSd^P=&=C!J)6Llfr'=r?->&5EZ`bjjlr@l*t2L49_uTS9j=sf#@08o_iF\g
%fq)iPhIk22:t,%8#C_"c5CFd/h^Mi(]h3_LXJICrcl`!:Gr0Vs0]`(A0NdGD%h:%q?I#pk;PVt7<s<_n-QpI]%Eeq#Y3.j)Wh]H_
%8RY`TG:gk#W%NMPV[e%O/n\jSH_BBsJ&0P-+9)&]?CCeZNR.t:^"VN^WRKLQNRBAHr1pEUSFRa4IPajS%<V:C<;@Pd:)ZDBSSsi"
%9lbFKV*7Jn^#MT`!:keMA(p_7Z'K^C?S+-59A)eB=t*KfrHI4pUZRFX+7o#5[7H9E`V@45k*ec-Uqc=<?YFrW*A?5eooB&%FaG'o
%)BW^Q5?o,NL"Q%W^Wo!C=qm)FiDQFV5-J:=Nt,Y41qcZ#rHSH?l7K[(Fa8fh[3_5$W:jRS2$jOgRpW'ir&Rb/2"C=#PHgjBlp[Y6
%O^t>e/dPN[$L<0f<sr\')ZgO2bCa-9h4+N=pKL(.]iTfP"q+)i0Y+"Y0@nCajcr"/COC$N;XW*7ScSYY"&7WfeB9d@NLQB%[S>'X
%]]Fu\-[W@h0i=OFSN_Uj@Ab.'pF[aGd8RK48G&;:oZ>SLZt=!<;g2rhXh\@7W*1ts47.C+IjnZi(.0kn5A#R$dQZ?-q]^>]g3rNK
%&?bGEl_g)InedeBO(QD2?u7?uQi-(9Cj6\*lt-<[B!l!GOLoWEaS<N/bajX8W$INdV)<mA__O?26Y=A7Q+HpXG,\\;nQk<,,B__B
%L<*]Tpa!`"Z#.s]gfBJYHthWAFPI>#mS!)0Rd(QU"UuI#1W)[J(+WI$rDi,'eGhV).Pa)sT%`L2He%Oke^S%#T71Oe;X]rIlA^*S
%:i'=f+Z0`cA)sEq3iQSfFZLqA<`=A4cCcthW.8J%qo>7*(Iui/S+TCR(ZD&VGke75WDi34?^l[;<(@jB6c0.\OfJ00e>u8)YB%qH
%in!:pG58d6kS"0f&Bte%D/'*NPtjI_fQ[]H2@!JFS\T>h8sRQgaN[WOHl,n!e9f*Gmrd@_8E;QgWQ_$m:@4BorG"9#dATu&$s:s+
%-=Q=g\m]BC=r3mR,;mnDe+J+55qAdo.cJn"0J1aB5Okm#)'iJ3f<8Oogc^#A2m`57dJdp*hqlOEJ)AEi(jtC`Y?jDrG-=;jiTlqM
%%jMsi`%uMeFTnM'.FC$-[p@5]>CMm$9WQ_3ZS_A^mHj/dZmt=t_fePprl4uJ%rYJHF6F#sCU?l0NW!U)d-*pH^@^Yi[8J)';u9Q-
%n:Ag7LWGN\Jd#<_rG%8A%PQml8kF'fG)-WofW/cU/<hh89,T+!g1-cA%f.2L2j\of.MOga0^*TaQ!W_]DdB/^s/L6(h0Q$E/O_fn
%j?_Rj5m^.2<NQ1"D2d^\9@Z@$Bdl"+X_Olfn$^Oe^LK[Kif;)G[ILoZ-hbsWea?2Ha+#0!["N:Sm;f0,QH!+//IiB!A*@;1FZ6G#
%<LGqplkBY`7PJiNWa/:YrH4(MEYL9%XaWE%>Uf?c1`XPs5&'L`X_f%"OKK1NJD6>c'"r7YpB[HfQ$E%)objam@sE@Ts7@N<*#Ilk
%]7_o<T%k-cJ66HJ-FFN>TlqP4!SM@$8n24M=Xr&&U>a0kdW-i-Z0_oh.6$N4ZC+6QrBmIT'Pfe#<2-)AmT-?Q0`mVdoX`k>s#i&X
%7D^8omI<r#S2?9%31-@/OoP@C>Pf[o;XZP;i'i$MKa_#:G>=XjknD94]2hQ4=$?%<-FRiY]'$bhpA,VJinY,k<K^aUJ6o1WPRZ;2
%g=77cC,W*9#$!15)62;,Uar/mT)-fMGa=rpNNpED]'4O)S<#WQit4TWZ=Cl*]V',>d\O;!:`>NX+o=)&'/aa$goX-@;Wej9SU-L$
%=Iq&nBI.staOP7RM`D\KY`'C0OREY,'?OGOgRU`;'Wo!6Thlfmp_([l.DSR@j@:]W-/I%@+HZ@pRFB9k?d8n-7.?`CA_dg))nYeo
%eR&3]2<=as[,__MYo[qqLV%&I5EVZ0K`cD>G-0W"->?TI#pj_f\>+2:e"_RQ]'3g;OX;q7[p(\_I5oFed=J0gl/:aS"8967Rs-CI
%G.14i8`dEETd<dR>r""]X@Ce&XPNjDL%<"]T;Kqt1^^[kFDYJC5-1OQ2AWW*\^Mu,8D;g*(FU$GWnclF,gC#PV^PH&bU-.X;q<@>
%'!O_]r9GQ/#`D]"_'?!ceuXWNPRBpIRgCCA/<(%kP0E[drFce>%==fe-G9h[:"<\d;.U\o=eg!r<3d1lF@a*r>IF09mCGnid&#d>
%YrjIXHP]Cagm,D!E5YrS<OseuXP/[;5*1@fK%:M\#o]k3N*Af[<^0l(>b_6dUJA;LDI'4=d&o;e$.kt5DROjZDCi:9fAr_;Qh@(E
%n"j7=dh4e@Md+$@7N?Z0%&"g^T@P=%20AIl$4.]U_PeWL0X#Z#(NBhbWdP!R/]'1#a4UBGR^qHP`'9f74T("U8OLb6,G%%'l/S5(
%N]%p80JJS.%:;ADe9"BW37JME-\n:U$D0.9ft<7?C3Rf:BcM$<]*.YIV_Ycth4YTIR<IL)2D8$`h+G.8A0ij"]F56lM-n1!f*8AJ
%7?Sr8aga0lY44l"gR,I"6+[bm<YsHXVWr7Tp%G"h;`i_o8,"$:bt./a6FeF'J#\DdDAoGc@]XnA&d3eg^YJa,IK:[YQL4ZS(_^e?
%R;:=&AqK_*,mg>Y9'ds;[TEL,g=WHLCXr!C6qO]Vp18gRA9U#Sfot`NHC:OfaLTg8XAtVZH+-kokhQV+Ni'M]HAB/mf(gWZKSSGu
%>UX:@O;O`jE`n.uot@W:pnE2B6]R!aLUoN&gNs0&-?3:"82Lp8b"(ng8gkY-ammUVmSN&j%O6+p:Mb+a9/_g=b9=3VPF89G=Cs"R
%i'ZN5;L=hAISH"'`O?XqI$M'G.^LqR10r^WBsj^H>H6Q>]U1h<P7Sr[j:[,4d^a@,2IT6h%$sFE*'Z[AUh7bSX5_$6/s;f./mU;`
%eh'l55c./UMG10[QqeH)'nJfN/&("+\']SLCb.=,<ut%_Q=.)C'\_!5SOR,)i;dlZ\h\_Ba'QK!I*a7b81e*-ie&/V%I<C7maje[
%+BNi>"q=Bgm$9]'b??Y&S4([mZ-EIT\F&e"a$jhK@J/2?`\;(1+<`nJT"M+*rsk@Zi>F5Z<2j(rOd/V^N*hHC,0i7A;Lb<=>H(rn
%02,EGQ,7>i$em>t'NR@slJ[el9)F;.?+pm<Su,G)He^@S]-k=NFo8!t89JUBUtVpbBaaimd1Dk?Q:S4/>N38Z,"Sa`)E@)V7J*MS
%D0/a[VWt7B8uY9OI.m_i[kpU7H<KT"o`jM6+M?1GF36'!9T1OC,<6YRf'QXo:q`26[*EZm-p9kJ"0%rbbM@L-Z5e7.$MQ31q'%g3
%Tb/m#">`eVneInA`+W]3K_XZR%kmR@K;O!+mrpD0*<](I]Ci%YnO9Mbaq#36fG7AL.s46+6G7\Rn9'FjU%)PoJBFp9X'IpT[[Yf0
%abQfs*k0`];3?[j;J\"pqKp(^L)/Q[PMcWgosi(J'akZD=S]p)]Ye#<&ZRMMX`.Y+695V]-_q[g'QrkS3<fDpm9DC\Y,+@=Q#B@W
%"K;h'lOJ\jJ<RC0R(l"b?6fgZ0]V4@+.`q1-`p:[&I?NjUu\9*KYk/(#[XqeH\$#)NY@_q@B<@F,2_%gj>][8DDB6NRr\q=%IYqa
%89d_(r8$e4.q\?]4XX#*rcikE^6kW3BmH#I@,mM*@ME*1N`]#oN(PYo4s?mdXF#uW%30/"N^[7Jd5'Fl*`V9trRW?[71R0/-"p(N
%]ZKFmY)n_^>!hk*iJ&kHF4##i+uaC&N)*0-f02b@A\u^e.uD8@KbSF<<Y'i@X"BUt<]eSU=gA\(:Leur)T/Wg)7'sDV$XJm^q+.#
%h=aF>?S)/SG'cHmUrZ-;R*_NA0g]T;M&ijo$$;,B^!eHp+#0j1'$0)-R\C,ZInB1T`MSk[1h97_2Ab&i.Q8]A]"#ON8>0Cim-@9X
%<+=*-,XWdYUW>,r&6^\&#+S%Z2I)*'i?.g8*=RiVZh5I)boGefG!%i^JT$7G't@m>h7`i&Ab5-UK8n=VeJIBHh6lTMpK@*(rNp_5
%7H)h_dXtf<Pj[@MhEKh?m]:??IJ2`eolRnBkCZi?h*K^GC`BRjHb*eEdBm6Z>Q/_E]=YK@-2hduF1'KOlFf"qd4ecD`EV/keVenM
%o_G!9etuG1aOM@s.Hf1E#H&eV'e:A>5W<&[\*e]mf$AjCS@(P`X_+$h@P>'/cp(`[inPCco%)Wlm'jue,8qn9dpAQ'mHq(BfA(Rg
%55gm0bba2k*`['drcr;N]^U2^]pEW>jB(dZ$;8\p2&_5F<VT203+)Q1jCT?8NVDbHlrcPsk'kfi*;OnF?e1.m[l0jB3"d5Dd_4G&
%dk>S7l2LGT:1`ThG0To-2fl3HV^7FL?`FNJ)#r@=8pS$b^KJ^M=iVJNR=")pQ0dheY:Ehf#B(!\lJUWbG;&BSD3W5?F8T!Efrc(9
%`6c*hW8r-fGJC<4^V$LU)u#pf=R3-f3QMmFmXGHBb?Go=c:f.rfm*7:/(5t4BWaIH[IM=TrqX(l\rV.p1XdrEkUYi^HIudhs.]7J
%39NK(\jrVu=g.!0Q"Z?R=-&^!<iao.]@R`RHmmk+b3a$%3SIg4D-["#htc?gH/du??WK)B<BdN(-[.aq^JA&-LnlED_`O6O:X5*o
%V?L!`adt.ICJmFT<Jm7Eq9H&=UXJ<'_QB)a>n#cO%pug_DF26S-b":Nrak1_@8m04H*mNJ[*PjlIhfX7+,h5'i:ksJP:,+c7fMZ:
%A(f8Wj3<S+\(=u32FEG&^YPt3$q%/&01$@:7k!RoO8%&%C,*rHQ-CC,]?*-^C,mB,Dro2OrnC&Zp?:W4m8E2bh5k\gp5Qh2n,;"b
%DD&PfY8u--DghYuIS.LgXUg3-JtX9Wb/`mZIH=bcHCrkBjM)]UkN^rp7iSku^!f<Np/!+X55FKTqiu=]TQfn=q(f9\I/("/?`q$U
%g^/3WQ2j=GhatRcH2=]9?'+]snOd")L],tq_\`9f-uhVu<B(Ra`r#2+TW8/u6+]-^K!G9ZEpqNQ](n1d(&luD=Um@)DAMdg,7djW
%Z>KWbn9i3CX%mOd)+&_BT(N<3-W$SDl:(5Gk4jYUEjN=)g%\`QWkD)=[*?LL`q%q=Rf\d58"@E0?S*hbmk!YISGi'HQ"%<9aXaKG
%%rG?*#MTt!l5$M)k'\HAc>r@FCqJkJPi(nAglKJ&n3$&#DnM!NIf%glg?OMZDHcu0lH:.VP<""j=WqAJ`6W(S+3qpcb>"7FcT\ir
%>!1PoAj!D+NJ^M]YHY[kfI5hJO2f>+B4#XQ844BD<N[(Fo<t-2eoorUmRc`jhlZIJq+"dR&$t0iQ"IJPHIpF^T"Vm3ICrek46ULa
%[U0u-qePVtb^SsG!Ia\;Ib%XNSk7JCS?G)#mL[,"1SGGjhn=L\BQP0Ojl]";Y]]g;4nS^)r/#Q>P^.VZgl&YRT@lI,eF:10ei$[C
%7<S^L6k.j'[*@t5;Q!jRI&8PGWrD&X_ii.XZ7Ut!f!U^Xp<r!i8!2mNqC;\pWUHDkK%5L9#2[ssNLaC8oQU+kS^dt):RQj=066We
%IcftIk4;iHRXBNRqOi'tX+)*/B+>-$<qKI2%%TkLk#St(IU>d:\kjJsfR19"CUrlVdN.^Ds3m;-EiHTDs/KV;Q[0r&IX:PCYtmTt
%ImUBfQ3u):Zhsu];4Em4QS4\#F2=4#kbi!A:OFEP%n7*NM;C8sCA2hBIeo?H9k<:E*%"&bXjiAUQtCfW%gDq$M\kQA]L59J"RNW7
%6@st)P]E*UCH6_a@'V_gMhf.3_d!P2*Zh`!.ChhE$#2Xe<Bbo[hqb)/DkGIm5%R]2o(Yjb[K8p9^/:7?=ShR(l_'RtR>ABj-9bYo
%kP)!?0f0Qk0ZL5-!P\n?g&BHaJ5n=aLj%1L6>0JK0_?b+PGh&./PLfl.Hj\/2>/P2KBHiuG[)@1+)_lo\fuD;jVRrJLDe,c5qXr<
%i.s]W)NWu1$]%-WjC-!6@D_7R3FLK0*$&Uu$A(K*M2dDl`2N-sLijA*=aXrfqp;0Q:WsZbAE:nOB35D=W:F'JjP6EE<S;f"cnO)/
%$fVjl$YM^#8?Bk\geS5$:Q$K#0TF[@7UL=^K:eMV&0be9n7UN(I$cpApTdfOH;Hc#31sl^p;>4`aEjEn$X[7h=>/HUR"ebmW[I+=
%huTq8-%@7k^3+P\m:ia&j`kRQI/a)YY\f8Y@JBLCLHDLhZ?!nB%\g@U`5AP9:Y1o)$D29UBDKlpkf)O9mEX:p#>9O6Cp<pos75:G
%X@cCa\=2)hj`e0D^3!0/gbuU0H@2(p%P?7=CQ7B![BG;Xn6[9n?N*?DlFY>bH1gZ(elal]PgE=SSt+rD&%A0$/f-TG0*ZmD)sNpl
%l0TtJSa'?Sr/(L,D\Un_iO4_fnD9ncf%Q0kmJiRT@W8!]Qa]3Y9(7udEa]4<(PA%WO\=UBL4Zu@i^@/pMib]D7hL^389^]LH$F])
%>e3Yu?Y%j-NE?p<FlNN6NjjXslhR1KQW`JPNNdenIC&V2@J7sZc[Bu%[27/2G7:P%:kbbGM=WKnhtcE#,0hA$!;#7cA6R=8GE(Tj
%B(t[c&pmfZ6:N1n-H-sVV,&)o@CQf=AK/qZ-]SXLQmb'67CB^rIs-:E9'big-INuIqJ!A;XE49WpK'8SfC=<J'4R?R#?'5;b8`@I
%<p9/(ms99Zl)q;ap6IALfu&SFin(_`8TMWAG^_#ap?/Q#_YEmc&:r/A+ug#`O?J*$6@m9cbmG903oYlIflQ3DXlp:hb\QO0AjaI8
%]nf,*::@C;rF\1X`@ZK5r:!Hi]/@Cp2"(06:WV/Qh++)"[p4<CIC$DjB.SOG^6Y]-52=>oH%#/l+aNR4UMm#?F8N]6Se"TiZskE=
%Gh1WOG)(e^QKQWYf0(r"'1ukFX4odaCTY?4HHIIKBMUS$+ooi$2*\RFFM?MO50mDbXJW28mG3ZE_l#.*J)fWopkM6&Hb,d\dG"<Z
%<ql<GkCn]7Wtq\;,78s%.kNMXqh;oWnuX^pC2Rm[HtdF<]ihn\I^X8n-Yqpq@rYRlogl+Cq-*bdpYf1&Bqo]iC\rs%)Qr.'Don<M
%iFMA_8`ZDdALlGmnrsqD@g*Ms@u;&V[9UCHG<#Q*p5,;smI.TZ/e_atP^_NF,%DZF@oIlCHeI=(lah<+2710iLV80!jTiICk48&c
%f9L`[l)t:8\9+4Wq57C[p\^%*:2B6$:XUFq+L5iSO6uW*fDARiWon_iZAnLj:7WH5fGC5i`0dacHCq[-^YJ]Skb$_cqO[Yk'Ul84
%;#3]f4*U-*1]/9GT[W:l7j%&:c\D,e-P#[C#qqmeJT?fXFUmF)>VpR^c0afiQedj8nlRfCHYUaYjV@1/N4%`]+]WdJ$3*8NDr01$
%I/<PcI]$?KPdTD^:M8NHgcNdI+0H<^DXK[blt4T:8lp.CKRnFH.)5AQp^eLf4uXWj]m2:AIIH\)h1NT7SbjN"2.B^siS@ea^K=ZG
%@[AIj!pj6`hE*+,n8E6pmN.mX):]q;]&27KH0EaWH\_F^*,!$&]t<%fLI2klRSRi^rF,dn@FdV9YJpM7i0LhCl.Ms#,;cs$f7!=o
%<a2alGk6f?^"#e"s5EdkEQ#iMfdeo'`om&n5;-dEm\0Nh]WjQJA>B!4q4.%ol`X)ClJ&B,O#j73>L+;AL!S)6rJ(p1mTZW+7V(aY
%O)3"?1Z@1QFl#@+^!=<<3[>hgn"Y6q'=lWMpM$M6^+4)rlq0naLQ?D"0CPNlR>3UNe<c3e\FBImB"h-L,6q@HjHhs;o!O+Rm9KV`
%?(9p0g<I!rm'Oe>'$h"tDms$?poeFnoZZb"p<0RtCe&Wk-#T2F>MV/d!"HW,EBdN2kA1(K8)#,drVJr5otPVk*0MuEj[5nn[egV0
%Mi19m7IdR27d(Lh:NmLMH1KTBa%;,;T%Q<O\Ge\hPK3LQRi[Nqcl*PSkB@9DbidGADX2EEq;'*f:<%d*Sf-E2oC1Mc]>L1;@5HeB
%clp)MkP!L';>#%SlZA1JPrWHDD.EAbcPO^OhH<`[L&VtXAb0'b<HI8Yqs6?0c1d8<+2Z\d8S`5<OQ(aW1@ji3f"9Yp5jA3'o4!eW
%moS)KemEng=$1^'f:d8td)sJ4RrI24cPY;la>V-]`hqZ[j3_$&bL_:#<D2GpoA)_3q3PD@^Nrf1hH[dAmk%,lL[WpYmLsqHB\qMk
%F*@PF*N0EqM3OTSO*nIT8,:kIQf:<5el7sp:@If+BD2bB?>aoSI-Kg0m;@6/h"kPO:RA=HoY-Ef4Z0!G'Z;s"(gNkTL$MaKqu0f*
%1[O_>r3IdFWoSC!Nl^"AhgOjFrGE=8Ft,uf5lZMGGb;0WIR,)2=G^M*E1=pr\?tVUh2NY"QC`NJm-7`;U@G/E>FSDLGLT&!GXqC)
%jcRDNXge/SH1KP?cIcnch`tc:@trrCN9Za]EB)N?h(BCGgL[uc6a*>Qa7/C\`]\QHTR$=:QYC)I9,!%'m_AB@os$n[Q$0b<C;hIQ
%H?fHjU*UbBIQ9?N(-n7rfD;kE%pKprGZo>ZU@hO@/q<*=q5rhNmm6!a2B4kM8COmU>7KG<$s\gXa"KWj:`)T4k]=2kDVaDF6Z.]@
%fU6\#%\PlVf@Oc,h2kYp=7PSOZBf>a3a[[%HpuHt;gu$#U2<(jrHm4o,Q<d=PcEBb\:`$I/[O=ep@G>sh^a6[FZp)YNnG?mk5KQ"
%[e#n2SQjpe[^Z9afE:sKI)!b]oL>s.s#rmGhjhbV)WMRF,5o3GjpB'^(H<<P8)#Q+%p"LA?e-iEpZ*'ka-V!akX'UNcnnEUqU*l+
%UTgg\kek(S9O<6ObMRBE\,ELH?rilk55LD9K^&\?O-e]SIm=/.qGI4:qPNn-K3!]d`Zp6QVUO1<hk+e!]P"oA2U^1a9/"lQjn-%,
%hF;YdIZp_e?WMr2o"E05-#;_Bj_A%C%Plm4k>\\tXF<CJ.6T%+YcVcl#1`.G,&TWh5>o3$pR#*(OQH8?qZl2@*u#&dV^1U6K>Yjn
%@dJ&Eba^q_n;:c?a<2jAo2Xp\Fc5DEoO07.%*RjXH#WX?j/o.r_c:f5KT,7rX.$HA.i%7'gX#=NpM'&@md*m62F=Y&>FTQT0DUqf
%2fFKKcGQ9j:Fh[tDf9K?IS1`]qdr8Q<kjtml$kfC1L06Vp)E^&9I6%^DtTFRhp/ua@?U9?a`b[<f:WCWn"Y5S4D5mTGAnr(3.G[)
%[l7@nJ(C/<h]H`7R.Tlp@C&dr65f'g:e_,Y8a<[SN&gV"Y<:Z^Ds+YJJM?niEt9bf9t9JZ]3j-`N9GSa;Ee>E8e:[%NA^\(g&$j!
%>;S;;Cm=r59jW<0)&0f6*h8pUirKB\CTZ,SM^Ll_E/e4/&2R42[!"jDs)oj?3]ZS]H7me1(Sf)Q;5r<+p%sdIg+NQfiJ2cUinb*<
%^Ih'ZarJ-<%jUfDk?Hi$7""SSQKA=J^E/N^l=dki[e[M0,Z:%;fa""%q1nW5jiu<d0=)O7FU.m$YCda"[@s3LM>P*l8_7mMI&q-E
%Zhs;Rp0CHYJ.kB\V`2*,<`D;#P`FJT&E5n-rcYKLmC2E9?f%Eg-/Gp$@8-R%cJ./Nhk[P,(B0iVH""7udG?K;bBEU0noEQ'mCZT\
%J:0D:rJ#]N=+pl)eTX5qYC5n8Zdt8LVMIM9bN`g(0].6@I",:FqNrJj-&TDpp%X&G0+T.7h41R=5L+b]J%280>M'OCs($bNPPQuj
%jNb1`C\aMjmV'ZNd#9o5hC1"hb^,YG]oT42Ka"^i\eF@b3au'8qrD_NNmqTUk`9[0Sl[o#*@+QIqOE#n8D;QCnbgW-G3S>%eP,;n
%XhDU'V9]>]`LlrB[q]*"@*n`>Q]7QlkPNR$qmRq@9sl*l7hRe\2dU/g&B"NPV@if,oDHo1S^3.mQ>HSGAc(#8:TJDFQ.FAlDnGr.
%3Hb#gIcmm6G5K`os7?SZ1u\-J3W8T:bi)^8%kRbLaWKL39`kVZ;nIELVO,HsIA?=BHGa<=#HdLT(tXb>^f.jCC*T(>1J+>%&,0nI
%7D%O-Lh[`9O%&o_B7)e;<d5q-ceR2RDk/h5rH,S5#Z#aM-X1duk:&M[1Z;a460YT<X$NLfmkh&4Oi+H!UFYd;%D>kb%r^<TRQm$\
%F1Be&]L&F;7uR#(O`LDb@GCR<QEgNBT)A,N-#T5.QW(j=1P5*6GFeN`SNJVrZp(A<Jl;!'R_K;M4p.CsGbp4g97$X4+9*5Js,353
%d^Gq(/jI1JH*0kTUi##\n;*4el^!1$Qjh0fq%4k-2ftO=E"1Rmj\&@*?XU0%gs9i5em'Til(4J]'$O,jN[nM7A*PN6h]4(]fq(bh
%/+#?'atqM8Y'KZORJ%ZW8bmhheP(`;R#^L/Ee""B@#jCMAeTJSGJkTOO(d^fQBQ?*lHliIO_NHSC'5jJWCF4)S(*;W`),!$K:$3%
%0jJkM:0Y;ILWJblQhH5r+gS[kUij^4A(WQ`1Q<6_i`"*]nC:5\X_G3]+ZtXM_"]L$+LSSHH@H&8bB,GG]&RP6_p_&!j)ls0[QP-4
%9sZsCT@orae-peEb9mUPI_ab(R[1CL?!c6]_3bV!T!f'VML`Y_cmEc&/HH9o*X@TeY4:S@QE;u\W_H&)+Fip$<1oA^%;U4X&87nW
%RjP!e">juEj2j#m?a*f08.p/ZCe'&@)*_1]oa',VQqd?DY_WS<\I)^Yb$uh7%%u/5R(V'fa3j_I0\b0$Yq@oc`!dN\D>700#@`8+
%;\eukVb(VK#=EMX0[:LomGdV#;>ke\/G`IBPpbWgOtC7^pO.`3`=\c:M\ueOB%lo01BiTp=^lMX*rg-QNZ\1*(6W(;7bFL[5e:S5
%O9d;gCE,tc]0$:=aa1L$>g9ZmU%^C]1AEF^cSmQ^*_hk>H](Yj8[7bOnn9r"'^,a5"DBPb\g+S:!PJeV`kq%f6m=n-@0mK>4%Z"2
%'45hf145WI#1U%'SUfu@l!AlkbmPG!3.MFXZ%EVo_6Qla[LS"I)0ZN1%:/6%XOT1;Rnq1Z1`,esUO]#.FQ/BNC*A0E<N,AK9$nrH
%FKDC0'7fBB4ol+*4A>S'-OFeVY@D#+[iSCV$C3,+dYa?f[Np[(R1eN-dSV/'LA/Nf(sp32KM#=YI]9A]6j[:674a["Aq<VAGLa,a
%:T!4[9Pi&EKd=1*,pl44BpFs[+Bc-+-IhWY^)5q@;Mn]u+u:]dARW4Qp$\?0%VtGLL?Cn43%bL]Mm$VMCu\g,R0M@^,lB_'(QU'R
%PsTu/a]trnUa(:c:/)Hmb*cchjV-@6A$A;o1s\tFN&mgTrQa_q1l/t@=ooWEBNqV@"N9oa(BC4(1CeE$#*"-6?H"Y/`n*+OD-K-H
%8=J?9S`KBU0R%c1;*65*d7Vnnk))_t3FYjT\>gJRcse5p#p,J@<)&@L_BTf`OX@JLeS1Ju!7R`XIJ:d3La\8\!eQQ.U+q:3+\W7M
%&g:cq!D2]M#n6nE&cfu_XT6\aTMV!)T<8h>:d#tTAC5F2Kjm1K0^?h*^VoUUQpnmTR,UJ#,B:05,-V:FE90"f69U_@q-`Qr8A^:[
%]Eh3_Y6l2i#,sTj9-3L28P`7d9e6>G9iBpY0eg_"OP;6-`$YTU8;;0E6cZT'DkqYI1W%%?Le3C)5jYrt?tlFXbMkV,LK5`En_WG@
%Q3N4pN8lY.n6Ic?-blt/EaUT,S=0X5iOen,lS#OQpkn^(isUiY_WLH6"JgMRTM9h9in,rpJ?\3-&9>c2#pJ[h5I:k_B]b6P/PEDQ
%`&2stYZV8U\R:7^+=KldK"b_a0[HLs[jCGX!&!%OT?6]`1$2U,R]IqU7eV?4L<\bj:t)Km"deFsbB<V*;NeU;3eE9R,&*s?/8!!_
%WB68bQi2nO/tnL=6A([o>]r\#H;K([f*PiQeCnDN_.J5[#TZHF9H4&3(-ED"U+>jAZ=%Q4!YBX3LMj%Tf42g`lXMqW:Hmj+FG%d5
%+7$jX7hf:E#@gG4,"Vc70'%T1_La,\SM`W>Np/@D[Ab/HCc)KKQRE\9_*jq#4P>p1nJ\3#8I;%!1RW])=+^J_`.XD7-O^0PX@'*&
%0--EMqON3U!AH'6##qX=\e.1GGNqa#(53@L9IuV4#`&X[PTc&q0uW2#"q[5*iFYnWAJqd4+)2c,h\I<&RNirh"W%H+^pS`l3MMcJ
%G/Ko^E7I2si<Ka'!)oF+"bs;WP=!c%m?,oWh&nu(?Z[,o+[1VTe,R(:_/eA!Y+,\?6Pg,jj%>b:EqsO+GUE=sJf*Q)$%5-*)]ffG
%^*/tkL6)O:GJk-d=]DWBp$b&8@hk'VZR&dXVYn`'W^4]:EC5r]6OJLRX"Ai-#8ptWX=R^;"T[3o5\qtGMDubU+N5hEdN(]:7jcnu
%LnV@g39]D\6f2OuoC6'?e;fO_Qjp;54Hn<eDYb\5(CpX>265cF@g4t\3U.*KEWCo9!J0)1`5gV4_07N4'EC;lTk?uRV%3TCdgX!d
%J6Dpn?`8+Q6XgdoVrpU,,nT`t2]U1pB=.qN`O(<p-dTmH&6BO6hQT,7+Z`^N%0G3'!JCVfJ?K7Zq:VpT&2mI#Lp\f>,\?)A]!7rQ
%YeU[6jq(EY9$)`4B8C7-?,l)eg-H>*&$@-Q,=?)uX1h<O;T@@d^d/$MkW6mu!3KNO!g(V;7njjm8XKleN&VaL6gDh7)f3o@!Mh8V
%:E?]Qe;S41VL*&Z+X@s[!X<=,>m6UV&t"Tf_^7?VZ,]?H+_`!W*>S97kQ=^r3p/dsA1(JKRY;K7`2'BLa:#D#=9J)^cbnI5.q+H)
%!eL^/[_*0+=HkU)5rTAu`o[h%[aIf;h*BM):j(`)!CX4rTG08A.$6Y%O]EOF+pG^PY6l=%[;Yps\YD#I%Z:D+9&XG4'Y=@<nfrfZ
%=UD\H`$l[!&NY/XSuXB$LaatBf:\TETSsW$6A0r.6Bm8iqGhO1+Z4;eA)\9?!]`R3d;gEs!Z$g!$6*u=>\uQ;'&'%P&&g4O]FA:#
%+^m$T%##oTOqqL?2H"3"h$arsNWj%0.U;IN*RBQK(TaFu\e,?WJ?Kj<>_W4^W<aiI,4$Y<RrBoY\-Pr,+,7Y/,H=bTM#[mh"'?sV
%5rTt0_fYj_E$9_,>B/U/@=_f_:lg9=+?9K2:DGMYgsmZ'\HuM9Q3u;8"GlS+KX"L0]``?hNhd"`J5%Fs$4T>3L5Ccq(PQA+64qP5
%*fPl/,VBCeM#&Qj@**JBS=[ijE%l&Q4D6Lojfs3YT46u<]E;4+-M\IRD$f.Tn@f2oiNs7XJ]KuB^g[_.9JOGH:Z5$"(s"QddE4b@
%N+*f%f*qq/enF7\\:M5(7)37?.-W1@TeVAcJ)/Kp9kb^rj<G-CP51n:>^4<j&8<jh(VYodkVWE\>/_93,SGj!'B*7pKos^DE_f!Y
%'KB2!G86b^5]S&e7)?>I!BKS!(i)`:A6LMo9Z-iSLr=n?VuR[->DrRbU;HmS\cXbj88]EnK%]qpbS?5e1g=E`9"M";(hq_5O;9Nj
%Y]X,f^tCPLRJ)0+bp_=Y#RE/nX:SDHPO&Di'_*=QTapH3p)QFE#!)4E!!]A;@mCq=iZE;=F6+:P<tHJd5f.fTbm5`\=jRk3)mUjT
%I[FKol?ms2_Gn1'VI6+$H\r%/#R10af+C;XhJ``/S`ZTGaKZ4EN;;?p.8E%gVYeI#3,2M<6ldu^7Yh4R7E?"gq!7pg0@Jp$#<W-D
%*]UGFMOBWp6q3%_^tsk7.#f46(L-8SKZ&-V!i>3&oFuT&_0@[^4MWF]VN<%7)CFtJ\`#?+A.>gRRd>uadN4jkmmTM&F>V5WC;T+-
%/jgumP4>l=%8jZ56=IUEf$uO;UV`maN9kuA[Wp9?oR&lTjQ,H^aB_?09S*$+W^bm/V3*+QYrK-+!,*+W@59EbkWq[F_Vd_Ka;]dq
%b</f^^'*Lb@Omc2.P?liMe(GS0A6"sL17f5;cF2.V5gdXh2Hkd;23CrfpE&=C0\Xj,`u8ngFi!(V7WpH]#[r/D'C1>*3$N(+iCmG
%JZL%L^QOlQ>B4pM=,;E])[dBOUhs(-W,;YZ"<E?tW:rP'`"YtNjY3\pM@7\6cl@,.3IX$IO(+b1i/_8<j;s".@t@K*4jp)2k`iM"
%cArDKLAkqX(.Rh/kVNJ\IU!7149q#?rN"eM8ZIAX`XM44Eqj,/E;U\.#;G,o(:e1qjh5A`HtlP(>^q:+>PP]<W=R(^JGHiBm@Z5Q
%F\iW)4G9A<I.?M8b-c'716mIOCc53E&"<C_fF*kJqGm3eM(Jr-h&7)DP56I.0o6m=4&&\KOmgC?_93:N#XEoK-im^=#7Ej:X>)cQ
%n"drKiO3.XLmnTBk6,f2-_5Ik>n,9$/gcuDh8">X8-41`P;$Z)gP</'4?(/&r&/TP,3%!Jmjinca,*-UCT18[iH,K12Bq&.4>H.K
%ID_o#[,=J(6O9AW=UGVDV5T#4h(8W0f^^B?3aC#:Z#E6DRR"t,eV=i"q'cEnZ7C6p=Hh8\_797V,C(!&d-m9;$Z')32j<&<T)lN@
%E;]n6c@MgES-Hr1-K669OZS@=ab#Na<PHbH\V;#3'=Q"jr$WOsKh"*A]_.=P+u8s:_U,in(Wt/O!:bjYUb43ZlU\Hg^6f0>AHLeL
%K*2;WA-F[qU2H=BS148Hg4h"YEo>@H^ptW42pAO`baMcLSmfcmF</Mj?l&!E?pgeY1pRQg#fAK)/'l6>s$!t8+q*VF%biT@25Mpp
%22d9V(&2$p:K+&gjJ,OT'TSm,LNN]MI)?Pc8i@$!>gt6l_QDlEpXo>0i?F_Q17PPV3$SSg,:,M5l@)3[K1="=`mkocefg"e.ZIIb
%NKcO7(I\cL:._?@?=5'bkKu>ld9<ZW-!d:2?_c.[@uA>YdN,20Ok4a7Pk%^=4W=%XKjUa70SiX4\P]%KNhi5Kh1LNU'=$Ijl`SKt
%J`O1ZC6'X$CatI^"Mg`5KW`[TLD,,"%]4\[Mns6cgd:C4Qp8hmJ40X?UP..fLIN29W?8/cXcZd0Bf2Fu;%^/PLRPT]!t:nF`^?LB
%@KVcK1Z6`^UkM(!Zo+Z"CibDD';.r&4;rGE2^_"r.A.SO4GQb!:upeUi?a38O+YEck.qU6,I81.%$gQ`fC?[&1tJr0IN30K0NIO8
%,d4J,@\?[pA.hS7.$#'I!/!dpC0FtYB4AI_Cr9_ja?#\n9rk1Rf/#gOWC_Ed8((Z:&59BVCa-bg.P2,d&P;N%4p"gpk]8B'5lVn;
%.L=n8GXDmo;-.s/9c(qak)q[HF?[0BEr@2P&6@EfH\<`GY;Mk-#E>X<;biuSB/PA;g[IYDi>r.]Bq;%?(V5O*Tf$9LI0@^tO$o\>
%i<_8:EGJusdg*I_0nt9=TXQ=YL]/c`lVRuq%Y5GuIE+V6a#&?kD?MHsR"gL[&88qO,85VLIH6b0!%CRc&CVq6(*"7&(h#Y9H9LK`
%E3oV,;pbr&700b8\CCTk&7R>CC\_r;/0+6-iNCN1R^?BiD[<c0P+!qTU8FE@/_PXt"ehgoJ47Kb#N%92G>Ehp7g_nq=Sr0kq>:J4
%4E394S(SESW-@ZbZRQ`I2tff["e75"H)A],M\:/%Q;?b=0#V]36&oLo&XQ!88DOoa:uonLIE4o$;og.Si^Mp;f/isj!$mh_?n2@`
%)U[XQ:#M.pb(E9I-;Io&_%K.Z6ME<@oHdpb,>grMG"sO8FDW^#U(@=I$EaE2+`t5N#miiGD</6lXogpC55-=2'$Z.4;MYYUN[Pt-
%<kR(9r'R*iE=-'7i.S.g'gt8gjJ;?,-<eD7mJ&slIu$m^H!KD4!tFo/Y8e#Z3C%%/4ITah#+=76D!>*Tr'J)D#^Ie`QYlM(">#GL
%@p4hI"I^r9%$,-HQ"IVK@d7E$>=7P3`.K$ddZKInH2dBm!PB?#e5I&l>%2Eg,VA1&b=(cel]WUu^bDEP2,#+j:5[KoZ1""P:kt+W
%E<HO0`aF"0%Y6\ckpB`53&N6%Yi0SHP=!AI2OGc68!+:iGGokK/Ms!F7"1098'h=uFC[m!6&]<2%&AoV:R@#+hMYVqSGdFQ%-Iq5
%Cib`&D$s>N:$<fU<"&kp-d;nTi1`VCQo3,&40\o57_?;E*"N?XROc_5=i)VB,ubm]+I<9P&ELS\ZK?-O&e>o]f4<]&7KI`HJDr+c
%Hpp7E?H/"kJY>V"9[]6J60%<hKcNmYgd>P6jp5VQdKsV$#jS-&]dR8@p();5;+V$Jc7le8SD&l'LDEXi5nj)?!1j>P\/SQQ&dAF>
%#(U?\+9n+p1qCIH+S;n_CAU>Q)8$/FJmh):5"'W;U^Br/N^02l(8"S-NjOV6e27g`)Qt!=))9H=8%tC'"];:8$CaKF+\rukMH>>E
%hnXE1NX\lJKZ->dY*\qS(g0'jMepgN**KZX**M$kbC<VeY\>!+-cN?*B4r>M8/F'G=(>hu2W_J(gb6Z^'WsC9TeMH-6LpSXn5(pC
%3:_R?5a)W2VY!Ud%#d+bR":!F=U*S?4p!eG*6mFke]@,%!)AniIid&^N[^H`Mcpn?.7NO)kfMi2&BfdO!'()\pp@7[cPDCNJ0qRQ
%*Wf$e(*1@K^G+KQL/Y=fkNYVp*,ogjE"aBHq8C.j-LHL@'aZmi*"[:tnZ-QCY">`%&b&=>GVVW'ko+S_6l%e7=gUfCLqD;:0ECT9
%e+X_FS2DDjV#*U'#?_@c<$aG./<@a$,6`ij#eW7V@Gfdh(PZ*';Jc7Cao^M$\u60k;sCW<j\[[kK7s=m*I*o18jd>jHq!a\lk&Zk
%8Tb?s*[d-0[c(m1E5_GOBbjOG@4uJNAZG8B;4L@S?qm,+UkjYt#`@[K?gB0%J[)Cml.EO5.Yj<FapV=",@);i=QfPeQcrPVKSq;9
%6,OuU"OP6],Cm[ePbf&[C7`J?#Y1+2)Cd!Q8=o;G!=[(km-u7t0@cDMeVP:p;eREV.#>3;<Ce)M#$='R)%K$EE]OIqN\p*fiA)&u
%(iP2s+L5/fbJH+"aGkF2L)-)!]]K+6Xn\#%RmQNkQseBQ@gPb1U^2VgS;5p9a<JK6*<"uLL4g8O<G\WZ\r\\$*%du;o)'W3115ZU
%cCtOd%GMjVIWD;>bN)d;O=3M=;XeA:R9qd,(5n+>Lj:^'b[b]:2qd6EFN#lsN>@Lh.K:F)YUR(JSsd^D<L3ae%NuDa/:ACoP!<CU
%9+PUZ!4X;7]]qXW-p']tClRoSTRh^uM@[Fp9T]P1]h*6q+Z.\bA'A>q&uTB(R3fc[L\ZcY4Sg94qO8HZ)Ibd%1-?pr/iK3<T:4#?
%n1WI:i(>0Xg@BqPJB7oJ6)<Im;$_GCE.f2Aq#T#bC+a-eL9.FjE<@^rPaO5E:ra!TBoY&VEVmbdX"bADAgVS/8<YeZW>?@$nXe2`
%:E1Y4c-TIR/FbDk3n!9d;!s2>#&P/M,)VC8M7=E,X39Jf*5DXa7Pn4=&5CC\X,D1&?q5Y"n:Im`eCgTAlU2d765q$>,<hpAFAp)^
%:2Ws#1erU_;=qc,54GZ6WaT"RN70F)@QR&`7s3L@_Ac@/6[Eg*IN<3u`s'lNK'hNiS70<tqbUff*;ntH,mg4i7>BE;%@O32+`S2.
%fdMI34)[dp@c]BQf]=gsp:%;0K<cMM1C"hj(,.EbDs[skD"7@Zd>*;f55=41N8*8[;ha0th%!>u-?#W@Q#mTr+;np'RuNM!h7)Vk
%PKiMAM5Tuh*>GD;Ure_HP`Q<;>^7<_O;hUa5Y#OMcg&RZBm2*o41U+@?$ER7&8ApZ3sN>%,K*BT=r^:Aj.O%5\Db^BgCGTsLW;,r
%8?N.-Sab+)jAH-@"?8K!Quq24`:sgiB`?i>q,`@GM)_dP-mQ65,=JO6PriB?k0aM<@"LoD*9d6+hdIVHV^Z;8bsh/8jru0:MD;()
%'+DG^Z\HHDHItWJT.k&u@N^rOOK8iudl;mtiP[FN`ea>Er/[q@iFS6PQPOif^?L<.9;V$*^)[USk/*K'\gY@4$MEOja+F$q7A[_T
%JomqMZ.1F+XOpui^Y'93Bn0?6B7u7Z;R'^i4N:JQBgue3l:*bM,YX<l1Ir*.]pUj8iAtR1.`5*Yl:'>_`f)Vn'9kd+"_5=nMSgg*
%0X9TP#484#0KA,]JS^]c2PAhOW%hn;;*9;C3>B[jjo^XRSFQZ5gBf<LjuGdH'Y')?i.qCH:mP%RlVSVRC"(M*?:'/Z8U_mLW:[l/
%#s'5:_kX2f#*OMBPT[smC_YeHoJ/g5q:]pAlotuGW6>T6fQop-'/N;l<Ji<L%:>ep!m4CrE%P5F#WKN_jS=PdKRaoK!g#cJR#64+
%g@J<f8Ut?<^aEq4&L"cC;`3_0dBAIrLO1b(/gi>L#ULH!g_(qlZNRM2!)`XQ3+?k2?]Ti=+(O?ao:ak1ToiTMN3e:/P/(2'o':;"
%TofQ2EaKrPN]Kf+$sYD2W](WZD&A)#4Qm&kW=9O]3W-LII7*gW:@&>?#]_4^DA8IWI"JP@LSI5c(j6i!`7VAf(p"R,d;3Tm-ghkd
%[Xi:J@.XG\'-SMD)8KdMaFo3g7\n20L\[&O_kUV>-((Q\Cl`;KGc1(+I[Up)%l]>K33a$((.(t)L-V#XdC0-0UAcBn6pkNq#V<uG
%3(76O&L4Q#!]M=A+onR#$t(P0_[e!'K>'k.P8hQKU08X*Yr+pL(H8aYRZ.khGsR*'J4L,:UMt$ffpi0*bHA?K"gr7l7'abZ4X1"D
%'qbR\ckWeClPN<U&\nGn8:d6!RYFZM*U@(FQ4EnaNsiaTJXZut7Z#/%j#Q.N.Oi7u%S:_XTQ%?h5#KP+\`87GJVJJ%?@rJ(bST%o
%7g=i\-[%l\Jlsp)=-XJg2N=be$jY=\@NLYoPlp*e$p)s>e$&'EfAY(YEcI(t*jK]uB%BfJA`Lj1\0Oqe6(U<LSV!+GJQ,>W5ugp[
%HlhJZAIo"jYu.o'">.We-ERnNd5Pi[LMU4'Vd^l:Wm6HoWn($2<u;MX1<QlW=?[3$rgJs=l"r3dE_K-+Cb[]N,Gns$]F>u<ecro,
%B>\XTc@l-H&Bj_+9GO40*(9ddk,-YB2:"&FP_t'C`7Pq-A)%L-<TobI%l#Fjb-,dlS6Qd:>K3ZI#L)d6=&n3pW+#F3VNpi?)KtI)
%4&Y#<5[B-G9NC"dclud-kCd3_Ttqip1djal6^F=7)Bn(n20h$iWlnD2!j+U$(8GQMcXEN-%i.lFe?RNY@q"oD7f'bmND9m0\WoaO
%EAKa/&ZS0Y`('$58=%H^@KM6)p7E9_kh)hXj>-Vuc?ae%9uKN,(`"L1:`poI729?!$d70Gpi7?*r%pNhLH[9[\8`I>mY`WJM$l]`
%pZ#ih96:c_E+,'6ZjAp=`C8+ldG=qe_d*q_QBa`e'*gh^(.<dC0QiK8>BQ1(r^NfAo2mD"6Er6Xp<5f@$Msi)XJj"7qgd8egMsI]
%gKO5K`AQ1*Jpe+e.(D\!EeAWrTH')kGCj5A(:C[WWbqm8TK%U`*58h4]s"./UA8c0TFs='"qrO#)U[_-WGL>Z@JmKeA82ODU&N&X
%6.Z^Lhc0<.bG.YR,-kq7+Bhl'8<)V?$9dI@L%=^5-@)?WY*"W-fFirG/5hm"_b?;(M+/h-",B[BiRV@+kQ4r4Z=q@raT5k3LRiOl
%`SdI9)Z[O)!h=YmiGMmfg_gM))Sh'=p+Ven'up='AA=./0S5l@Eo"XO?*(@;f6(pCDG2tA,LC]4<?06&j[EJa>)YfXcM03BUH'4n
%NqB?IFfo+Jd5tEmECW4\L2P#)\G#uG!n\0q`9mLOVSZmJ\CVTs*J&1&bN#mT,M!D`A==D%/cs.7q:c0io5c*)[6#?i^c%3.Xot!n
%9*,76L(P;3G9c_a$.eF0Baa<_=;aD1S/)fd'*fJl%L]=C,tW]U,[;-nl*5uqbBJnIG7dAWV$]*TFtfaSEXM;lO?0NIQ%^1^#_idg
%iad6XoTl]Kd.(5LjpuMbK"Bt61-h/mL5a(MPCgIN8ZpaVog<R%b/O5n@<W;SjdHN&>Ag@gmbiDa3_pVpJgAqL"I4]REO*1gH:Lob
%OA[HRB>h6;J1$BAlO(!9LZ0;d]QG[g?n=#.rcd"&_nbs3k)dkEppLiW88"pK:q[a$NFT00^l_rQ:?S<pb;+ipSdL`T$6u""VlDMi
%_#C2cV"5#O(NeXG;;S.i]8Jr%e>lEFUt"h..T=BIFIn@tfJ"Kolu%L5ldC&D^uDiLiiJ*3;Fpn=cgXp<VihbY49M'F[N0:bMnL1>
%]*P4<;MDE>;S/-m9H?(?Gq+DS6^9Xah$C\YU%<L[;tl'X(."d[!m#CF<Tg@67lh/k3k/0\D$\:<M\(%JJQ/eO:f^J/G>a^*j$l(*
%78R\8&LY10Tm'K!)135tpp-)_H3PH#$(l4#8kXk-qG$?c4S1S54Vt:qGeO_4*u4+7^bs)8*.gV^3/V,%<X?mqKn_BpJK<G_B(4._
%hnN,1gMcWAgDVUPgBpNu10dt3\i=FT.'ggKrhb5"Su.:,%$qtnqZJCq7qBQ!RgD[U`;X=N0Z3&-U\NhIS1-C9(^C@'DWj)EI!\SZ
%^P+p7Q8jp6W,@uC=:=kbEC2t;W1&acJ."5V4`ClgEB"`d7*fdkSMYS.>IlC*>(12p[H6`8rq4@'\GhC4bSI`35]KqkYa2G/0l8tS
%)%fIBG;FaOQKCguCH.Y3kJQh+7nt$oJ%5%QQUUGR52HVKaQC)Y!&>Nqc6Y^>-M<$DE^/'8cODZ82$^(QF?nK!*+/F3?p6F'Fl^L:
%N1OZd&mukq3/6($SrP>'";;#4,dCCSgg*RQ3Y,"bE?iNN"$YC!K6/J_Dp=C0/l%--q8R+u_'[p#m;u*CiDq&"ebRoMa`JVnNCS,1
%.#cpNlWo*<:r?CIHuB>W&R9*!L\63"6Ts3+/u1frr+71[mA5Od]iL`FbQ-eW[_3h?!,@7237bVjmTekOeH-2[4,18\`-*^[:nU1(
%r[&;Oj5L*(?a&-R)i9ITF:5Vs9SI>AntKS%Lm(0b1oKn)?JmTP+e\1#+Kp,G+d`mR/9m@(Fae-X"fR@pIBJMddcX_%OY_Pn$DHOR
%0\^XMYKt`1]K<VI;:MD\J.>>H'k<kG3p\#Wlr&dY34cbE8f\6T:>hpJCa^#8%MaC5%5lSq.$7rLeo:+h+grCrdtTU;j$Q,'Q0[J]
%Ehq0;0X(uDi],6q&,H#FP9%IZ6`@Ud%#E*N;"VfN'=Uln50EnIK(+U007oEW+Qp<uT+Zt:E!Nb,CNI@2IFNbW!eSR>h$;n8:(@ca
%3l20n2%+g)Qd9:pii#Ee)IbHQ4>=bc*o`ipan7jYB*D6#V0-'K/7@rd^UTI:qMjhj!*gr_Lk[j+%*0HH1-u8N_3ERh+TS5m#A7oc
%Q&"6X%abRJk+L?J(>clcGIG"^9R"Gr9]S(-?%0-]Q0@3K\5=._5IV)ufudo#`%[N2<Uo+U0"G((a)3Fi+"oEpigN'U(T3fo]9Fh_
%6:I5g8s[u.n1mM4.ZP[E@BR7H*mZS,U?$g2b@#+G$p9Oun:nKnGL:Z4-$Cf\>O]2u!(T7IhU08ArgZp\O_,Z@B4VW!E/+YT4_YhO
%@]D+XWc8P<OF5ThNIqHmiuWACj]1)"$6fm@<h[^KZ#%nLC*SgQ8,fhkJ#MIPFnptI?h4GXE]jFW&<B*E4P*UV3O,B)O#DS*7?0pj
%7!(&T3hF(TL"1rd=L;u9pl6e@,r^o9b)%"D4@?b%V0QMT<2W=Y%1Ijd3$4#tE!V^^Dri4<SdN=(EDb:.#Fb3-:DJ\38-ZSmG_X[i
%O=u8dGc$!n_%!?Q'p7tR^n*7Jk0\0IS/+4lC*@0.f37b"hDjsKY!Ok!dC/5+EPWSIN@'%"nZHW2S]?-@]9dK?&8jDCC`26D6?!=#
%Iu#X_@Y7s&H,VmrY0HEFi3$&S=h(!N@.%J^F9WTA)$%<DD$_9t[gnjS?TeP7OPp8u`<q((,$;'4^0hcC7V>jh(r4HQo0)i>/gE1C
%nU+,;jDX%`G6W@AWY]m.3L5>LLQ8n%?alj]^co<0M5Lt+m.g0M?tSD=>$PYsZ=&.P*(!n5_6(0,rOn4D/e=3[lN@hN/pV&0g4<MP
%FJu@!LODPSa"jp5pu2l9b&l[%LDQQJpp$ZNj_9%Wo(9kZgP-Xuj'W(qhVn>%HFJUU#D1s(=Vj#"@cI_O(;@:Z:P7@(T?23kWl&tt
%1UEi=:m-[e]29(c3l-6h\Gr3NS3#E5X9_@KNM&pLPjdP@"pG(_-BcRbbXNS1<aec>DV!05d<H;>/qYc`G`GrFT[QhcMBL;k&M1^I
%l7'MrR(h@Z5+7%#&b3N;5bo9ME?sU#+r8@]G`0EE&CD^n=`E);%81ETf0C7gdT$EI3$#kP'^hD=V'd567lopc&gCI1nHtb>\-H:K
%;`L3V;ecMc3@^`t82K<Yk+Mq;R%c2$)Ai"$"lib"1=m*`i_'C^j<j.@OKE338-BC#&7!'`!Whgg_\%'g5f*O:QpaU3.7ATO_I&Qo
%N5:QF7j8e$!jTQRD:_`U9AndJ-'2Jb2fuHq$V/!5]*]]9:.n\32Gm8$BLN"Q&fBRRJJ%1QVd].FX8EjH/"SXrjc@%`g`E=dR=XOI
%4o#eaR-4egM*hCRKI5t5&?KP17K.DC;dXBqqi!C<m4!]:j+X]KX.Z4!nR;9C=o*)\=PW*^M-gCL63E&&Wqn?&8K`N@O,^JV8i%E[
%KqWZ)6=QINYWurtScZ`c#)qV=_(0=;iZ<8#7,dU"5SHq*)0#[6/QB,-ZY#S\5V0kW/!,Q=&M+K_W2Dnf_XS?91Z9m"NnOh(XRE,O
%Kb.h.&/J^ip(Ut"7,KX*TF#hbY[RYN_#gSjq,U-Wh+:#o-5c[N?/8DJ=lM.YV5k0%:`dITWJPp.,V'd0&\n[UYZZd/f[UOe@nr%i
%Qh1_W"Iq?cXP.tO9!Igo7IV(l0>e+N&(V`ol"&FWo?gF)JN=8]#!bp4Z?Lk*'F-R*pbJj:oK4$bjlS.\qT2ri7L*dfXJ;p'n)ahA
%fXQ%X&8tjbo%FBMFZlu.?8)g@6?XNlROpjF9S:[cH4pfO>Z*37*lDMA*H0tG$&iiqh61csa0frJ!/cC2]Z')=6Jn0!b_;!crUlBV
%+M?<K0iaMjM)73JWJOWWb6Lq\+GVI^QpIn!9C_C[Jnl.IU<Ac%?WDh\lc\%C3CRW76;S(r:=%#F10Nb6MI+":/C3*m>)_p%7=GE9
%aU'/rd@'U;.l,uf9fY](G>*FQ9u<;)O$D2YR6PbT1u\2WJ<FIK^t@!77`3\!;=Y`/pr8ip.154JaOYuhVWBd'o%Nhi7iuSaGM6@7
%Dd[GB9_aDDQ\DMUiWUMBBjij9D<g]ND%F,$1W0PB/g"F#cjQEL7#iEe<M&T&&r9^bo[!9R"+n-97or2`X>j'CJZ<H]LRBMK6TBA&
%K;2ufQQHK=Xgp3Xi/(t@ODrOq-/TAnI2LU`^*>Ct2IAk3_b)1Mcl$"0jg=AZ4q;7]a"]tgPGR'CE'oX^"*3E`"Q=5V_ihSj"S1CA
%(8ncef,+5t%p)+B-#WRV)*sYE^sZ8Pao&7+qasN,fQ&]JfRF$dB]N]5Q[o4oiXeZ$K+_&MW*k6l$uqAZS4MiOA0jn^.7ae1<4F1L
%*o^8h]!RHVA`/L=%B#hfJp4rrfb"c,?2$eE%EIWG#Z`7I^FVR55eM;sdd41g^?bp1oRnFnOL!dOo&+7=Cg"qol"*p>6ldu^7Yh4R
%7E?"gprd!7NH-'8e2=#L<.R5?I>WRbH*'$.@n.iW7)b',AMFF;TM]FCpR'WK<rlifh%GODG?DD[.u9%_%O_?hZ-aiD$6+][K`);m
%38(A0Pmf.lTB!NR#nTh$*Jo=:m=Ki.-3@s%'/pr#&[3Z1gGM)T!_.RskOQ][Nj:H"iEEVIo3X0Zr+6Le;6IEeR%5hd&oZoGRUHD<
%KBmgB@4r;kNpmo[/dd1\k$%8rE1$hYLB+Tt1NkH^(2b8WrCtJ#4q.4F_AN>22S,cq]9>/r;3;63ja5\!,<N?\n!42;(]/[lp>6!j
%(,?4NfXTATk3G>&F<U+\i5$3H714I7r"'D^DQrqG0hhdlj^g&"4!n?_F$"O]4lkDG4$Q8+&<6!Fi==k3'LVtjL`a])5tFgXN0G\:
%L,e4&f+!)Qr48,Ff8&iJ,<Gn8a?P2oG2:$]&WH#mn4F2*U)&.!:E%nKU<XRR])4gV,BiB)q&COGK<f8?6^FGR'H?>_&5^N>fMM<4
%2q3fmOpa1t@1r`N1"]<XV\S)c[nXE,NWO.U;2;@$46kh59]"!9j^,+"n/E6*",1CgHLgo-bT9J5k/G3r+Cb\%fmXiXg?P!Z[.U6P
%@Gk]M?#IXe@1"pQ?*X-A)(_6/NJD9ehi2iFh0?JcUZ#XB&1B\Qo"U.Bh0?T5K\^lG%sR'qlZfpO6&(f'M-RUa/01RL"WY*hl;^^5
%]+'`Ko(^uriaV7s2:^E1gj>p^B`[9T&n+B(\]]3%Ea?LpT4):'X%k$\1Z7=Q]!aKljC3.O_p;0bj]R<d(E)Ws5ken`?H2M68?ugI
%&<)-(bKoL!>:d3#)K?#TMOKc`1#*YmnSr5K7QOS,G_'IKoW\R$iB$a6;&Uq)Yjb.[c43o\ZNB,<99aouBMn+YlCq<[!d.\d*lhtY
%T"p#O5S+;>(h2saE5Y2>YQ_JQFW0ap79pZJ#Y.'<lJ[7*1n1ZT09gqUGl&/B_%=E5'6PJ,(BIYNEga2\P&O!6?n4=ZmsN`&LdFja
%Annmu+j8D%(1(B&,+<aIIP`Z&Hjna2J)qU0OZ;A?nd/VMfIaON&#q8>Vo8bUXsLE@GfgMCk+ca)hXcC[&WK3[*1jX%\K-rdgfShN
%b"3K5cmTig\Lj_p2>Bm.4@Laj4!P0DBLN>H[+dQ5"PXD67@)fhJLH:(kTmAL"0)Pir-U%LqRgu'a),hM;*6%Z>d,!.@?>9ED\r_p
%@LT3^&:H_X(k#_SS'nrgCn-:4rLaG4j/c/Z/B32umWb"G@/0P"@.\`S$Fj!M5`q=kG9E^/EZK.N,5O$V[P*N\'8''jfR0jS$II.J
%ju^3a=V<[AB0`$(=$R/'/:cnHG/L^u%oW*]CBqDYq9Ek2!4o$D@-*->Yjjo8Z0;'WB,j8V_KGk'YZse.>V>R%PW(.F@tE%j5ufVN
%\(">1ag@Lb$#)q)DHNch0`/C#f#AH2\?IoDn3+g$;cs9YK'D7d*Yd'K+Fi7(!J=6/\7D`u)DT1NmKOkCF)a_0)Y12:9V"NFq#"@s
%/B32SS]I8:kj*5mki:u3h+1unI&I2p:VQIXCh,.l"^$]a'ag\]`r`$^CEe&lnd[X:Y&n[F.+7IJYBpkc(^&cfK&m6JGPV&:@.\`S
%\jb&8Mlfih/l-^9IE^r%a5gn^fHP;p/B2je-)\dNeLl>fQnjF\dUPN],#8IK_h/5e+2;hb%u/jj_JXp=H?,rt$c*Hq%<1mU,^R,L
%T3g90"Q@_GLeLEK>UD&:R5ZaJj'^9T5pa23L^CmDgiEFPn,El*%0=r1239M`!e)qk!.6$%!eK18h-bjX"GX5Hi3lnFRgeB()_k_S
%$Gq+MEs32=@1#J*q3WZLY,qiB74BB<*lsX^i`-"q'YClYILS5-3)Yc1<#Dt1P;Y7!gg"aTEZ9!D'$2qt"WHX3GhFT7)D:e[H8((4
%*HA#u%;2iV5_n9pC)g)liVa!3MVhWKS1RB?8S%<.&:&P`j7qT)A\??)`Yj)T\!_3P9>$.?OpU%,r@o;%'4q;2hS3SDQWfcdf,o8%
%\=a`O_gl*Ej*laG"k=F#/t/38((JZM:DQ3tZb(-"QO.ln`J0OL5%o2BR(6fI\fL#p2ECi,3&ZKG'T4@Z$p:EgLk4_jf225(Man4!
%g7$-]%</qB4D"``bU5)`&HGiS+LWX?e---fY7amNHqIJ3Gq`*"b6-rdk>P'=*jSb63r@B8E<1UMOa_f_2L`Fp90TGmMN-G8'T1l)
%1SZVO`HY=?Dep>\T\Qs#s0/,U]AlS;06Apc407O#`MG5ZX.)CoChn8A$HX?l%ml-_O)`MgCp)\]BoC:JX)"<:dL@mZ<Ws#[45s+5
%rm2A*U-&-'nt@,>5DE\\ho[X+dcCnaI-^g=p[1)2,Y=:K^HfJ"cjaO&oWCe=]ZHdL?lKs:JYjWi7F/XGg35s7mL`S>mST7u;a<8k
%r8_d.WhMFL\K!&JpB&.?$>!>XL29#56mlJ/M.C-bG>r``doH'(PJ3ph%13?fjX;K`Y\N*<frOiQ_t$6_bN;T%Ym=m<'L>W4Omd8S
%S84$H\&2!@B-1`dNeppalZ!pq-#lV9jNMVt$$4-OQmdG`XMFRF>kChq@sqL'm.e:ZhY$ltTI99<2uBDk)5nG",]s0u%aDsZ$J$5%
%n%%9:Vk5Jok\ZkPrRZlpblp*GF"h4*_uaRdBkEUrJ7V<V5ZDS/bjqAKDm.iD7NRPX/rk"b&NN\Sla>"SSbi)ki`j?#+YC=W+H<E9
%/'qCbKrS8@l(1Keq>?;hSo)r1p6!/8PfkD',c5Nh8f(1c2[UqJg=ACMC)s.YZ.6(IVi4Ahqu"Ra`"n30=o+ZC",DpkUVK'%d:WJV
%clS=f[?n/C<m?P[F38;UGo4mk!,l7'CPE;aio'GW%](i8W*sVi)doe<l$:mHJ$*/hlJAfL&l4<Rl\g"if9:g8C69-8Za!G)-JYE!
%A><SMllY;Tb*.Kmh%d'M;4JRlU';4k&D,[MF%%@]E)k$&V><@Po"%'Pn_0_-s5"em1Y1+&\P?u]Dj`pW.c93u+>@MHh5]!#<LYb=
%d7Zh`mt;#rWU_2.dHfb.TA,3`Z^[tGW(qu>Y9D-XG,oJh\<e.aEE)%t<?p^3B/pSk[.M/c_ok6Q\"?%r7opP(CaDomRAs4/Yb:\[
%*d-2hesWIO5K_<!\PneT?D1Qhp$:RbT0:%5=HDurh,8ipK\fYKAD0j?\gW:mgm1CZ0cO./qE:'pP,WnsAn"JJ<o[p4b+c`EP18_i
%<"ubnI"!PN[2:h(QthUZ*fSR,V\[hLW[bG.TN*YN=j*2i.^97`eWlgDAie4u:gS)=qI<-Noa:==-J@QgJ$fH[qNp+u-_*/'O[OEZ
%HUfXnRY3hbBaN&#.^&I"kH7q+7n98^ASaFSq0&cL4cD0LaW7-<7/M"?_]S0;Iqk-1H3c@;E+r/jZ-A:#To\MeUBL2bZ]Pc'#j\j"
%moM6(^6uV?V.cl(S>Rb-oS"A>]`8B0qXL2l:@YT$e\@W@q6<#].ArB2Kk9kV/1Hd2K\a%2N,$r_`tHhWT>N%*=atm/AKX]a`GFH=
%XIDR"iXfMTA9Y87D=otZ1F&4efp+k!1jSKl"%E@:$qfBum9qk8f5$iZDN/IZe`_1S[pZ@H3t]sG[T=2\H&YN&J<0s%lnO7j<9"0N
%X'o5k>HfJ/'LlGTl.-A(SNf1oT5\YZSQBm%+d%,jUiHO8Hms)30%,JoL@\eeD9H$]ku?pm,:@$LD,/+`9fR^J%Fhd3:B:rM;,IpW
%9=\[SLW0JF0/0]5NEIY1i1EoL2lc"D@VJFm:K$g^3-FLbV1)Y]s0h=iiQJuO5fs_I%QFSKmJA*F':U5C;A9HofYlC<nO8^rnc%9F
%%"d,Z_5Al"7+'C]6*&hiLML(pMNrJV'4h*h161:a*u1@]"nI7XO;OuiNHW"2kjJQd"6Ji'n`umY$;X7(l^g>b5>B\M!21WJ,_WEW
%!#.(l7[_rS$fRSLnRZ1F!C.oW6NPT6M_0COWd.M#g:On]Ea@i/N'E2AjE0Ag'ARK"(eegDkQ&T)`WUA)VbVq1LkPj2oef`E'oi5C
%^E3s_T@^%Z@Ei42o"1,#B-R>*,/?h==e%qCVS7qj_f_\U$'c[a*4Du%83Unp1fc^7.SH&sKG:\G3K#U+^tTS_dC!M]d%nj(6Ba);
%0Mep[#i-T=<:1_Qcfo,j<:6Cq'54!e4ZK7H?9@hjEr3?GpXc>Ps7TgSWr!XD_E)7N9rhs,]:ZcP/*ed*XA5=54'NcR)?QQS@5j,.
%WDC[<l8V<:Ai+VP7-8G87kD8%>?l"t`cQ`W+D"bS`GO)p1p16*o^/<("b<`C5)+PD1"1=oB&s*7mU,.<@^Ork(Ma9p(V@u"(+212
%n/B$AL?]?OE["'OkIfDIL&X$oq#,7q9)4)["e%ckW"GiMP[Cm/8S;%2US;-HpKK9'CqaiF1FU%7Q1\Nh7[PEMS04GO;mTaU=tTiN
%\(O$nE1?"8/.a.fLr5bYUF7\W*\`SSR(2QRMLs1Z&7YBI=YfZ=AmGbm9N#j`=A@/:q[rp%7>4*1+m(Ge2LVb!s-^L9#B%/?pc@t!
%ELI)sEqbeXQ%Jb!A8\"?drZri<btgic99T7#VN;`YluNW,N^h^Z6E/QMs>(fB;R:tkc43ZXDO^H"b(#V>//b7%Fa8MMH,JKVch8;
%UeJ6cCcSp!b#fGi?E&T\[(*l)BWeAP.O@*#Q0*KtXP-9ErIYA%M9;<iB.+0>&V@`>3`5C^6eBRh+)Dm8-P/HNb\n3;Q=l8C8(\%K
%ab)t&^6/@I.Y<'1*%^Y=':LuXjWa6?bW2h?-GBZ"KZ,b.Xon:+POT:p@b1Y\p<s-3BjaNs^M>X*$Ti!2iZT1MOiFlq"n72&>W$^+
%/R+cQfpY&(F!9!B9#25,N;r2`0VTG,k>hmiSXkB%,#eJ&B(W!]^e\K2rNau=6Vpad<;u\FE&FKb7*a:+X;5T?M!r/e-Sco5.oF!4
%peo!LJt'9B<l'[4>ZG-[eRQZL+eHWlXu-HA%q['"i8(!)9#?gZ\EHF`XV9Ru%e35?Bs@>DkFZ'.e"Xu6"H=p9KsSTh4]#DRGCe0K
%[WD!]r1R-;H;VX(Tg7J/B52sC=#$KDf$`pA"]e#>\<n&4(t(1hFW$&;`ir7@f)kPJA/P2J2_6@"=>PNCn\GQ/M&>5YX!dlX%4J5%
%Jei46ok<(cL9SGl/j^rtjbp[rDCP$K7W`[67J9@=>m\)2Y@k\U8P!MQ=6>b5S9$\o$0j9%2[[K+McijN?Oo8n/:$\VKnR!>j[%M+
%(-TA(d\>'r;h$3rO(][(M]=CS*m9Ce5&ta=h2\>t\TKpekkO6FHl5mSr?MhH'/k]k6/248fJ]Y:(nu[ck?,^Eo_-YWcP7Ykl=lf#
%l_cK7I^>4uA+!WH+XJ'TQ?Q4U_'JHf]5$hIOU5YH_IHO\Q9DfKmYXl(.G_#V<N_m+.(*7_^7OrUl:7NuKW_PmpZa:N\OP?%q]M6p
%de[<`A,^h\'7],#Z=6_^EW$X,W#,"=f4c)D>Per#]g;BSau]C1-!mSj6kH6NA].dViimG=:pZY'WdP82/1lg#e[*!s;pj-G9HHq@
%SAOTHAN)GQ#6?c1:`<K*S=5.6CT`<+;bP]RK!`jk8M@<K>uYD)RcJM:5?&7YpR0]"^%A1Jia%iW&rK.;b8$;mc'4LLPSMC($qaQq
%4d9A4EL'J!4Y0C(cS2+i0O'hu!DPm\-6l2Q&F]g9'"Bl_mi3-hLR'ZIPLs42c#NiVNn@^;p&9TiHQsTK+A^HAEO^0kHNqQ@P>h7r
%8G3#\R:GCZ^0M&[r3*jIU:-_Ls0b[jFo8!*H]crT1/(s(O^&1.Ln4HT&p'^fj-9P8p;>)6?iThLrI9<<dL!3Q:[]n%-0=dU%'s$M
%^A%W:^%YK;m\;g7=9T6c[NO"S+;<hE,.;%U1U55$PeCKg$$<8i#*V2[7!YZ*d[eeO>@/Gq^M:m07]Y%9$e.5B(OR$X(JRgB5DbBt
%.ZlaSECH!)0(T"H(s/+'[8>!*2[ht[M:Z+:WKj]ohlrOZ6Fm5<RoT+r8<^b13.BY[H9t&boC\&O"4WX\E[="><c<$GBM?AU[6sD\
%L/7I7fU^WL1=o88f^\]E:$k>]I.Ihi<??b-LK!KndtKp^LX*Y?72#RgH4oFoe8N7rp:\0^j[@2YZ@1lfQe*ZLi9.#e-!sB?`F>C8
%ge"aC)G&7@?/Eu\FY74m=M>>=M=HJ[hYT@",5m0sqFLPrZr5O)K):ifg5:&ECsn5?#Tlm>b,2.*cSorJmJ7RjpKGI3o+pGg+$UT4
%L%V@85BoSW+5Gamr8?tUYBsiT7(PFteVLPWGS2KFc71q4dFS]d1M)#IHc%XcGf/]GN3rY2nWH_f"`CG\-L4u;n4N<h?>F6QD2uHe
%+&gk>*qWZ?g,@^ZjgB06A1_`OmhN>5qW/_4)h,PNN]a&_Y>)XBp-)NL1qiq8&_O:j.]_<=&[.2HmCZ7eK%d=H;;V@g=hGtBGgL5`
%AigZ0OGWoi:9ii5!5ebLOLQt#D*^Xl4]X:RE^<5g2GOb@qh@p'0>;"N-)=,F)6D%@hn[*k3$P6lMeq5G;=d<4R*:i)5(@4JIR#d4
%JXX,1pr(f?-YX::rWHRUOFff`7JM0u$+1$c_T&9a#7's,V<*MTBnO'JZ,nOOdBA%@L==OGO0A<LOrPrJQN5Q@]euL0M"7Z,-cP/-
%YM(g]Z,MFcY]&Ng.&f0/UFCbmcd-)G<[JG&!'B7B(*%uhk\I2TDuT6J,M0q"!=PR!7Ir:h66M78cO\D;aR,;YFtR'riTO!P&&Q#>
%K)6]E,ISVpQ_Aht!10,Ep7k40<"\I*?:JAgi#g;sO0+SUVgX&p5><A=;^8@"#ITe2fZnq=N&FIYPuXmWi4gcZ&KX.7p*50L%gPp:
%*JbaQqch"ZT&#&-=(X`7N$/eO@Yl+ZHpEi,@t9o,qfG\G<&1DNgj*&A@Wo<hl*d5tU$[C$`^i]CHe\OEKM[L^aCsF;bLB_I8[m9,
%(5Xtj3u=G</Pj;Yo#?AOKH(C0KK4#',lcd]Sf#D;lj2,ALIHBW6)m.s4b8TM`Op&,C^@&,)n$g5lN>MtD:#mt+g%usL@W2Rjref#
%p;\mHPa[XT3C)F<pW#<5j?`LHfGu9C!p^4_X.%`Z<:@`qq_$q,I_(kofFtK^oN#a3W^_sK35e+a[WP`-"sc&iCk3LE%jUm^7Yo6d
%lS`mX*`&!`2VVd+\]r?bR=B*Qpcd*o/)or)okaHS=IfVu.YJQ:&\Aff-lA>r`[%%qPh4ZR&3jZG>KB$l0N>X6%k^&BXb_JG6FZ^2
%cF&DOl+AA.Cu]g2]ImS2Z4V9'Za@g]bN-?\H^DX)DXXXc9*8IBWhH=0RIl*^Ts/G`Y$Orr8jbpF\k=G&D1]90)^GNq/5XTRk4Le"
%Gb3gV@dIS304A`?0HUW7&T(MF?PrCfd;6O[kCsHQ1mVZK=@f!i_=2))oY"^&Q#U="AAL+96L0<tB/A*u$(V#BW'ZI&cXrH;&XoGr
%Z!=S!MeuFLC5iM`c?Hh?<:2DUQHP05ISNms.fn0u]ji'@*IkN:ftR+pA=m_P2hM;L"h!(-#$!=U\u;j!mnX<j"G3ZPON_A2m3(Mu
%3],+'`.it*pCDNMJs`,-F[>_-TMal,0YF1p1Fs>4Q*2+e#kMt&4SG4_\mPmq5!k]Z^-bcIbU/MQ.MYs#q!YYN.1Djdg8Jom1e.&<
%Xi^<'W)&kDphXOB&DOmlUq-TG1cPCPAQZuM<.3[3Pihs],+-bSGm[MT1!D3aXq2VL`(o&)[ll0t1W-FX$eh2r3El!#R30\q2:*nP
%cCEs!1P>s)WRK!;CB%]mIJX&+BKdkK2g%A4q4$[=ZH6\nV0=5:ooWMFkY(6U)n=I\fGHQ6?)ZUFP"Y^<C43V?0bgt;8;\/PTSM<+
%po'$uSp?LPBSEbt7YU!S-H'S.F^[">kEi^h`-M1uM>U6HUl\>`S[5PbC9oOmC/th+8&dB+L`@G)?+,P":=K9sa^cX<<YI%3MVAA=
%5kVM4qBP'e_`ngS>j2VXCUNSp[%Cl7\sV%!+VoC?7A&[sJDHn(K?WsD#ahdGn.Sup7gGR2U'bN\.*LGFO/U\aOI,;6XkJg<Zu-#/
%g<m%7jC$"]G$6`%PX(p'="!ge^&!/Y<[ZRV:mhc\\%1NB0mpN+Fdn6X[8c#d(W_9HfE.%q3E/P2(idc5YGQ<q:csENhQ4cNlfDjq
%m>cV5MZr*EXK'UFn6uQh-0Qj+`/@db+aT>P-<^$C@esXR;?[6ZRH!L&B$]r,nb`o%aE"+M32s<V21MmI%su8t=?LOpX=/j(1$\S%
%Fl+-In#_1$H\I\j2pRHVeB^>PZ+:E`7@hKCF1\OshiBrE54I,tVaUqn*I8uPc4bdA<LR;q@%\lehL@6dDib3*`+[D>o]9Q.Wl)P6
%SmdnH;eKKPE+hga.,#+"][)/\5B.22Cu(3-(]4KOma'Q5Kf"2\]rmmdHUKiM=hmJI_Hb$ma2<OSB1MZ03Q<akHHEUJBH%?N<'1QQ
%odlo5CIk\3TtiN1!alVm./9N^*HA$3P)WRpk%H0!.u8jKr\:.2kc&QO',VksmC+H']fp57@gH/h@cYq#;h,J6U4Op8Wi.1C'F'HI
%).``KC9&(6cI51i.W4Z4X-<&^_jRM/\\$BM7^H/E;ar5EiQe2m%rC_blH/XoKSm$$eg-&!INtDV2`EFMC-/F_Df2n=1>#=N/Qni`
%5&H?n<Ed]AO[9b]JjEmc?Y(ET_cNF'h<O[]k0-A@f7otFLm=/M)Z5AC;BZAll-8t77+T8fmJ:>&A8@4NMctHfb!34jc<gm(HQ9c+
%47suPUj]1f)hSr`f8%KLr+]VS90]).6Eer$ckT)A"g8tpRY["(h'U&g(1sd'#Ie\#Jf9%GL=BS->ttmOea<NfoY/)4#MRS/L:32)
%/q*R4K,pm9@\A<`%>GC8N\dC6oj6LQTq0X`qcUj?d<10^mI?KZ1R_d_$h9Et:6G>.G+9^^-@QiC+6SXC\s>1N*;_tPXYsg2),>Gl
%,?6`L^qSZ^VG`4c]K3&21d#YN3Khh02&09&2Ju5pRo,S`Blff=7jt7RK#32(9;GCm39D>P(tKE8.2'H+d[UVkH(9?)]tEJfRK>r8
%dlFS0)Q&e5jl0PU]l"mr/s95]C6ORF>kESO\5+MbD!=lMBpM%PhbH?8[1rL[9BEZ#JQ=Y3?<6HAn34L":ES:kXaMUG3A9-Ci(#lS
%=4DOt\Q8Mlk5s.'R6)=TE:7DI[NZi_,qro?0j@V<66kPK;#uEjVb%Ck>p4X5ibP!n,2[6(X9YkgrZIZgX.^7AN)3C)WJfneJ=a.S
%aQAH?Um^@g]F*',1dX:^rj_$!LqC+Ll[!>:M*2.7P?7/M3qht@eE[t,9"!gaWah84nC6'C;SSup_iL7g&7[hYna3]45$h3rPIg&e
%=!28?gD,^5]Ek64(V;;/:;b@F"k.Jl1a),.%V"t"kf_=R@lcbHq9"jrT/]/PMnee6^.r>X5M_[D2[HdU=+,#2K\ieOFrEI91<b*S
%5J5*Gqnc'.DiYP'G`9Oi#Zs1/<OC!1PYRrai@DHbMUm?:BH=dBG'eJ#f_1.HUpaMrlfdXanBQl:*^9hASHi?F;7=Nt\C8[lLQ=4^
%:Y_c=p*dg+iJqY`h+';*5fN9Z>fq+J#hOWcE#lUtGC+S$cM!*i(tFqAE.u$/BOC=Eic6q-`;2=?Jkj1*llt6PiM1)a'/sX]KKEE5
%T3!c@mOZ0Z']PrC:;W:dVB:KW^dYbn?A,pR]Luo7`)5B+b=/q$^92,_a5^k:X07P3UaNA3@7o%[Y`9BpqP)caiig*glKqGtT,&NL
%1M0=-5YO@"TY7j(+=`!IaNYN76,!64>kiE&rTLc?\TiI%BBVH0YD;ND8A:_PDl-oJc?ZAp%gp-YCUe'ph_tu$NQ=F.XN_86l'q5>
%m;EMYm[&KQ.$,,9e2E9"3m'h4.Gp+h[koOl.o=)nBMHLQnXJ'`dH.-J3@'%ZQgpDtg$g4n`@9;NJSf_Wjbt)8S*OO\8'<l"H21t^
%.,%'i"BG%ZD-]*g)7Td4LFaOjE!+M'BBs_tZ!!<HQS;Dh@%,(\X7h2Y_A-r@BYgbUBa]*IZL6=E72$Tnh,%@g,+Z<X=-f`3X+bI*
%,WJ^t)Q^H/`eFkW,\%5Digs2T?504>WQie#[l!JUGqkf]Wh5uaH.>mG-8>+k!3KTS6CAh:OK8Z<[d-$_YU59_T)jaf-?2I!;%_Nf
%lR/EW%_f-,jCHQ\H8;d-8#^sXZ6bPFf,]?hRI5U&XB-:-e(hElZMMs4rFj6c=hATan_*.s'DftfpL"=BqHu+,YUhu-+Rcb]#E.`N
%H2,47r+Knqp.X7H(_;XeRn(E!M&5X&bAOpn2p6h0k3fY)k'ZdipuQ2!Gmu6qAg%Sf7j$ll&AA>IoK%Ckeb;tg18jK%'faQBK%2%.
%JKK'$7j$c@rQ:KddWj>#QYd%116=Z\VV:F)Kq431-!4.K^R3VaX!a*"O>!&l=N3a5ZAV$p[ElqkmN6fSR)a468ak\Pl2,G!Ws0au
%UGtF9p\U7Knl1s<A"%Zc\_9<OP@Q"CE"W?/Vr/GkAL8[.^@l>(QS&$\(,X,_5Nj(d'Xe_FG'HG![Y1a0=@]F9'X0nbO+kYUb@LPI
%ppFJ[\R.p-=GnmlRE6j=#8kof78qHI"Db\_lBGd9k#%;Z6_F6lZYWY(9qGCf;8b;UB0\3fdO6Ng@^S60X[kG8'!a.qQ%99C%b-ur
%X2p#%mKc"$@5uf##%TbaME"M7$9G^@2-]%l>CYNpF4`[/_ba?IZMT4(e&+.\WHD)T7gBi66,OsBU%f`UffGqA\J8-G>[mF.=buZI
%L0C%ckTDVChu/M7jKJ;<*50C\r<UN*+H'eXIu_kr*XsR.2bWc^4rcT,?7>LQBInQmMs@N!>l+;r_smu>>s>oKncAuH/rg<cC"HdU
%(F$tsOA>Fj7+(4RBe[2-4f-mB]Y*pF(Qn_2G<fKaMfe@Z7FejD,:Lg1IA(@,>%'RM[OC:BDWE6^.SXRsR5EXdk*akOa*``a[iHXh
%Wh/!3:;qA$*F?1QPfWBaL:j#.B%m_VG/.I-n*'Wr<I3j"@\5c@E!LCEQ7NWJ7,HWa2P#*XNC/lHH=\rSBE+ZG5g/,'8*D)4*@,'3
%4a`9.6d&-cJTJo/kfn2<fEZo\]s$mS5/>gb<:9mX@'[qE['L2l=&,sr=^hlO`4D?bp)h_"ld#48*BHaX#R4tPO)KXeG2:<d&o2rV
%*S]c@\SHNI]smGhNAW?lW2_C3)RSlD]RFtQ*-^mp!imX-^J9hSK)=TC+rN*IDH!=RCHWQ2<@+"Fb[jC6E-p&]WeUBT(U@T\o#lUs
%K#4!7>40SO9E.8&>5OdYr)4U2Iq$^#ofcGWc].Wto+V:]76\M@e36n_^Djn]'5X*/A/*kJ(@$W$Rs1nUU?OB?[2da$\fPlJF+24\
%OH;5k;8m2F3d#8m@<M._8E_bH;cII8[n%:ud+]sDi#?7e6N1ks<llMbSp%%@BO.jss8'@O-gk:=K*1ko8cEcXgq'e=c0>B+btopC
%"klg)J6!-&2ipXb$5*mRX<0o449f4G6XFqj%JL^dW,i%_BSHplCu)Q<<D1rMrV&)15UMk*^WSf`/"pgmX=SGmL_pbQ1g8"MD@O#q
%"]d4h#q#g-?2`j#pett$>4l?oGgY=,Rbqf26<g2T'0dI8mNf#Mi[r[kYV]%QQIt6I1J/ZVP4FtDI].i^=BA\r%ub6k3L\i;03HV%
%jid?bgUE<qkX&b(IY.6Tb*76K;`e[P]OP-t)@aG[_X$(/:R1fs'=KV:<p_l`.J:rs8*JTYfFlBe4;,/6L6^Y(Xp(t:K/Ao@cFriI
%_Y_XY$*,c%d'nmg=L;o+$57[kOdiQ^BZM5F$sN;\i-4TiP:%YK@Um[$!g:bOFarK`p\]LdD/(8$7qn85]XK"V^t(5#@L;C<?2B\r
%"k=3<MOXbl180jSLg2_I&gAXIE';/OS!<&d/VU5SklhA@O^b,j-6k_r$sr%Q02`HU^Cojef_X2PnYSUfi,;4+27p;VMkE`u_"FX0
%LRG9B98MuY]n:esiW#>-6Iq%r[U^mh^J:%NVdI8^8@Po#`faFPLCI/RC8LR;.=FKinVKjdQ3pFIA2@F1@%b(4@)B+dQPFu%#`DuL
%c?iJ2D3B9fJaDDU(rj)JH]&,q>"6&JdA5qP#GjaurN^c^7M8R`asj'Yp--<d4K;/68$bchFKYnBB&TjDcV<Pk2:s`7V;$_8&*'Ak
%PT=8CM+NBXWY(*S<5!.>miC0#3p@D(q`lu,6"Ds&[g06k<QJiCRNs^=FUot/<XjnM"9@].gk/:JiuOpb7^C+%mgJR5M>MJkLEmNT
%T<@8+Z$B::_./cJKtPW(O:l8)oJ0_>%q8k(7*FPgOP_S6`N4)$RPUc-JRE0AY*1^hBoi:i(9:,d+L8l#VLQa3*W'(c;%0+ZbGi1d
%q=djmEjhP:@`_bEBrWAO7<._P&%@UL6K+"&1$$N]g7fd8-*&+.[t83'Q(R`5Qu'sJ7,I_NAGLK3-<t2<(7ha#<Af.Y+dFeK_,4HS
%@:5>n89LeuUOKYmZ-sFkg26>:NPUEOj@'G^l\j=1s.3-1fWRfO+ZO]8;hs:)/BQ=BmiZSi=",DP>lSsJZST`G^hEDQZV%?ml/Hei
%qibZ4U>Lb@W*,.O9G1OLNAej>ZcJP7[WFLo^/ue`RMWqKfF;kl&p[>"AY+CX?,.5LF^u'\646U?D,@7Mie;Ib(%HD=)OMX,2r@;S
%PV!u:X*DQ'g.^hdN#J9E=)hcNAmd(B@\26e],g>ke`PGq!sn5Z;C:%Q?*aW9;iE!eBY+F/o)Ibq'`D0N!j=]`3hPKYaEH37Ca@.!
%]%H`0Wq!hLXQrKs@G<(c4&p!*D!PkLf[Ba(188M>7nHWYLDn/jWh=r5$E3JV-^CsQ@,+^/f+%t_.Z%B>@$]3pOp1^)W^4%7"s;:;
%@W!=(Soi=kMg0Gb5_\`t>%TR"<P0b)>-+"6T<@6LFEM6-c*36HYtfp1/c.'/Y2R`EQn1Re"_\$/et^4N:.;<n*'C3[c2Jq,77/<X
%Uloj)CJs2)j#47ma*rZb,I_B%93*1I+eYj-AL6eC,(eQ1LiQRn<+&8N/Y,7:>o'b!F_0&\ce"Cq\6'CKnb@$?/f'WV+I&iJ@I`M]
%"XFqJlu0'_!>MN>b+UG>A.Y.M-k4rIHVZ)n$J8o.827*'E];fXe?+P7oVs*G`*k,`+-rOoFY/LN_pVot#bk0_;iVXiU:m9T4qn`:
%/ANUM@Tq.uLoD/(\VOmpAMXi;=nhK[`OdD=*!,Da/mI\I3IEi'=%F.^m;8m[I;(4R_DrVoUprXP'gb]D:*,E%^5cTr"I'MF8En6S
%9r1.]Hm4bX<\\^i5/mW^T^_fg#EUsU:j9<FBQE"&FAbqJF[L8B&C8?Em6B&&C6IJ;V,]3S_ZloWZEX@+KK&/ZGOY:Tq\bXln#h]9
%qssHK\MlfJ9;S$c9IcePm.-K'P7Pa>_\5Fp<5Z1HYm^^=md5oGnK'>WrPQt>$6Sg-WXUt;E<g-o[T@=*^\-""?Aa2Zkgi=/3so01
%^fUE_)E0ADY[(oNK]@p1%+Eq;M%t"FB]:K=c%3@IA;jP-n9NSS\PLo_]Jf6O@6RUki=EX!Fp'2GPgo`-r<eI4%*.crEpfQPhs]LW
%C=8<Ki41SG+,%G+6]B*7VkG%hZDFGAgh>-Un#Y!&"\^[U6LuJdbuWJsoH"S/L+M&,%\W#ZC`7+4QW%%Palq,Mn7+/W]G1i3Ogfh2
%QN&uts/sgk#(RbiU%kKjO)WU017`]CESnR`o^J-MK1pfs_E:LiZEQS0b&Mq7Mk=X"-CY\O@re1+>prS\fa'9G%$<'0gbcWfCmakD
%=N9tfkNYDIA1ehOma0]b1@5l%YW'M``,WFsJ)Tq3%`mFis*R/grM/-*NkU-Qk9@mO2aL[:M]nK&1)k*o#a8!-F%#:a-F>L^pbW#0
%BIo8P!FctEF:b:0;SNP4..>b8bPQ;FVeICAnlN>QRI:nD`#:O-!"Md,MTnp/8-)OZp!%D6eYdmHZ-Fjq<Y2O1:aJY)KEedN$rg;i
%opdo*6Q28M`)USU>_S,3ZHW$GBK!sO],?F[P$0huJa1).h<&FQ3kEL3SBke/[VcgP+=2;;3@[D#`7)k#MD[$b[!!'*jo+sIO>^0=
%1k32o?eI]To5bHGKQ.-!i3H(1C)4*GjW9M<7ECEpDJ)os8MT8WWaQ\S0!Y5O1dsRZM@$kK4f"f#Z(/bTYh02UR90-f4\^I9T3cK*
%-?@hh"S-HFg%BOUTs#E55%I\n7>l>o`R0(3^P^9e6>BP!TQkL0?aLI($rU,fY3`H[iiUVaem%mb%5*$4E;SS]$go^Y%Xth%%Is4l
%9KKmg/+!=>LU$XJ?/ci.@geQ#@cT2>Q?9_>'G@,OINkmth0.L05k?V.:<.[8BoK!?U".?6J!]O!GLl@k$.0SDL:Qd2fp:Ti`)aKU
%1?<hF\4$Y2,.5$/(2J>_NOqL_@6[CpW`@^PUO5N+$?l4D&j+3"?ci2dHFYrn4B;s;Z)ZMb*!Bt!fN9Ht!['i:3NZI9rnCdN]\goH
%8`VC`gTB.9/NsuYIjd<oK">XfBIg!CflBEr0]dK`[69JY>uD*tG(f>Qh`(SgN8s%rfI=?OVp1k":Q=E0Ca6S=fR]4qkenc\Iiq.p
%ca1:Zm9D]AO)$2&m<T.3+guMF[U!L^"gkcTms/tM.VG9'[mZ"'cbEuWNU\DP.MRYj&Ds(trV@Z(J:GR$^"mIe+$S`C<s'].D&]En
%Lr20"cKZ(;;183'+E3A+f+Zf9JX=+;n)&?fD,_%X^5Zkkn+ne)\^KE^lFpjpX8$FO!D^aq2sX'"Rj!Yr[:/H4e9N/?"b!&j&BcWD
%79@.8moR'E/cD*">I,k5S"&?jB=\9GILgsRX4nAbE0L4i%OT@:(j>^A46a%h!#41ahX4\'ln:S?ERIq25>Xh]30'X[o?.Ujkqn<T
%ULc%K@V+'Y%7Q4LDtiCDJiu`:3%=e=JNWdl0QDf00485Z+0E*gg?s4E3M4B(]=.?K$OFMN"AUNuF5hU@T"mb'\e6#285kuB/Wl)a
%G7Fm(*L;/^KBR1$+M!%sm>>1bHbZE&XFn)A@j5hTp>QaUT\`-fd5X7G^WFc_q>(PgXjDH_i,%lJ"E*&dfC(kpNL7fAPLSaeqRCUX
%F+%@GN+X;Wle<#Y`lHbW#DkIdf(`.RqiLmdCJV7JDDHEO2/=%:maDD6H>PFT894odN4Q,43o\tUdWHn8!D-T(EdsD@(T0&&')%q"
%ipE@u=FmfVY9V,.&+e!DId3]O`4e*=,26XbAI!XhA4;&ccYc)(hL?464TOV3an,m'-;eiHac`d'aRauP\1M$r$XpM=jgshaG,DbG
%rq1Tm,Tk<oWtSdce^&^=`*XPYDf1(f\b=hZR:RPX'L8T,k/P@VU$`HlM/Xr+(_.l*&In"5gj<gU-L%6%iDhEffmceA^74Mn[aK*O
%[B_sLj0"[n#O_kpRn`1a:3a)khT_#j2X%cHqJONkS%S3EnL*AmUQ,4iMSGYHDcZi6^$tjcpi+3b?^:'2WU$\Pm<dHka*ZTcDLD2Z
%pL>npA(8D+Gf3N'`@VKci&t9()Uq&,LdF<AMkq(Y!dfh?-6bQ?!S28gXu"4p8;rT!d=;$`hJ3jMXW(rebJn+R:KH#0J"oa>X.!FZ
%W6hBRK6"5*nIHDU(L>T0+7g8=M3XY8#Nb/mfX8>6\#a%S(A^p?I47lV9bma5<Vea%>V$=ef<J%5&HtR`[__9+.;Y479e%"_6>h;R
%l9r=TFE;WIKnN&nDPFGp'n!?*5p0;Zd2XZMY\uFq=]Br'S3]hO`QP]WK0&Ras'Rn7k^&e.bf/dph<=AqCee,kNa-@\F4Ks6SsD%K
%XUh+*[p$0pZ.<0p8m+`.lg%HUoi\($NUAfsMK/#tY1Q/im,g/56"7u[cj'Im'7ZD((0eI:=G!%;f*dEeor9E%G!(0<>5Vg6=(U.e
%ra='$6*2;)@oDj!e@(Yc;N0b7]R;RDdonJ8gN+ltXe8ZqF!m\qn=-SLaYpY>QB+FQ[I8%AGVjPT$e!%.!Q!3r/Et>-W"?3plm@le
%lS/dCE]V)"F_ffB/8C4@bPf6P%inZZ^oMB$XDtRjeS0UZI)(W9njsmr&Q&tg>nY1Dgl](Vn3"!5NYsBr#r.Wmndc6cS+i546H'qN
%Xd[,IDW]s;i<BI:Y+,,AdLLjSMH6Z),I[cl4UQVsboUtg380tdgGX$,3QIKbrEX5&q9.WRM7hN49hFIdW4/atj1'WGCDX3pJfh]n
%3`n#TQ5gGnps%;q#JFoV,IgBS^42Kt<Pfh3bT>YAC@V\d3$-c`Wb$EN`n3Q[=7Zh,T1DZOn@#gLf^EarR^^5qZ\b>d!Bh'%4+YSr
%)g3:tM'^5bp34]6E#Nm%p/,`I[L[[IA)!BCY]Z!;LC\L=iuQim5kYfI^uL5HE:<RLr@XT*-p?C<5%%(</m0sXrZ?-\4^,+Jjd$b)
%`ehjoA`hGRHG#Y@&\WVJA9AR8\%eT/0P%^e\rdfg[_3$q)gd1!6&U3#L53V&bZg^Y=,Mi39GbHD\9?-aa*B)r15.\ThTj3!`KFMn
%5<QTcko[RNd>g-\5MuQ*HmiX1>?nu<&"Ts'6\gHk%pe&eH;=/41Wc5/[OB=S<Z&_&ZW0a<LL(3V9R5Bpa<,g5pP8e?;sLj7GTf,P
%$<agXhNAXr!aeIee:[Sl,C"H<@u&U&DIB-*T-Aen6XC!#Su:THh]@.J[q@W)#.%sId)557D-T31lDU_B^?mk4#2_S:\A*FR<Q0S%
%\-VKolh82D1'ZhM$$H]caBYI[4jL.9:80Q!R6Iuom^Jk$\!jZcps/=j]?#G9)D^-$("Q@Ui;*2N@R)=9PQ"I+7L3=O3A9Q*Du3LF
%NHf3jna0,>*h@m,%(OtmXkLH!4b[#ndnT>4c*G2;h*?rsdRrAJDDhWGbg*L=[SL%D8AlEr%kQ2![pe#MYf^t'g"UN6_u!@^gh"sU
%*M#p6*k3R6)#&d[\l019cN8qba^=*e-$FFV,IBds+`1Is?q<a=oPI)H9Xj9o<[bP,Tem^.1_gtI3rA'sle#L:<=!OIENe)f@LB4:
%]=i@dmGI"W'-a<o-m^cbR)`pT2(G/?Ci,Si+5/InhVp]NT(3B:Qhm?RfsdGE[QDh3J)##W;87EYYg^Di0bXe+ZE*&>\EoX>C3pLe
%`,UP0?+pffBQ3r=TF;?>BSUNmf`%$3g&3G1pYClPOX#O%DiLe%1d<E5<(bb&p,ZTo^=^taHhIb-4T"r.l%:ORMgYcp`&EO[;1jQ`
%"jW>`M@JjC_hK7l<`;C+,)9u(3;RrGh*)en[Hm;sZ.;0EI!ch_@D.&B:b-4.Nifk)mX**l8([E`=6]Wk12uV$Mrg\N31FA[U9;:)
%W0G5'7.N)-9pNY=6/np*P%2<r/XX2<.76aNe]&tIX1(?sbjm!!m&QdQN#u%=E3B\2I\GA=I2\"]PTgh2.)s=CN*MbJ6)t8<*[:Q=
%TXk8fYqYB/WrDU-Z:fG4p#`Y0!1<m5I!YE<p4K<!U)t\jIbf_TJa9,G\53Nq\.9gST`5*8<JO79$fQjS1'ZrS"+L*q'>QN%P1aA.
%NskT$U9f9`m)cGDBESuZ-ZF6Xqpsj&SYb_k`/IRkg"aEB^1f#CJ;X\^ecn!Q.0R^5Ph?49_.*($"/SF?XV0l!(]WIeNNZ.?>RI_I
%pWGE(Ec4ll!Ll]3"u2XLM?#lIU?86lXoF6TXZ%\jBG,a&4p6T7;b_?K@3A4b$D'Xq_?S-0?F95f`f7g$*H'D@odeEJ;677BS4IBn
%P'[^cK"cZ:%,%fi<F=?<bn?'M58tI=mlc'u>f*(nZU[J#17@E[8FX@<S*&cllRA7.\gBH_6mlFi]&.')V@%H>RnVfcc?hP16BgUI
%d"<NsZiFQ;Cjc-8?US?G-Ii:ST)VIuq^TG=C_//9L&YO%:;42T5=Iq>0o=<)(hFW$\/fEcc9;*d1&1Ol:!Vb<$m`[5LL=DF"tI\l
%5;SmH"IGkpirBE1]AA=YIMOI<`WTpJ<QnE0R]iqXr3;&Lad,6JI[#X)7rDJQJ:gliZKcpV*s)BVfmi^rT)<4N_gCk1ViJRg5l%2j
%JKu0,J#faYp(Vf:*IQPk&U!!K"W5HaTSZ=PgY_3FFfA_DmsI/($eu>"%1U;Q!(6Y1=h(H.S;BnpHU4-p.Y\sF7BEW^D9<DLY.J=L
%Qg+>V/qmE^31(%r7k#6S2m!8l`Hj)o:KrmoTM,qF.Ha*)O*PaTS0=JCWH^[-#`9hW$1"C:W0>s^?6*pP-it*kLkM8WR`2*`[_L_o
%*_bd?n'o`)nel0Y"jCB?L\%Y`.1dFfBM1%'qh@s*)J1^S`.gd4#te]X4.Qp$9X.7[j!]1\"VYhX(3&!-C#XQE/.Cl"3nYA$mOO1C
%mj^&b4cogXH][MX:b=q^MrjUj8CX[Rk_bg7A[b+=P'$JtfZJ,o3NWXs[_a6gi^DA@Vp)6LC1<"5i!h_0M8Ml@()Tb&JK%S2&<3=q
%'f?#!o0UBTOr)])10crBd^XI\#2q9[<<e5ej_?UXlFA(5RBI1I9)-e*1nqe5r1!9@eM:Dh8Faom'f^BA@>/6G&oiZ-)r;A4&]T-B
%dmR+424IfgRTh4-b`@09qeYT&,GF/F8F0R-*C9j^We#kmQd3A'9Eisb-g#_`6f3!!*O#.2>\co.>^-)daKSS>M]@Arb?_ZZ=GUu(
%-]FUD4^0g<aqC5S0G93-3g-Y\Y"NGrH;/HI<IEOeM`GM*8KA5mlAGXAdU>HtbstP=l6aS]&udD`0Ml\M4KCNAmbhJVTjEa>lUt<o
%WNHl@=:-PbE>!O4<"<m7\#Ne=9Rnh&O:+&clQ@1uB$T_G^YBUjgVJVHX2S;IO&_tGfcXi]V_8bd7?`r!G`%[Yj7YFWI1EKXDc!>+
%@GY@rrU!s;Qe>q:SJhsl/+BC:K<TdCs'?f#)WK,;m<ZaZ0?52Ya`8DMEB?j2\T5^r/%2#e_.ST5U1KPXbI$P0e-S>M2WM20N1otT
%O1jTf)2fr+HUbOnLd:l-ed$C`RK6,';'[^/CV-ImlJjdVs$g5bRr-Q@/6,]G[M)BYS:0LPW=Vk[0S"ke3g_bW>m(]X-osE\e?017
%&4eCn[>Uo@J2O<DpnjN%$rN?9%!u,B?>Mi3#\/+gmoK]E:_fnt\R@q4k5G@BU#DQXRr'"?:#tu^aX6R7&Il2R9HB6,b1!p8(\H@k
%VqHC\o'<3bloX-4EJaI,=S;.cpp,#U0MKa2^)f=SoFC+l8@662bZZ`L(W9Cm1p&.F'OHi91lHMF9$r2YRoYNWisSMk+g!97lZ@YG
%dlKp\#Vc0H)D.TYq(uSk&Cp\u7'B=7IG1i;p*DcS>0MF[d:O@Wbg1j=\e]7V06q#Znn9E;o"Lln*JhVq6GBFNh`abGPidUu8,RpJ
%g9a]O_i=n&IMD.QDIO1[kIjl6-_KDEhkWTCE+&#i%.^kJU<FY%CUA$11];]\!0enTI030Dk0c7%"GAW]k7&UW%bd9FgA1L@10WrH
%HL285QZ^TtQa30VEr0M4T/mb#E>*C"Ws9<-?1bU4L%'8PbN<6d8e$5o>%;e"Hr[`*k'CWcoWiAK'15\F9T]TZW?2'5Ct?3Ie'1"+
%6PX%l46A\Hqp5JQ'a,6m55Y[9/P;&If1b,tWJPK:RBP;tHgT=.T)Q[E,E$1ucVK23^T,a$%`n=7:Q[lc45Pe)!Kn(,jOTW75GC%P
%FYgJX9].1#a+ES5o=t8CAra$*o32lIiMo3@O0$=T>:uJXqk65sU>^"T,p"EPSs1!KKG\C^Yi`I@^CLdDd$u3WL2Hq6NuTP#6>S7=
%e+TR02!.9=cW(3F13[Q,oDY2,;-Z0SiCO6]3a!<?=Z3O5IRIqR`PW*fX9RotRLQS(DNI3,li*(CpK=_Pk2_o5fI"rBb]/B^[d66L
%f'X4Ed\U;4a/F6<BC7aud/'&VCLHJRLH.9m4u@4FgDofdbkX'0EgU>]>1(%N-WsX,rX/]&-uasMamQ@b(;lt%+.Z[^&HL[JPA<M>
%ZrhHVr:o$R$!(:#33sBY31(8.3YYV_YF'e]`Tb`-ZhtPZd`em7-J!"Sp(MB.p52LMIPe*Cq.?*FQ-3>'&4<q'ir/BAWG,&FmlTNH
%9N<?*fo<!1pR?90N$3"(Y7"m-6aNskX).]S28T:4DC19B\`.9LUW?`B]:"Vh-L2+`1R%Xl]:!KUNb1&%N`NERH9VDZ<4-bQ4%>4\
%jF5`i=e/qUB&a8](D](\gP2G;\r>%]k^UB_0JPN]%+&lm%FH`Xj>6qZT-S0!4#'=PkU)6@SMWTl&65RBPuJCd!!mXn2s!%ro1T4E
%9mWjs:R+WF$!=itoo<H]Z"Ufk>7Z@RlqR3=[H0^KPkf_9s4o=fZ]Y#UF`7"<A1AXu6T7TKCh`UlA<F"Fg+FuJ7J]<E_ue6ehIN4[
%SB!fCn@==')W0nd`&C?Ql\KE?d]5NR:8ZhWHSs':Z@0%8hQ4>%qsU#XL4bV5>9Mt35cXdr^>sc+\h1)1%A9d%j6@^HHViRj]IXSb
%(og#d$0'^[lb9.,2B0KW=9/X#G1?fJbhrJfD3Kn'$kCX1Zupg6+(l]%T$X_'";VR%R%)/sY4fcBBi9m"`QcW:@,)e[b`*-1`^N#^
%bfhHHd*6h-A6sR;A7)Fo2gb=`dJRTZ^Y7PJ#5[B.4W3f<7\kk/=pJkpY7R?Q'tT(m1CC&gDdNa*)>85q#rm*K#ro@P>\:0YkT'tm
%90BfhTZJ&VO$L'Ofj0\GOlGF6+Fo?/?lKW8="%5+TTNS!lEh[JA;NV2'#0ESa$JDDQYh>igp,1mAAAg9qitbsj_`erk$4u-MkP"Z
%(%_CnDU(7:iCb@:[olL`b>re])TeKoL<Y`L1mJ^#lMM7FZrF#(Ck#LeU$$9U2mNRcAY/4SK*e[aC6.4fEn`roe(:ABnn-Icg-5OX
%`i5s.HLrJnmhLCjX0eW'(30p`dqTk%`ki7XMW,\pN4@UA@9FpQoEM,:Am6d*GSiR=P]CH>iijhQk(3>0PY]QV?loaH;Gs:Vm'+5#
%qCLCol4H-DS($ll<4og`@=fW/g?N.K+,/tcfCrlQ\s^'UFmG#W]@Yl:3aF6PfB_6Uqrl#4q[p!&L.@"%8[T=jYeEa+5NN/Nb)K\^
%PEa%ci\I<a1,s3LLK2i[hn2?LKo8^R=8qpZfY6`-CEL8:>q0Pqoq$*b%CKgZ0Ks<EUG^YWL_ZIU1\@7EQdl5qUrcP\Hm16"d=s:2
%%Zt$B9=qr^qqF@6VFLb,eTLAj(kcA<NIZ\[Z"Xt!."th`%Eu"hUMi11F;E,cX3gNP=m)"JNolD]JqcC`J$!Ju\jWRH8cMtT_;U7O
%g/hs!L3]p_MDVW=rF\u*O;_#OoL3J6or,i8ot6b<poH'=29ME2q4sA6Ph-05p,!S_X6->?7B]&S[R8(qiR34+k((,Dr.+R%q's*s
%#OLrrD.K4l)m.`<N7Q`HjQM^-jh)onU\F-lh^XZXnMXs^PPS_IhhL,O<"I1<Z2cQ$o5Oda=R6csQWWdGJj,(3CYAg?NBe;1;17==
%g[oBp#@^3"Lm7tT#<%1:%hF4+;DRq)C/,:5=P@!W%XMDas7p@6Hot)TD3H45[+jTNm#Hk'n?@J82q[^;r+8mlZr-_oIbDsfpA<=4
%E4RlQ'45@R%OB\!$X&`NLaEC:-27PmLMOB]-M-15_XkUpF;[p9C64d&'q`nGj;ikWUY:c:>HRscLjFU4<3`7C-]oWOIplVFE'L;h
%,s</m9?Lp+lg&UInd2(:i/X+dKmQ2FWV`&LH6I_o:V_:1>*fFM8X+.,7^i85^:fhCITp`=K3o$^I[E4m)ZO*Weogl79#cR8,E"aW
%WG@WYig'/?l4iba&:-#?,.Pd0dks<>Wu$MJ&/:eN?3mR>1O++q<JlKk,2p&ug_1!eXcuOq;Ud7V*4=/u@YrG`i;l9EC(qjh'R;O,
%buO(Gh;`3RZi"pD>d,ra*D@4I"X<)f>Nkes.7aIAN4>n/&RSH/DcQ=M-s^cYRi"^J(,[pdFLQ/$s2C_V`Q-DT/iRiSiub]rcbE]\
%'gIk-b0-0o6T$;!3+(h7&&fc_$TeI/]ZPa68kFr"6B<$7'El%V2CtIhdql_WXYW<1M&)pp'W_c\o+7H(YlT"r1aT@U@!>W.K3D?X
%6n.<93n8+rqIH:LGcnCK%4-M"aAr5/Yb_+;>Rk5me6YqVj8rQ)gmXA?>3*G$5,%CrJ6Ps?UQU<.`Mt(+'EMdM9(NaC27Ze`YTY]j
%c'@/tT8U?]k>7u,WfadY(%/dIR96bC,NI_61_@4r.W%<([r-VofIrQfs8&gd%ec0>Z87HRHQ<J<2V:.&Q?A*'+[!bZ>S:+OC"bZL
%bC;CDK,8&bCdX)Sei`qXJ,LI"lB"J3I]CuVJ'%'0U&![Dg8tY!GIkYnP>nGf2LcH2731;CZ%/57>m5gFh>)h.NN]PcV-U(89D;;\
%RjmDo?!4R/c@pqSA>Gn9$JCXVqmQ#N"M+Xh0a3mX8p#LY0C-_YMW/7p-a(?0]7:NAUGe5_ekF$0;%ke\f!Bn;`tT5Se_ncm:84["
%&Xj$;2,N]hl\>MXFi6\4\4i'+cS-k[MMFnKb&<MD>*o0sh46"Ce:NhLN*K_Q<Aof\d/pU&>0fNE^Us4!&,(rH2\[@DPYu'e<%tfq
%XgS4=+aR&k[%LYiOn)mqjgIIZ()BRp4s%8I66$;p=)CQt>q[sZA3k4N/&9OIfeUf[LqF@P)+LF=+QVJ0Sr7m%9M/LI"_2h9nkU(s
%s"%_ZV8_rpG'RarIJHh[s+$<kF4)G8P8@a7$RDg!<#tiKIL`'rG?1lP8]?E/d4\ofMT(mfFkmn-gR*2QbA0=*M)(_=OlaY3;J[C"
%ff[G6iX1h2N$"c>XrGr<qI<]pl*Z.Or[_P8k_L$)C87)mK.OVmJ!fW+*pcVEfKu9(KVXB8N3(VYB/babX60!DaQsZVdcRB"fj:j4
%X*[("2*riArQ@Pms(Y^iX\PR%CLZ\=:D7>G9FPXcql?-s@NW];(d,aA;BJt2cF-4dY+YtSN>[1l\"bpI/NPuH*CLu_m]=7Z@nk?!
%fWS\/;WAt8B&6O$]VN2H8(/FfU-NSFW&8:DLLs=7m-5*ErJPC)oO:gf]S.R_GqS;(*nr*0@5H"aF=3EHHh(B\Uf0?fNeLA*2=!o(
%nr*K*/hn,%.8:YXXQRHJ2We[\LtO"(0j2$eI5IB0Bqs6W0:N?a"n+s]^20KE[bkXVl#*'jAQnV:Xcp_i1(U:oL"Ya_]qI(e/SN(n
%YM8>'@`=V7<K8;<@4X*9HgniL]oQln+.QM:NPp/aW_W;&%U6<O"P0a>,4#:6OO=7$),BH3$!7_DLG;6W)[(1ZW9R(J?_KA!!&CH(
%Z=F1HW]!"_&/N?1reU(uK`SoZ^gP2F:()%mWbEWE1Z[?5pOhMhn#'t?.T1D&e2IPD/4r.`gUT\]Z'T0LT8u0fgV]XN*/5=Jb?9@G
%DH4NcV*hVl)u)IF]:??c+/&S[s3sGN.V9:NH-UgBe7Yf,m,714P)E_9`.uAT_>WmUKV,KXY//*VPjF<6#/]?f)4!8el`@NS^e@A9
%lSR,tA$HEgrLMe,._5lRFg)jn_n;etRU'B&k[!ddT3A+!-2B4U@#I4&c`__eiXc(5>_FM*";)*#kMBJUV3c0%?Pfpo,E"QFrWpfi
%9b?V.lU)<,HMD*HN)PrB^C"5ajM$2FACIS&%Ggl2X=&i\KUon=_ZhroFo25u:(_XLr@7u%_L?=X]b`mAS,IUf(ZK"*;*-H:EcL9p
%Nl(2DR7mjmRmGV'hlr"@Q(1QS*$R$?lLPF&R/DOV)bX)!9f=;AKea%YK(q./+$9+l(l'4H]FB6;J%;O*l3>,KVCD`l"+u'=>!)YO
%2&)shV'0\oh+JX_)9QQ"Bg&42<6i4#[TX_P.Vn(P,]HdqB;/XT*hioC0'`NK=BCKgBpg&/XNoO%-<R75C;L;ni_[2QM.)*0]9q-\
%Z:b;Y#Zt_GL#6#b-G4H%Qbu;g):=,9&7K9/b<&]/1XVaETSE:KZJ[j?,-r7*TbHm(cS7(_2QUlp,*X<cl_Pjc<'71tP(t2h5)@*1
%)7Eq*`6LPW3JKhjq4V%=$)YmX0MTNdOY)N/*8@_9TqPsD$Wq5`>-2bb\#&nA@aYjUcmftUP52+G0h#p/M`<CudjCgU9fCE"Tq[+=
%/ubIOUcp$QVKHF+rh'P`"U;HX<^j6C/-H;g?Yr(7.=H?JTpKMeGcTp].fQc/6V+ZS%9`8oG][r9",b2>G>1"nE7cd0;B:e!_qEi\
%<14Y3@(1iX"@pgpri/@8%qsT3D2b%X&[T96hs5*sU,7=JXSlm9fp46OPA3Y_Z03t='E]:GX42nLE`,G^\W4gN1"6<rVS!#9q!?q^
%'+5T#S;@l0>18k%:oNG!8nXc^A[E<h)aneol3L@;e:f(>Co_<AgNG(hU&3+OisYs#pQEW=eFI>-N!*UJ>SNu]gGLo#k.7AmcG9*&
%&+b[qe[l7@98us*m^dM&+pr!963"!arP*8<B$0QfJ47HKc7&NimKZ_!#&KW'5Z^#iln[DFUj);^&Dn?GCl-2pjX.@%bjh@Vr$*B`
%9_R!YM1r2/*j9$5U*S6K,J&)9Yg!c3YTZNA4A14a;qe.1-mr,SVcgX@O_R5p2gna_s!Efm^OOBgU9;@pG84/=kWE]]l"W`XFTU6c
%A"9l=5(>u*T@h`WW'\j0*%!IAG-SE\goPuM/=sogKD<k*kf_=TF=)02]3q12Y7\FTnt@up0q$u"rH"ug@9ni.Q(D@i1661c?*ed4
%9D"s/gm+,90(\4hk,e9d=`^QZSFiR:D^(I(b[bbCeD>*>>B!pG>Q8$E@+0]P42fIs,2Y#!g0Jpo0>AR_F1f,("cD"%\#[rBrPf`0
%EWj-,bFish2`O@@C:*:?[(bXT$lC%\#B&nd[[#Fc,PF8SH;2`gk[1%Ap0sr#\)cD(pCg=90t1'XEtk5a<1ch3d&iXS-mYXE7!Yd,
%s&D"P9qo&,*UqsH+Jlo/&PX61La^l?Jkf4<!KH:te-M=nh@NU@Eg^.)^g.\CD`T$?_)FN%elZ6CVm4nRENj3QOF0-ALQ3E@Dr)Ve
%+f.OBPe\+#\YfPqTm!d0B*$7%+()E#HV\kT3*gD252XNKqPcU<;f)6/ajB:_C'EdVT26K&>mQ)YaVPKCf2Wj#AF"D).-llLXX$!\
%edl.d$cWUS@d'lXaaokHE'UqFTl/*?`c).RXuO19I$SPr5JI/NW#9N"n,g<V?m=dlo_o+LcD_]/R;u%3(20S;]jCh:IFnAb,'nU!
%S!tXG>\,=dnglK%T&a%U"N[9^ALe+.kXaBaXW71!TA=)<mlqt1``\lC^+S>1[+""4),K<bSrT?&l/5^9%\EO"pYSF3p*@,:4R;I*
%%<"SoYdJM9Ag7kq*Mr#A=dfhlV)b1(-0"AX+DShtQ@`EZW,gKR]Xq>RZ9o9F3D7f:ZQpPRM*g[G$Kpe/YF?579Jra6$*75U&)S(d
%6U/`@Og?#J4Nh_.]?A+LImUH-m(.hQ$Q(&%3PBo*i(gS"j=Eq/ca%Z^e9AV+/u#g&\R"<r=8-s*-i)'ClhBjW@NOVj0.1e'k6+TO
%gn*>41>dRJe;TSR-[:s?n8.l*T$[BdjX<npcLQ)H/5HK]K(AZn7J-:!\!oLREJdhCb%]Rjnr1SCEKI(CB6cO_QKNX=(R2]7KW#c$
%Grk`3J-CtZ_u%QW>ZI=^1E8EsF+Pcb:@QbW^&K^Z[jS^,r=QNu\ATJI:hih)Ue^d7q^pd[(j\*0g>G-Zkd%b]'D@Kt6K-#/iF67S
%.od:G\l#+'jd$3e+jHsC:rbu)$<f\(:aZD/T@9^J%6Nb*k-I'd5E+8TCl57E$*pc8\gC3:m,Y9ehsI^_$*>s^;6W.YlVdHF%[igj
%OZ)ns;cVtdd9,Q[ft0qV-;-QqBaQP'_=VA]Lb?KQk\?NU3Yr'g\V2pMs&$j4a%\`hY:]sC#?Aj_'"r2k,uE\_%fW6fK,$@^^lq^T
%#$#k_%[B-iCuhl,MOS+jf^5%3JAl>P.cM[`EX=-H?;R\DGVZE_s(G>1NMj/iWSNDul7hZ0CEm^j":].Y:^`pA3l(l5<;OBDY8/B3
%Ls/s3-WjRE:8feR+q4&/C9kZAfpUYgU%U'5BBe96Qt9MiYq,fiT[j3A=b9!K`7t9-+f<U_V>V%H&5AbMUc]"(QN`D/\qNC+Q&5h6
%AdjC=ZM;"J<&D$kVG_gkO5+?Efb21jNU(>5RL,SI0FS<1ju*Om3R;>J9\Id_K;Ih6qh6s_j^c1^M7\e@8?/IMRre3+L>gJ(M9K#h
%Bl@#d;Z<W/O[dh[bq"EC3b8OJp,ab\H8"c4)Uu'jrK.7Ng7_>QC4m58KL\(U7iukX5.LXecAjW/QO.'>pp'H&%2-q"K!9"`B1&)>
%9>I7o$uZ:8JgBg[hhu`)f"XTB#F?48#?.i[?tZV8_aJI4TLM*P:aUf]:e@85N@uqeK5ie[Z_a"Yr7Qbt8PlGtX[gCn#HYb[KZ1*_
%n]+86!\Mqa>J"0rFap$E[\u"d<S'e<fm:[ZL:"U\jB>pgadH$,g/VrLW0Tr^B7!V9"8l#=Z*/?Ap&u`nrps9:jC+ZpAt/'tN#W0l
%F<<fimT(<$2LfngBuF2qfKQTY/&BQKmK.WTR#Yu1H)L2SIlI;QepMF:+MseajR(X#g]C0]/\&-^NX7<:[T4C$H.@`IQSFg_?-K&k
%HX4EGnn3oAc_e3.\t4-%Fbbl=1:<IHCrpqEQDE?cU_9](R;*bm>,SqadlZ@]d;SuSR#>T!P1WR9HhGB0ZkB:?;-rsh?*X&)AGT^Y
%nSne@EfT6pSi6moe?q8!UPt2to@CL&o%ik\</a*a<FonK/#5JAi0`U^bge`WpW,,gWQQ^hZh66*E:_Xm*^WUSEd08]S)]i=WE)'W
%@T9Y&DSg*k=^kg>VtfXFQKUjGERs,!7Gf?7'4S]@$nHBM1JH/hN<A\D4b*=265!40;8.NW-i9B8&.Tgk3Zt-gM;ZZC+jF9=-g1Cg
%@9U$qS\LS2IVlp9I.RC/c2Vj5oA=b5H=Yalj_RK:%9[YaIX0S0VuQMSMs?o*H`8f3S%25Y<ZUi5((8H;SNr]?eT/8hFkqfE#oKZf
%DCIZbq"BmAlWecTSg^/N,'D.2ac76:Z0[NL@V5dbkQR13!VFsWT"=FF_`^6D_V&,<J<\#HHs7]GjEe/MGa!f^@H;\U)R[;#<R?d4
%f6,i]+5?eIb6,h+29)1-,bU07EXGig8/6r!S_2pQ53hOK:Qo^H\S8?-/3(DsWO7e[ch("Qkh\Pum5kb=%<kMA5,fX>rUF*Npnq%9
%M=<10eST`R[RZQGFTeZ#:(obO^MCtVG5#ERs1sNiALH;JCmE<@HBRIKX/)f1S/m9%/QjN<0!O$2pi/"u_8NIuNU3\md(\RpMJ!ur
%ZXBcSS'j0Y;j"a,KYQ7/2Ge'"+hi"b+kZF,6[@N'oC"__e;>Ok)b;F*D\EQp'+-^#E?L&n^S1oc]7iAo@Bl[dmpm(LkZ&=8:XQkJ
%7D<_)1tPcr*eV0u4H;#\d^$oCf4+:--W$D\fD4[p)0iVLDNWRPNpQP;OBKt(4+HOSc>T7[0L'`1l[9`Jq-8b[`$oXtQC-=jLfI!D
%db,lF%.6o@Ek4ZXhW[T8>@teV?RKf2_uB9A[Qf.3R&F+<gGrWXZ.B:llmsIHnF.[44oLHo;6^J;F0\2f@rP'CnRMr(CKd1uE[L)t
%VF>Opr6!V;=(:Rdig&d>\N-%<c0;Ya92n^CHQA:re>V/M>$g(]qKTHeqYhdEHMj?O0u;HFX>=_Rq"Q'n+$X=0XM#B*fI:$6JmXSl
%&ej'L+=\^l>)rse@[=E@!pB40F!/1%lLD&*d(cl!9?`^WHh%*J-[^"`h0(hIbFCfaSWsS.Sk%rR`Y`>Tch=_Vq0I;GFmhG?l**f%
%5'9?X[n\TD+1o;\5m<b:@in^TX(SjkS[E+jr)pk7T^*&_mZs9UK?j,YA_ic/H#6)<XCga(_%MYj=R_ST34PFWCqUPi.7mi#kY\oG
%Y;L(;[cG#![lub$V0.ipl:/Q>'[.\V7ApW)":FS!aO.#-<%J4+^+$hO9,J9r:_cGJ9lFY>6SC+0Gl)<7V+T[_n;g%$']0$[Tjmhs
%*LeTE9AT319=)&aZ5YC;4B<8B0V=psI+"@M9F*uGMSR0^4B].>"fi@G17Lc'i'Sg6S<LhrVOOk$O&ip(]`rR:_`oPb\A4rBU8fKe
%O81RUWpW#ts,/1t1HitHTrD74$jbf#T)W(FoubV/nFYh^7`W)2ff9+c;3G[GcQ)S9q.>msm*W/k(Dug*X+lfIK^+ijn3[C%o8%7S
%dk@OH\7JYlA0dEb'@J8<mHfHWgVR/c(K+,C2AXUI`[#lrh^=K#LDL!J^Z&c0X6SSidogTZ1N0mJ:&,cG;K?.f>4U/(Zc,/sDR(#$
%1&)GiIoRdR?cNJA+b8j'm8;APHB'!:a^1,!2=n/b75XGi/?h5V.F'8FiImI$QgH)'Q,8p*h"DYemaf9O*J,C)I=)MP;j-rX(?C4J
%g5aP`F\JB0T#Dm?c=lnWU#QLdb#iP[^",rf,T86p;>/<^W]GfY]:#9QUYFrA00"@Ip=fCPRdf2cePhbQX'(cqD.j1DFTP^R(A)fu
%rYaO!n=SG@q18+qRg&pO*tFntG%hB_h3)2+Y)S;t@5`$Z+ZA>?bUAQ`n!:)Hk812(G^\g?7O;0rbkA0iVqM+FHkYa>\pTG-]3,L.
%Tj?9ZIda<3))M-(];2%>Y$?2H,g%WA;;G;QN-=<iANb,,Kt;5,W,==l2&!$?/RN8bPo;pTLLj(D72d#3`R<QKbqL=^(8*D=JHiEi
%ODD,RrC68Z'dW8`jm5f<[W/4"6SUR#EdVRG2cN^`a08pi\X>%XG<b`raY<S]3QfqgI_lYS)q:]gbrmp]aUn\:*'b&=(t\uM-pBso
%M&A%p&T&;LXSIQQEI8SpkJ*V(q&M;3B1J>k\bG3Ur:9H%#SW!&7><L;Lf-Q5papeQU+\m7HbCC&)R7L.il=f!:DIgq7k<))=Dp^:
%ipZS.C_o?FPj*[Oi'pNprbV*S:dVX(1M%kr%,'$XaDFJh"JU[F#n17R;R*G6g3sl@!U@Uj^0<-HDq<UhB/`._LAe:$T9Y]^aW$J]
%I'e7%JJC2q&"C,oELi!5N.?LWh7K)-76h]YlU5OZ+3*PC%<4A'=U4$C=J33.f?b>IJLO@Ojfg+"RqXctQmrNU[-8X6&MYk<qaaPG
%GD`,UeXt'DEE!#uQl[fPX/g6M1Q"7k&LU,+oDM=j4)U35gLbRUo"dL%m:G+T;BS.J`9TJi8(g$(_hqZ*O@^:F5nRZ)Nrjt!I!!cd
%)RMcaS7DZ+/>Gs:@1m+0YE8;Z9DJR(br0!hEpJYuKO)tJ,3FF@khZm=+n,,<)9lM:Y=DLiB_+E@Y$G]0>(9cGYYibYYnoa`h"`L0
%9l]SSfarj$#g1D)KNnkA3"Y+aX8:dQZgUUK;<eB7BS$8%]kqi#g[&)'D"6C/Y.Hrq7fR;+^?dmqm+`:V%FT]m'Li<A-l`='qugc'
%-iRfKbWh+/NY_1^I)MHor2Ea!bZk.!?r9'kpD0f[*D#M6^Ui@i'sr*m+k50e9egt2iS`F\@%WH87<6mo:^Q^:9F*q(I[4.I.%;O1
%h=1cJME<*ZQQm<QUk#6,ip4]1RhOBr68!X8_[0K]AF&!%p$KJ7:N,cqYeJtGjLIE+_:M#5`_WD$hnrpYr9`Z5mue6.SqP,O\qQfY
%=8_">6(8Hq_(86&E(mWu@2n4jG\LOO*6RLG]kqE5!IPd;/Nf1m'Z)(,=q/k<U.d9"6h`L4I;Y=4/?6>$YKAZ#,O7Z92tFA!5lg"S
%7!PYRlb3_5Y)G?DnC-8b9Cfa8-`bmc7>9NeoIV6$N!7>JNX=`o'dQ#m%e7Q8i8&2SoO[77/A+uF\H\q=4'c:!Q,(UQ-mXhLS6mE;
%]Ir0#%`5?2]f*lu/--9\`QjBEht;%B_JsjR_Y)n/9[239*<cdFTnfbqOP#`rBVaSPCqpJoc+kTfE.,UIE*/e>512c`$G8Y;h&tl;
%*Ddi:d),<mTN\Dfq5p*6dI8c2IWlsajNT&GXrF3EpS\\O4jAPqm4G7Gn'&XBJ!b'@#Cd.K?D<-_'0g21Ed=p)<!W&rNIDl`HLC!s
%])UX21gDVCqg]6oDj^e70O#s:/%r(9n9rennF_b:LR8@,EYs.=*]in,b-7W8a/&AFB$`Z5Ch;G8M!X9S@QA"<o?#X`)*8L9L]=_0
%d+QMeHF&Eao`hYG\M0TGE9mo`&6V(u(\8n91i+t!I"2\W&LKU5o?93;31]E;RAbk!WET0"jl"=%.R2@6;r`*NqhEpD_cCch"6d$/
%(-->]](cTBIH/ns\*jH-aA*F9\FbM(;5Gb4Hc$WHlKLs#69hrW=T,(;Dd'NZPiqIB'h`gW*j9a5m2rmHnK&).)7G6Ab.1t)DMDQ@
%DP2-L)4Q(\#h;^,d2&aToepBf>gSGD=i"":-OOJs5$lc+e2pIr$r0ZkE6OaL1.:Np$5'P.1IerLhD*7KYrU'\U5&V#GEn%f*3Wr[
%)ImmsK&I=5SFX5Dnq9TRX4^rAh?3bj1^L&30>eHhC>4f24Lm\5P\.AeAb^8S:m%=udo4Bo8EW6j`:X+FdoPns!R.RUj4PCe96aJY
%=d`\tMe+^P%?jS^;!l=7JXW;<S.cQMLMqCK];Tm$>*-jY#rBGCPm%sa&uPAYB"-]s7a<bBg2'_RS!p4T\*i),gU>j]eL"B.W+9T&
%7`WQ;D19r/Xpa*ajnhi;,\:Pjl2>R"&E)[h<_cC^TfS]NV_U.jOr!a8A=DhS9Sk8F:b-P2\mhXE=e:YH+XolaW].db).lJGj][4E
%&"[<1fq]M2`Mft3W3T$\C.sRB%?Tg&ND53+!j?5<@:!(\RmX?_Q"#SDNdeBgI$>OFO$afOM3*E^&l[>8k@?3]b%5R)Vmth]OaG&+
%gc@O<nlhq@X2;;'0mHeI='e;piA=bkPFWeMd@Ai6F*W'K,TH9L+M6tPqA!qAFHU#mS>?PMf0^0J(IE;?V3uYBoU5<T?@g*1CW_PW
%dl#Dmf&TsNJauuBa3rsA>e4:g=b:L&')0gCLBC_s9F%h3P2\k[%TNq>B..=!"$*#"6;p/AlPYZbq%Z&!<-CbL%[^'77,p&_QJ.4/
%3iooeS)1]Sc]![=jt8/[l2K-(]XMZY[8\\CQ<;;tTFK&XNqNI[WW9Ab1(YEJ2TRcuFV%ah1%8Pr-rKRQ/$rqhLK]q]NGD7%o7Z>^
%*S_jFQ+2uO.F^5fqG5_6XQg^1[FJZI@P^.j\I>sX9TV_Be)9Nu,UK,<Zg/L$VbfCMmrEkAKf=GXI"kd?fG/n@C/iV<'A)&`5\[O6
%^+ICAd:>ZG%&n%sdL[49c\^!$6qVR`aNgFkS?!j=#.i#KM?(%DZ\Km@2OZPQXduQ\kOm*s!WMI^*oOt0jt.G_G>FC8X!A2aAn'e.
%C*SN*;9_?ZSf#)3ebjTXQ\*`.7PTdTQ[He)PPt1$n@+C=c/`rp7dmA)\"?KV9'R(dY:J+]`d=XbJrh_XfTCC0eSTg.?Zd*_pRpgR
%4#jj,Z7!pQ@caGMlLM6Gl'@a2J!n'lc)hg^;+ZdBETl5)Z..Q)5D2\cW2)+R?uE\OCDZJ^]D_Wi3/1I.AYp#N,!a@,F?g3g;VBb<
%``.q#Fu6j*N=09?YYX6tqcWc$,ZMg.m>uhI+.Xh&mp[M(h^6M"o2crYp\EpQgO?[,@=-h4Z[S.g]_O\B3JK3+,9!A`@<o3g/%!N0
%[`FiafTA*s`+RFso2L&t5AN:1V[r-U>4OR1"[gm%I*hL5VM)A;(Jn"E4#P?X9D]_%2pT]cO7+:F5&u<sT/OcKr7k^TKO9f9.bH!2
%rN<S[*J>YKXBl$V"m>#McVKifWKt!En'E]<*Sn\\`4X.^rL6d[<ZHg>6iDG>@u&*;pCEnKTtIf$,.f;R[U!@&69V("CQuf%9^uf'
%FHPf&FF-D)Tq.gXY#l_$^I,V4GBB2:&b@XD?e>Lf\)\sh)sV@#Q`7\,i:)^Hb$4Hid[O_5<r2G4eg'J9mX?,.AV6oI\d)KEBdV"P
%T:]@aflVN<%dd0Md9WbBb^7!P@?\mcOJ>XUTYGDgm-sN2ro"MPPdf4LA2f4B)!>oSl4N\q6cDktU06rEbL/"@]n1.-BW6[VZT[Kp
%q_r%%l3?Z34[@l]rU$(Rp/W/EH:.XbZX\d2BD2oYfqH'dmNT90gBToMeQjm*aJt&3QJfZ!-^;fH7#5.h2rZ/:4qP]#:-9\6eU6Qd
%VT=b!jQ"F,BRWsBmO7e"bR`mkjB>cKW5D[ao^5n0bfAT]3]:>gn*A(TITKJ0.k4tS+I[7-PUi'"5iQFVPMp:R#$NUaCD,,#Mr1@f
%SMdDPA_O4A.rc(AAQ)-0'r2+C;1KGV_TLQ:\FHF#<-bW78[/u)\8=tEHkof0V&-o$/ZElf18h8s%V@F*21Kdt>nZ3uG_)U63kuO/
%Kf)<r>tm%[Tomb(H8j$[LZ[qfK^GNp,J!Vq"+f^amglgODdcafMH.95"@=\l6]-?rC1G\sDb>-tLh&9>>3nK_I*9VX!cCdV7;g`e
%I51.?cl/cJ?EhKV.eYDbN;C.Ek=_0;p!"Rp_<4joY/1@*3TL<W6G9"`m:`<l>mce9d]A)&"A9t,PF`@5<6Yo$lD+e$5B=G\`qtc0
%(M%NXE3W/4$/=P*fu$3ET2Q/5D$1(g;;%2rYRRY'01$Vd=.j5m`LcG]QBWsTFdVFsl9`D<MAY]Ug0_C\&YDaWp_;#>C:4!KCW[nI
%>qk.^dB.!;62#"0NV[!qLYeX<esul;=FiRWVi%DI[Z`,G@+QGp22Ad[OJ44R1Og'>cNP5]AWEGH0kd=q@4$=6&2)&sP[O]/[[di!
%',a-=\*MUDP)<,.TTQrNlq_7mbg.4Q(6M8"6Rsfj*UJT^1:1n>_mU/233g`fQ;9;o8s#*@Lm'mWIoq0G1D%pj[NYY#GFL>tY+qo&
%H[$>JP4LUAnZeR#o:I$a0].$Al*S8f=.*kH`N)l(W!L<ukr@3[Eo1c1gfu%o](U,oA/&!ceoF#1l&'LsJ)(TOhgIH<mmK`ClIZF+
%lScAurnS$P#2G<gl%aWK[b'@3qgO>H5KAt;gsE9_IC/E;gTajM0MB!;D1>5K`!kABV!(s(-ZaM]@N\A(SnND%3pA3bTA;N>s&!I%
%?us*Q^<QH<EAX&Z>X\o\&d-YG(MF`Aa!T8,\"X#3@29,;,($L4)I5?n3R0]G.;<:7a!%]=4o([*(6<JGn8A`mFqblH[DVg:6r[."
%4NR3_7l_a-l24YER\-\<S5a/Yc2%nqpJ+q027*p,(pmM60m/%LX/RbQ-Ke3?`[\#tZ!DE!noYm%j/`;5qZor/WF-m&NfH0u"ZdG>
%m?9?8`dLs]VEflaBqG*X>?=*pD\I9Z,ai_Q9^@#MA"T7.Xn@TB,7-4`2!ESA\sT\FH2:j.@X\4/@Cuo`K0)2!REg*'1MH3%lG"Ke
%5Oe<5nd*!.:HMb'*/bX\)Cu"(1md_Qe=]AKZV[%[5>5EfQK0[$]X0h/Vf$$P<$m_G[0aK3GR:`,:QnRun[MZ1!ghiW7W"^t,]mon
%9aVMI'Or?'RKJqWmk3A_7/Z+V<DIC+c,u!:B761pf$c2JB+/rd]YOuI!cN$2aU*NED26Dj\X.:tf[-p@App9fI7'@sL/.$&X(:41
%EHL"f\tQXg(kE8>=R:W,KSA`HKCd7[$to,TjO\f<!jaE)<TsU;;OfsV\)[L-GrYC$,MonH,Z!MRp:(Q3*g84hp&d9$RsCXLj<$@]
%^PFIp*P/06H>Obl%M1qq]E&IHHeQW/D8Xh6&dHCep.C]%=g?f,0$;*<BT8qN>=;6(`jh8s\$-j8X5_K*7b;f^Vt`B<Tl9*Al.F^\
%8t(AmFqldX.KG;ZFZXo-c]2<\WdaF(qiC=tf1)i#qgW!OZ!HEr";/f4Dghnu]^`D5#GM\Y98S63^'<&gfA4b3o27_?LLW%S58VH#
%Q2m8npndU/h=nKfQ'Z/@\(V`eFrO2-CHu)pM_77n1i^30?Q'Beb!0&\kIu/8qUK]Pbr6QQ5Mu>6WMB"(fr^mDl]OU%"s[5:4Ah.G
%==8IX;L82EjtOYolGmkj</[e+,.HFU1!f2%^V:SQ<]mRH8fcX8f?)X:7N=Y@_%hJ[%n,$,;*jTHc@RYn:%^A[HB)m<dV,tFAR4BY
%bCcU>Z1bbH1hNIN""i1r#56qcWiF`G<8rilI?m8?SR<4lK8,[C$sfdeR-MZ=a*q?T2RT2anrGUSnhcY8nKE2-@$'V.:Z_2'UKTeC
%h_\Wb',DhfX>a"i\:F:labG,kPb5AK<<\7Y"0VrO(,Dh2fm7fRlT[t7WFF[A6f#B^[V;c'n06QIo`H5;=Zut]QXZ7YBgtf,NZF)U
%9oOaAl(cNCMMip+)<+*nI^)g<L<l8!kM9%CdSh*Fg$bW>ltsN'>m,f()f+kY6XpU)F%\N@J'.]3OeLFiUeXj1pU>F5.]ru2Yl(/2
%G&NlKW4d$tf.`u$,Z/bS]%GWQ(fKKCe]24^*G)B;WcSb1IkG!>F__GUqMFO-HPfVFY,A_f,=XBIn2="0SVOrY_\KnX2u"PlS>OHJ
%,P-k/C$t&n!>/Qo0B.UuAb0j.lt,_V%9,,.&6Ad@0l<Kr.pnB*=s@eQA_L.??gq]\du_#q9qPS/4,mqcDqPlLd+m'sQ`25cf^jeO
%`U_!tea,emEhDcjrLmu2Nmt(pY.ahH28-UP8]ja#rHEh/e`AlOS6NR*2m6D!o6/s6o21M'__jCI)G&O"Y*Gi_W(l;5VWZ`>GFL@K
%:1fYg0-O'h_E(@RlkWhXSP643h-skSbk&HFQEK3^2%TA$WWjc[([BH'cP>sDQGPX\i$3,:b1JNeY-*F%$;"i3f[8:W<T^:Lb53-L
%dDHne-cJiL?^UMR3nr7F6Xu]d/B2@=\;&[mK]8s'273h5J:*Nu)Z=C^0XteqDbI(_okjYm;>t9PH+5?C4PV#8IUB[uH)<Pjno%]h
%Q%%cCjQ]1(V5E83'5ZPb8uoBm/q*]R$$Ohu5E[]-C]1V>,s5`[n!(H9TIRmN.]-UtC6=YYW'hP.5oAhGQ<iNuk_%Ak:Om1aZ7CT>
%$'u_OZe^3q+U_3!2@e&<%a^]#l;Ial7phQrZ*Z@RpdE+$0@#'PkAB#&4+7_dGmgPbqRrQN97X$'H-7n0?,*204=%#`1Kuu7l7!,'
%3T*s0XW*_/CE\Nk[i$M)WnT6AQEkd==Oe8g/]mt"Y?.K[kD-;IVr,aVeL'b0A%s%YV$Xm83UD#P2:?dsF.:AHGU+ZY5LRukXVhi.
%oe5T8]ePZ`l*7PE(&uA1Rl/\bZ]\`GP0-U,+G:NO'5seh+2icd@n%L@9-0i`cKKR.#5dA$ifK9UTIa#ei*:YV>][(RB#?!NicJA8
%\'.m6<-h)dI7TTNcD\EhhEIauT$qqlm+IqJah>h&m?]BYLNZnr3I4AY`f]-5TaNcDi68&FaNFVT4L5C92CtM1D$'?kZ#%NKI_LNK
%bg/+^Y'T%^?O0ZhXXSG8[t+CqitMRmb27#90$C>Og&`Wl<"1n'8#[7<;"eo8cl]dU&ikh*,-ge,9+c8P*gZ4hM+D$$nREQUXDRZ8
%.][H6Uq&l.i,HXkOqS#+DHm*_=[_-5g!jY&F</P:bGeulKuFT^e/9C%'eAE#>AV]F>prg2_Q\R'$,,"iZ-me7qYJr0A"h1PcRF^F
%cB"T\.-f]V7.Ku[mj1id8(&b.M4N&"mglIVdjiD[ppaj!ehFsEIBbSSc_&N5Od>PYc,J8m@>3Lk@#ZDYbc[CD?DNV(2a`dl0MfgW
%UlM9j#Eu%>\J7n&!2)'&:iK\LD=-=NX6Lp].X]DPfM"8H4]Z-fXYTB&oTju#=<MX:F@WMc#Zn0^o]:X'iQZDb:';!.1-@<L4Rb@i
%(=&oSO#d*[m%6&>bl/ObJ2_)>,95nK?:He+'J$&CUl%!*lV!f'FE@-Vpb!"";!cGuc12J2N?jBQ1aDjp<@[<CY4s?`aVneoeWqO8
%1sa%\h6dSbn6gTVn_g,EfDIDQ,KL:?aEi@1:!>P_k,BT)(tFHcM^2Q$Yn?28X(0O@k:>FfRiPc!$uQioV6Zg_h#bO*;;@B1[JN-8
%nO#Aoc\#4PltU*N;h)*oVN`Y^9?7m-[E:"<Q)hEr9!4k*:ZB.!&&?p8-\(*=;1`2a3`%oQO`XF`)CGEGZQAe!nn(uTS2canamN_<
%2^PNC7X:gCSE%_Mho`IlTZ7K,24rkOopFB#a0:I-W:OT[BbJp.9&iU*(=uNoOcDmr-cjUol%R,T[DdEHZttt3c8@FUEG3</2f?'L
%bk<i1);3>lVIdd,B?FM!.1"+eQf:;4nu5VO,G-dH>0/7]C>%CBl-sS37_;S!`\b-i82jFboQP[(5]&$E\6e5JBt9PK94OCp$<HLC
%Ogn@mB!_N>F>s7FD,j9\&n]mQa)<9I2!9L&/#UeHCR^to(D#A+nk?Gkg5K)>oH.gsDqDFhrX'P2k&W[t\<gb>cL!(Kc\-A'p0l-`
%#@+iQ\EBA6Snoj^/lu4UK&_2_Ec'7hD,Y<$`P5hYX[&(C:0^ffp1R)okuK5=.@)n'+^aT#qA6-c^I[2[7I'R_-?X\4h!FPee!OnQ
%BkdaLDsCG<S(\up%(aF%/IfW0R1dq[[\K1D6s5@)G6gTDA7JbtToF=`VJ`AT+3uO@`1Hh32q-.*&"&+.+&,+05@>CUJ!AU;cVAUY
%ahmQ'a&+Ge)q6(7`09*[Q>"%Q];n7ZCs-LR[<Z_e;?7C2jGWb#Sm'`1;bq:ENQo@^'*ddYOki`OQ>ULnR*mL'/U[GjSG)"]''AXO
%T:)7-1J1-+oZK_K.9G/YWSU.OQ<n2\a5V/2g6dSB^omNGm@W&JhJ3pkZj:l((;!2K`P%Bnk.Nf7EUVFO+od)#H_%Mi2UBmV_sKD_
%]9ks$Fdq@ZOGS=.?9]iVFtt,qGE-S`fK"=3[laa,Ycmq'/gG_mJa-h4)em$jea-1idHteI\Foa1b^Et"r5Nt9Z2UI,4[e:$V4(>\
%Tj-ooT[b:a:Pj0t9E"A7Uk6b$4^1[:!uR1?\W>&YIQG7:H>LE5-;*WOjF*2EK!eYqLk=sJbY'E*"f]J$^<S.S$!)H3pkD;G9"<IH
%K%igqL!OEb,YVENmRePZO3e)>dIh;$kj6:?dse:M:?GEBT2=^OQe"?MGXDiAQko%L+k""5ha*=ZgqWQAcECLl#o3?A=]!<bUdgAI
%Ds5ip#.o#hTl?*L$+0X1Fe)6F*&e:\mfr\3p>TS6*R0O4F)7B]#d?R?ke1)7(N'9.$._P'r;4]29&qL*F#+l`8sD_8e/&uJ`1fLW
%dVl0f!X>R2m!+jBB.tZ!9t<A=DP*4/RSmUj&\$ip1R&N!'s^Z;&p)2^H4#'],@n1<XHJ][?1q\!HRo]aAQ<+a<V^nVcD,[(A!sp8
%,g]N<.c+aBe?[.a'k%`;\\mX1V?iZ]UDQl9I7cQ5buac*FGFlc`VWSIgY=70SYr\ZW<9bCI9K7u<g9-0O*.qOQHZ/:fT\*f.]2u#
%Q+L!WZmqs7eu/IaNMGH0@L^mT-G8B0>9Su((6h.XmUV9'9XuZKlKIr<VGRjd:GnCXKCscY=rP-p\PClrHO+fRf$FT8`KeBG<$,Sd
%eHs0WEtn#7Q0<l?=C[@nlP-8X.t2B(9K3Fk/5.CRSdB8+=iicX7lf$k>m3`g\`Aj^Ya*7W3oTjEH:P57YSfhAg.WOq!JPB$'Y3?!
%Tb5CO*3lWrGBd(*;jEfHS?;_?kR9]#H?52t4Ga6d3G1*W;e0$&QpNE/N\%PekLEt>3Qg#]lMAXqGNu2;X/cR+R0#7f922PUef;oP
%)E8jS7-OqF%g&nrQT7As'A!>Cdiq2+i06;/dA#$[LZuLq;KWP7ffP"TbWCWUSF9ss@\31O`@"31Q'.qJg>Jg)V6Ou,=Dk34P:dJ'
%fOQR)8fuRG"+Q,70QIfkaZ6*(GKRUNB[L>9`3c(=Oh-7)m2oNj4?5nlhoBWj4?&13e0#M?Z1R*7kt>EY1H_2mkl=X%phjl[J/-7)
%XAgT+h@kQ>>W34VK##QX*/U7:aoa^Vr3`)AM=Q=.RF*!>65@Y^`)VJX%\8bi=L1].1*aQ``RsOi'H82F.'F^;;4n(O%b*UpVZ]JA
%7**++:G[[Lk=5eO(MrFY.#T8oeOLsIh6QB\JiMGcVWgYri\\(f;`@d^TF:<1Ckm%HNckf':TG1'YV,9<r\EiZg4Vk:NoJlU9h;.!
%/5cOT8Cl4rIN0UUmgeFl:0?E!Xi<H)C=uM;Ti<$Z=;U\U8$#PL.BSA?.0;QPi@BZFK]k`fEaAn^0cCUS`so^A:,(]*=R3e3T)%kG
%OqRloKi`n)`TnM788?d-._ctqh#KaD^DVA7@1RDG+fSG"-DqGWEk20(eAnMg`i-_6(m4JW<:7Wg;!E(fB9bc35%s;?=o>'8OR8\^
%N_ult*_V(t,u?F:Jq$op/X?9jH,_[+#cSer$'XW)/g3q9N*2nXAl^%2:8^gDZZDcS%PPL2+1jSNo<1(XO-8"5#]^Z$Hf1$$Lb6S(
%W@gFk'oe?N)d0Oc29#bP#"m,Z`;i*fXrPmo02I0Jgo;M]D4H8#$up"db4im>%?u[DT%M%PRA9,&Zf-m/\oM</%5'tXE"QBpo+[&o
%2sVNSEI3cU%&1]b^ugdG;S1bX+k#$VQb8*7MbPAj6h/a7<67-Ec$)5/9jsErJ4n`(*-#&5#d&Cm(?<`AcV-_5="g/cfp7Tdoi7k&
%r=IRfj@mpa,=L2tQ038#fSXnf.%reI-nQp)(/ln2C2D*EBO*/So&IgWN/KUC;-]40LN&1s2k)oi7q>a8c*Iup=Z,L<$npIQKil$E
%RNCHW6)^$Ue`f^i<Cj3L7-b0C4>+XNC69YEX0N[SGnD6oLq7mcGflHJ(hpY#U7obp:J+oRYo0LBbmKM6(k[KBp(%77PZRg=&1P7j
%;g=NOPsJ,%Se1--dA!FCIAY/ck(S!ljJN)@6E7b`?p7R$,/i.q-09l^l?-i'!`;j@U.%QaV`.E07?\ni&DDj1JcOi]3Z;5%j%sk@
%6DX->MoIDp*M_(pd<J0HE]H!/`;RcN;UngC)i[AC0XVVIK#DA_4N=QU8>9WG;@7hEemb)t:]2>G_ZlGsFM.'@[VS'[*D5Ig9@g"&
%<i"LY+*e<MMS_qk3k!$Y;9D5.l\%0+Vd)pN0N!Pldn4_KXA@_**I=E%:VYcD4oFk^rq#aI?`3LVlg;TF%6XQ;I_,Mu49+o"^"qR/
%]q,28*mUsmGg:F0^A[BeFM#9cqsAPi]`%frIh;P!Idljrq<MtnG<Z*MoH!,~>
%AI9_PrivateDataEnd
